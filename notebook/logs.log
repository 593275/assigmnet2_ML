2022-11-11 21:43:57,650:INFO:PyCaret Supervised Module
2022-11-11 21:43:57,650:INFO:ML Usecase: regression
2022-11-11 21:43:57,651:INFO:version 2.3.10
2022-11-11 21:43:57,651:INFO:Initializing setup()
2022-11-11 21:43:57,651:INFO:setup(target=SalePrice, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-11-11 21:43:57,651:INFO:Checking environment
2022-11-11 21:43:57,651:INFO:python_version: 3.7.8
2022-11-11 21:43:57,651:INFO:python_build: ('tags/v3.7.8:4b47a5b6ba', 'Jun 28 2020 08:53:46')
2022-11-11 21:43:57,651:INFO:machine: AMD64
2022-11-11 21:43:57,651:INFO:platform: Windows-10-10.0.19041-SP0
2022-11-11 21:43:57,656:INFO:Memory: svmem(total=17090736128, available=4315824128, percent=74.7, used=12774912000, free=4315824128)
2022-11-11 21:43:57,656:INFO:Physical Core: 8
2022-11-11 21:43:57,656:INFO:Logical Core: 16
2022-11-11 21:43:57,657:INFO:Checking libraries
2022-11-11 21:43:57,657:INFO:pd==1.3.5
2022-11-11 21:43:57,657:INFO:numpy==1.19.5
2022-11-11 21:43:57,657:INFO:sklearn==0.23.2
2022-11-11 21:43:57,657:INFO:lightgbm==3.3.3
2022-11-11 21:43:57,657:WARNING:catboost not found
2022-11-11 21:43:57,658:WARNING:xgboost not found
2022-11-11 21:43:57,658:INFO:mlflow==1.30.0
2022-11-11 21:43:57,658:INFO:Checking Exceptions
2022-11-11 21:43:57,658:INFO:Declaring global variables
2022-11-11 21:43:57,658:INFO:USI: 26a8
2022-11-11 21:43:57,658:INFO:pycaret_globals: {'fix_imbalance_param', 'X_test', 'log_plots_param', 'gpu_param', 'display_container', 'fold_param', 'target_param', 'fold_groups_param', 'X', 'master_model_container', 'USI', 'y_train', 'dashboard_logger', 'experiment__', '_all_metrics', 'logging_param', 'y_test', 'seed', 'create_model_container', '_gpu_n_jobs_param', 'y', 'fold_generator', 'fix_imbalance_method_param', 'n_jobs_param', '_available_plots', 'data_before_preprocess', 'transform_target_param', '_all_models', 'html_param', '_ml_usecase', 'prep_pipe', 'imputation_regressor', 'fold_shuffle_param', 'fold_groups_param_full', 'pycaret_globals', '_all_models_internal', 'iterative_imputation_iters_param', 'imputation_classifier', 'X_train', '_internal_pipeline', 'exp_name_log', 'stratify_param', 'transform_target_method_param'}
2022-11-11 21:43:57,658:INFO:Preparing display monitor
2022-11-11 21:43:57,658:INFO:Preparing display monitor
2022-11-11 21:43:57,669:INFO:Importing libraries
2022-11-11 21:43:57,669:INFO:Copying data for preprocessing
2022-11-11 21:43:57,676:INFO:Declaring preprocessing parameters
2022-11-11 21:43:57,677:INFO:Creating preprocessing pipeline
2022-11-11 21:43:57,706:INFO:Preprocessing pipeline created successfully
2022-11-11 21:43:57,706:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-11-11 21:43:57,706:INFO:Creating global containers
2022-11-11 21:43:57,708:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-11-11 21:51:33,367:INFO:PyCaret Supervised Module
2022-11-11 21:51:33,368:INFO:ML Usecase: regression
2022-11-11 21:51:33,368:INFO:version 2.3.10
2022-11-11 21:51:33,368:INFO:Initializing setup()
2022-11-11 21:51:33,368:INFO:setup(target=SalePrice, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-11-11 21:51:33,368:INFO:Checking environment
2022-11-11 21:51:33,368:INFO:python_version: 3.7.8
2022-11-11 21:51:33,368:INFO:python_build: ('tags/v3.7.8:4b47a5b6ba', 'Jun 28 2020 08:53:46')
2022-11-11 21:51:33,368:INFO:machine: AMD64
2022-11-11 21:51:33,368:INFO:platform: Windows-10-10.0.19041-SP0
2022-11-11 21:51:33,373:INFO:Memory: svmem(total=17090736128, available=3896881152, percent=77.2, used=13193854976, free=3896881152)
2022-11-11 21:51:33,373:INFO:Physical Core: 8
2022-11-11 21:51:33,373:INFO:Logical Core: 16
2022-11-11 21:51:33,373:INFO:Checking libraries
2022-11-11 21:51:33,373:INFO:pd==1.3.5
2022-11-11 21:51:33,373:INFO:numpy==1.19.5
2022-11-11 21:51:33,373:INFO:sklearn==0.23.2
2022-11-11 21:51:33,373:INFO:lightgbm==3.3.3
2022-11-11 21:51:33,374:WARNING:catboost not found
2022-11-11 21:51:33,374:WARNING:xgboost not found
2022-11-11 21:51:33,374:INFO:mlflow==1.30.0
2022-11-11 21:51:33,374:INFO:Checking Exceptions
2022-11-11 21:51:33,374:INFO:Declaring global variables
2022-11-11 21:51:33,374:INFO:USI: d5b4
2022-11-11 21:51:33,374:INFO:pycaret_globals: {'dashboard_logger', 'USI', 'transform_target_method_param', 'display_container', 'exp_name_log', 'y_train', 'imputation_classifier', 'data_before_preprocess', '_gpu_n_jobs_param', 'logging_param', 'fold_generator', 'pycaret_globals', 'log_plots_param', 'fix_imbalance_method_param', 'fold_groups_param_full', 'create_model_container', 'X_test', 'fold_shuffle_param', 'y', '_internal_pipeline', '_all_models', 'gpu_param', 'n_jobs_param', 'experiment__', 'y_test', 'fold_groups_param', '_all_metrics', '_ml_usecase', 'imputation_regressor', 'fix_imbalance_param', 'seed', 'X', 'target_param', 'stratify_param', 'transform_target_param', '_all_models_internal', 'html_param', 'master_model_container', 'iterative_imputation_iters_param', 'X_train', 'fold_param', '_available_plots', 'prep_pipe'}
2022-11-11 21:51:33,374:INFO:Preparing display monitor
2022-11-11 21:51:33,374:INFO:Preparing display monitor
2022-11-11 21:51:33,390:INFO:Importing libraries
2022-11-11 21:51:33,390:INFO:Copying data for preprocessing
2022-11-11 21:51:33,396:INFO:Declaring preprocessing parameters
2022-11-11 21:51:33,398:INFO:Creating preprocessing pipeline
2022-11-11 21:51:33,425:INFO:Preprocessing pipeline created successfully
2022-11-11 21:51:33,425:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-11-11 21:51:33,425:INFO:Creating global containers
2022-11-11 21:51:33,426:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-11-11 21:51:34,175:WARNING:Couldn't import xgboost.XGBRegressor
2022-11-11 21:51:34,176:WARNING:Couldn't import catboost.CatBoostRegressor
2022-11-11 21:51:34,278:WARNING:Couldn't import xgboost.XGBRegressor
2022-11-11 21:51:34,279:WARNING:Couldn't import catboost.CatBoostRegressor
2022-11-11 21:51:34,279:INFO:Creating grid variables
2022-11-11 21:51:34,290:INFO:create_model_container: 0
2022-11-11 21:51:34,290:INFO:master_model_container: 0
2022-11-11 21:51:34,291:INFO:display_container: 1
2022-11-11 21:51:34,294:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=['Id'],
                                      ml_usecase='regression',
                                      numerical_features=[], target='SalePrice',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_st...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='SalePrice')),
                ('fix_perfect', Remove_100(target='SalePrice')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-11-11 21:51:34,294:INFO:setup() succesfully completed......................................
2022-11-11 21:53:22,013:INFO:PyCaret Supervised Module
2022-11-11 21:53:22,013:INFO:ML Usecase: regression
2022-11-11 21:53:22,013:INFO:version 2.3.10
2022-11-11 21:53:22,013:INFO:Initializing setup()
2022-11-11 21:53:22,013:INFO:setup(target=SalePrice, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=True, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-11-11 21:53:22,013:INFO:Checking environment
2022-11-11 21:53:22,013:INFO:python_version: 3.7.8
2022-11-11 21:53:22,013:INFO:python_build: ('tags/v3.7.8:4b47a5b6ba', 'Jun 28 2020 08:53:46')
2022-11-11 21:53:22,013:INFO:machine: AMD64
2022-11-11 21:53:22,013:INFO:platform: Windows-10-10.0.19041-SP0
2022-11-11 21:53:22,018:INFO:Memory: svmem(total=17090736128, available=3712430080, percent=78.3, used=13378306048, free=3712430080)
2022-11-11 21:53:22,018:INFO:Physical Core: 8
2022-11-11 21:53:22,018:INFO:Logical Core: 16
2022-11-11 21:53:22,018:INFO:Checking libraries
2022-11-11 21:53:22,018:INFO:pd==1.3.5
2022-11-11 21:53:22,018:INFO:numpy==1.19.5
2022-11-11 21:53:22,018:INFO:sklearn==0.23.2
2022-11-11 21:53:22,018:INFO:lightgbm==3.3.3
2022-11-11 21:53:22,019:WARNING:catboost not found
2022-11-11 21:53:22,020:WARNING:xgboost not found
2022-11-11 21:53:22,020:INFO:mlflow==1.30.0
2022-11-11 21:53:22,020:INFO:Checking Exceptions
2022-11-11 21:53:22,020:INFO:Declaring global variables
2022-11-11 21:53:22,020:INFO:USI: d335
2022-11-11 21:53:22,020:INFO:pycaret_globals: {'y', 'target_param', 'fix_imbalance_param', 'imputation_regressor', '_internal_pipeline', 'html_param', 'fold_shuffle_param', 'fold_param', 'exp_name_log', '_ml_usecase', 'stratify_param', '_all_metrics', 'pycaret_globals', 'X_train', '_available_plots', 'fold_generator', 'log_plots_param', 'y_test', '_all_models', 'data_before_preprocess', 'transform_target_param', 'dashboard_logger', 'gpu_param', 'transform_target_method_param', 'master_model_container', 'seed', 'X', 'display_container', 'iterative_imputation_iters_param', 'fold_groups_param', 'USI', 'logging_param', 'prep_pipe', 'n_jobs_param', 'fix_imbalance_method_param', 'y_train', '_all_models_internal', 'imputation_classifier', 'fold_groups_param_full', 'experiment__', 'create_model_container', '_gpu_n_jobs_param', 'X_test'}
2022-11-11 21:53:22,020:INFO:Preparing display monitor
2022-11-11 21:53:22,021:INFO:Preparing display monitor
2022-11-11 21:53:22,039:INFO:Importing libraries
2022-11-11 21:53:22,039:INFO:Copying data for preprocessing
2022-11-11 21:53:22,045:INFO:Declaring preprocessing parameters
2022-11-11 21:53:22,045:WARNING:cuML not found
2022-11-11 21:53:22,045:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.3.3
2022-11-11 21:53:22,047:INFO:Creating preprocessing pipeline
2022-11-11 21:53:22,077:INFO:Preprocessing pipeline created successfully
2022-11-11 21:53:22,077:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-11-11 21:53:22,077:INFO:Creating global containers
2022-11-11 21:53:22,078:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-11-11 21:53:22,724:WARNING:Couldn't import cuml.linear_model.LinearRegression
2022-11-11 21:53:22,725:WARNING:Couldn't import cuml.linear_model.Lasso
2022-11-11 21:53:22,730:WARNING:Couldn't import cuml.linear_model.Ridge
2022-11-11 21:53:22,735:WARNING:Couldn't import cuml.linear_model.ElasticNet
2022-11-11 21:53:22,788:WARNING:Couldn't import cuml.svm.SVR
2022-11-11 21:53:22,832:WARNING:Couldn't import cuml.neighbors.KNeighborsRegressor
2022-11-11 21:53:22,832:WARNING:Couldn't import cuml.ensemble
2022-11-11 21:53:22,833:WARNING:Couldn't import xgboost.XGBRegressor
2022-11-11 21:53:26,959:WARNING:Couldn't import catboost.CatBoostRegressor
2022-11-11 21:53:26,960:WARNING:Couldn't import cuml.linear_model.LinearRegression
2022-11-11 21:53:26,960:WARNING:Couldn't import cuml.linear_model.Lasso
2022-11-11 21:53:26,967:WARNING:Couldn't import cuml.linear_model.Ridge
2022-11-11 21:53:26,974:WARNING:Couldn't import cuml.linear_model.ElasticNet
2022-11-11 21:53:27,046:WARNING:Couldn't import cuml.svm.SVR
2022-11-11 21:53:27,091:WARNING:Couldn't import cuml.neighbors.KNeighborsRegressor
2022-11-11 21:53:27,091:WARNING:Couldn't import cuml.ensemble
2022-11-11 21:53:27,092:WARNING:Couldn't import xgboost.XGBRegressor
2022-11-11 21:53:27,341:WARNING:Couldn't import catboost.CatBoostRegressor
2022-11-11 21:53:27,342:INFO:Creating grid variables
2022-11-11 21:53:27,358:INFO:create_model_container: 0
2022-11-11 21:53:27,358:INFO:master_model_container: 0
2022-11-11 21:53:27,358:INFO:display_container: 1
2022-11-11 21:53:27,363:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=['Id'],
                                      ml_usecase='regression',
                                      numerical_features=[], target='SalePrice',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_st...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='SalePrice')),
                ('fix_perfect', Remove_100(target='SalePrice')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-11-11 21:53:27,364:INFO:setup() succesfully completed......................................
2022-11-11 21:55:25,473:INFO:Initializing compare_models()
2022-11-11 21:55:25,473:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2022-11-11 21:55:25,473:INFO:Checking exceptions
2022-11-11 21:55:25,473:INFO:Preparing display monitor
2022-11-11 21:55:25,473:INFO:Preparing display monitor
2022-11-11 21:55:25,493:INFO:Initializing Linear Regression
2022-11-11 21:55:25,493:INFO:Total runtime is 0.0 minutes
2022-11-11 21:55:25,499:INFO:SubProcess create_model() called ==================================
2022-11-11 21:55:25,499:INFO:Initializing create_model()
2022-11-11 21:55:25,499:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000223B0505BC8>, return_train_score=False, kwargs={})
2022-11-11 21:55:25,499:INFO:Checking exceptions
2022-11-11 21:55:25,499:INFO:Importing libraries
2022-11-11 21:55:25,500:INFO:Copying training dataset
2022-11-11 21:55:25,500:INFO:Defining folds
2022-11-11 21:55:25,501:INFO:Declaring metric variables
2022-11-11 21:55:25,505:INFO:Importing untrained model
2022-11-11 21:55:25,511:INFO:Linear Regression Imported succesfully
2022-11-11 21:55:25,522:INFO:Starting cross validation
2022-11-11 21:55:25,526:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-11 21:55:26,513:INFO:Calculating mean and std
2022-11-11 21:55:26,514:INFO:Creating metrics dataframe
2022-11-11 21:55:26,517:INFO:Uploading results into container
2022-11-11 21:55:26,517:INFO:Uploading model into container now
2022-11-11 21:55:26,517:INFO:create_model_container: 1
2022-11-11 21:55:26,517:INFO:master_model_container: 1
2022-11-11 21:55:26,517:INFO:display_container: 2
2022-11-11 21:55:26,517:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2022-11-11 21:55:26,517:INFO:create_model() succesfully completed......................................
2022-11-11 21:55:26,586:INFO:SubProcess create_model() end ==================================
2022-11-11 21:55:26,586:INFO:Creating metrics dataframe
2022-11-11 21:55:26,596:INFO:Initializing Lasso Regression
2022-11-11 21:55:26,596:INFO:Total runtime is 0.018387516339619953 minutes
2022-11-11 21:55:26,602:INFO:SubProcess create_model() called ==================================
2022-11-11 21:55:26,602:INFO:Initializing create_model()
2022-11-11 21:55:26,602:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000223B0505BC8>, return_train_score=False, kwargs={})
2022-11-11 21:55:26,602:INFO:Checking exceptions
2022-11-11 21:55:26,602:INFO:Importing libraries
2022-11-11 21:55:26,602:INFO:Copying training dataset
2022-11-11 21:55:26,603:INFO:Defining folds
2022-11-11 21:55:26,603:INFO:Declaring metric variables
2022-11-11 21:55:26,608:INFO:Importing untrained model
2022-11-11 21:55:26,613:INFO:Lasso Regression Imported succesfully
2022-11-11 21:55:26,624:INFO:Starting cross validation
2022-11-11 21:55:26,624:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-11 21:55:28,110:INFO:Calculating mean and std
2022-11-11 21:55:28,111:INFO:Creating metrics dataframe
2022-11-11 21:55:28,115:INFO:Uploading results into container
2022-11-11 21:55:28,115:INFO:Uploading model into container now
2022-11-11 21:55:28,115:INFO:create_model_container: 2
2022-11-11 21:55:28,115:INFO:master_model_container: 2
2022-11-11 21:55:28,116:INFO:display_container: 2
2022-11-11 21:55:28,116:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=8052,
      selection='cyclic', tol=0.0001, warm_start=False)
2022-11-11 21:55:28,116:INFO:create_model() succesfully completed......................................
2022-11-11 21:55:28,188:INFO:SubProcess create_model() end ==================================
2022-11-11 21:55:28,188:INFO:Creating metrics dataframe
2022-11-11 21:55:28,198:INFO:Initializing Ridge Regression
2022-11-11 21:55:28,198:INFO:Total runtime is 0.045076823234558104 minutes
2022-11-11 21:55:28,204:INFO:SubProcess create_model() called ==================================
2022-11-11 21:55:28,204:INFO:Initializing create_model()
2022-11-11 21:55:28,204:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000223B0505BC8>, return_train_score=False, kwargs={})
2022-11-11 21:55:28,204:INFO:Checking exceptions
2022-11-11 21:55:28,204:INFO:Importing libraries
2022-11-11 21:55:28,205:INFO:Copying training dataset
2022-11-11 21:55:28,206:INFO:Defining folds
2022-11-11 21:55:28,206:INFO:Declaring metric variables
2022-11-11 21:55:28,211:INFO:Importing untrained model
2022-11-11 21:55:28,217:INFO:Ridge Regression Imported succesfully
2022-11-11 21:55:28,228:INFO:Starting cross validation
2022-11-11 21:55:28,228:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-11 21:55:28,818:INFO:Calculating mean and std
2022-11-11 21:55:28,819:INFO:Creating metrics dataframe
2022-11-11 21:55:28,823:INFO:Uploading results into container
2022-11-11 21:55:28,823:INFO:Uploading model into container now
2022-11-11 21:55:28,823:INFO:create_model_container: 3
2022-11-11 21:55:28,823:INFO:master_model_container: 3
2022-11-11 21:55:28,823:INFO:display_container: 2
2022-11-11 21:55:28,823:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=8052, solver='auto', tol=0.001)
2022-11-11 21:55:28,823:INFO:create_model() succesfully completed......................................
2022-11-11 21:55:28,892:INFO:SubProcess create_model() end ==================================
2022-11-11 21:55:28,892:INFO:Creating metrics dataframe
2022-11-11 21:55:28,903:INFO:Initializing Elastic Net
2022-11-11 21:55:28,903:INFO:Total runtime is 0.05682947238286336 minutes
2022-11-11 21:55:28,909:INFO:SubProcess create_model() called ==================================
2022-11-11 21:55:28,909:INFO:Initializing create_model()
2022-11-11 21:55:28,909:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000223B0505BC8>, return_train_score=False, kwargs={})
2022-11-11 21:55:28,909:INFO:Checking exceptions
2022-11-11 21:55:28,909:INFO:Importing libraries
2022-11-11 21:55:28,909:INFO:Copying training dataset
2022-11-11 21:55:28,910:INFO:Defining folds
2022-11-11 21:55:28,910:INFO:Declaring metric variables
2022-11-11 21:55:28,915:INFO:Importing untrained model
2022-11-11 21:55:28,920:INFO:Elastic Net Imported succesfully
2022-11-11 21:55:28,936:INFO:Starting cross validation
2022-11-11 21:55:28,936:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-11 21:55:30,547:INFO:Calculating mean and std
2022-11-11 21:55:30,547:INFO:Creating metrics dataframe
2022-11-11 21:55:30,551:INFO:Uploading results into container
2022-11-11 21:55:30,551:INFO:Uploading model into container now
2022-11-11 21:55:30,551:INFO:create_model_container: 4
2022-11-11 21:55:30,551:INFO:master_model_container: 4
2022-11-11 21:55:30,551:INFO:display_container: 2
2022-11-11 21:55:30,551:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=8052, selection='cyclic', tol=0.0001, warm_start=False)
2022-11-11 21:55:30,551:INFO:create_model() succesfully completed......................................
2022-11-11 21:55:30,619:INFO:SubProcess create_model() end ==================================
2022-11-11 21:55:30,619:INFO:Creating metrics dataframe
2022-11-11 21:55:30,630:INFO:Initializing Least Angle Regression
2022-11-11 21:55:30,630:INFO:Total runtime is 0.08561930259068806 minutes
2022-11-11 21:55:30,635:INFO:SubProcess create_model() called ==================================
2022-11-11 21:55:30,636:INFO:Initializing create_model()
2022-11-11 21:55:30,636:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000223B0505BC8>, return_train_score=False, kwargs={})
2022-11-11 21:55:30,636:INFO:Checking exceptions
2022-11-11 21:55:30,636:INFO:Importing libraries
2022-11-11 21:55:30,636:INFO:Copying training dataset
2022-11-11 21:55:30,637:INFO:Defining folds
2022-11-11 21:55:30,637:INFO:Declaring metric variables
2022-11-11 21:55:30,642:INFO:Importing untrained model
2022-11-11 21:55:30,647:INFO:Least Angle Regression Imported succesfully
2022-11-11 21:55:30,659:INFO:Starting cross validation
2022-11-11 21:55:30,659:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-11 21:55:31,203:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2022-11-11 21:55:31,207:WARNING:Traceback (most recent call last):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 3210, in create_model_supervised
    error_score=0,
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 248, in cross_validate
    for train, test in cv.split(X, y, groups))
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 1088, in __call__
    while self.dispatch_one_batch(iterator):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 901, in dispatch_one_batch
    self._dispatch(tasks)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 819, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 597, in __init__
    self.results = batch()
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in __call__
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in <listcomp>
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 88, in __call__
    *args, **kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 213, in _score
    **self._kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 179, in mean_absolute_error
    y_true, y_pred, multioutput)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 645, in check_array
    allow_nan=force_all_finite == 'allow-nan')
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 99, in _assert_all_finite
    msg_dtype if msg_dtype is not None else X.dtype)
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2022-11-11 21:55:31,207:INFO:Initializing create_model()
2022-11-11 21:55:31,207:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000223B0505BC8>, return_train_score=False, kwargs={})
2022-11-11 21:55:31,207:INFO:Checking exceptions
2022-11-11 21:55:31,207:INFO:Importing libraries
2022-11-11 21:55:31,207:INFO:Copying training dataset
2022-11-11 21:55:31,208:INFO:Defining folds
2022-11-11 21:55:31,208:INFO:Declaring metric variables
2022-11-11 21:55:31,213:INFO:Importing untrained model
2022-11-11 21:55:31,218:INFO:Least Angle Regression Imported succesfully
2022-11-11 21:55:31,229:INFO:Starting cross validation
2022-11-11 21:55:31,229:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-11 21:55:31,793:ERROR:create_model() for lar raised an exception or returned all 0.0:
2022-11-11 21:55:31,794:ERROR:Traceback (most recent call last):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 3210, in create_model_supervised
    error_score=0,
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 248, in cross_validate
    for train, test in cv.split(X, y, groups))
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 1088, in __call__
    while self.dispatch_one_batch(iterator):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 901, in dispatch_one_batch
    self._dispatch(tasks)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 819, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 597, in __init__
    self.results = batch()
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in __call__
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in <listcomp>
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 88, in __call__
    *args, **kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 213, in _score
    **self._kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 179, in mean_absolute_error
    y_true, y_pred, multioutput)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 645, in check_array
    allow_nan=force_all_finite == 'allow-nan')
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 99, in _assert_all_finite
    msg_dtype if msg_dtype is not None else X.dtype)
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 2212, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 3210, in create_model_supervised
    error_score=0,
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 248, in cross_validate
    for train, test in cv.split(X, y, groups))
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 1088, in __call__
    while self.dispatch_one_batch(iterator):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 901, in dispatch_one_batch
    self._dispatch(tasks)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 819, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 597, in __init__
    self.results = batch()
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in __call__
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in <listcomp>
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 88, in __call__
    *args, **kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 213, in _score
    **self._kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 179, in mean_absolute_error
    y_true, y_pred, multioutput)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 645, in check_array
    allow_nan=force_all_finite == 'allow-nan')
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 99, in _assert_all_finite
    msg_dtype if msg_dtype is not None else X.dtype)
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2022-11-11 21:55:31,795:INFO:Initializing Lasso Least Angle Regression
2022-11-11 21:55:31,795:INFO:Total runtime is 0.10502366224924722 minutes
2022-11-11 21:55:31,801:INFO:SubProcess create_model() called ==================================
2022-11-11 21:55:31,801:INFO:Initializing create_model()
2022-11-11 21:55:31,801:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000223B0505BC8>, return_train_score=False, kwargs={})
2022-11-11 21:55:31,801:INFO:Checking exceptions
2022-11-11 21:55:31,802:INFO:Importing libraries
2022-11-11 21:55:31,802:INFO:Copying training dataset
2022-11-11 21:55:31,803:INFO:Defining folds
2022-11-11 21:55:31,803:INFO:Declaring metric variables
2022-11-11 21:55:31,808:INFO:Importing untrained model
2022-11-11 21:55:31,814:INFO:Lasso Least Angle Regression Imported succesfully
2022-11-11 21:55:31,825:INFO:Starting cross validation
2022-11-11 21:55:31,826:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-11 21:55:33,180:INFO:Calculating mean and std
2022-11-11 21:55:33,181:INFO:Creating metrics dataframe
2022-11-11 21:55:33,185:INFO:Uploading results into container
2022-11-11 21:55:33,186:INFO:Uploading model into container now
2022-11-11 21:55:33,186:INFO:create_model_container: 5
2022-11-11 21:55:33,186:INFO:master_model_container: 5
2022-11-11 21:55:33,186:INFO:display_container: 2
2022-11-11 21:55:33,186:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize=True,
          positive=False, precompute='auto', random_state=8052, verbose=False)
2022-11-11 21:55:33,186:INFO:create_model() succesfully completed......................................
2022-11-11 21:55:33,255:INFO:SubProcess create_model() end ==================================
2022-11-11 21:55:33,255:INFO:Creating metrics dataframe
2022-11-11 21:55:33,267:INFO:Initializing Orthogonal Matching Pursuit
2022-11-11 21:55:33,267:INFO:Total runtime is 0.12957094113032022 minutes
2022-11-11 21:55:33,272:INFO:SubProcess create_model() called ==================================
2022-11-11 21:55:33,273:INFO:Initializing create_model()
2022-11-11 21:55:33,273:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000223B0505BC8>, return_train_score=False, kwargs={})
2022-11-11 21:55:33,273:INFO:Checking exceptions
2022-11-11 21:55:33,273:INFO:Importing libraries
2022-11-11 21:55:33,273:INFO:Copying training dataset
2022-11-11 21:55:33,274:INFO:Defining folds
2022-11-11 21:55:33,274:INFO:Declaring metric variables
2022-11-11 21:55:33,279:INFO:Importing untrained model
2022-11-11 21:55:33,284:INFO:Orthogonal Matching Pursuit Imported succesfully
2022-11-11 21:55:33,295:INFO:Starting cross validation
2022-11-11 21:55:33,295:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-11 21:55:33,443:INFO:Calculating mean and std
2022-11-11 21:55:33,444:INFO:Creating metrics dataframe
2022-11-11 21:55:33,447:INFO:Uploading results into container
2022-11-11 21:55:33,447:INFO:Uploading model into container now
2022-11-11 21:55:33,447:INFO:create_model_container: 6
2022-11-11 21:55:33,448:INFO:master_model_container: 6
2022-11-11 21:55:33,448:INFO:display_container: 2
2022-11-11 21:55:33,448:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None)
2022-11-11 21:55:33,448:INFO:create_model() succesfully completed......................................
2022-11-11 21:55:33,516:INFO:SubProcess create_model() end ==================================
2022-11-11 21:55:33,516:INFO:Creating metrics dataframe
2022-11-11 21:55:33,527:INFO:Initializing Bayesian Ridge
2022-11-11 21:55:33,527:INFO:Total runtime is 0.133888574441274 minutes
2022-11-11 21:55:33,532:INFO:SubProcess create_model() called ==================================
2022-11-11 21:55:33,533:INFO:Initializing create_model()
2022-11-11 21:55:33,533:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000223B0505BC8>, return_train_score=False, kwargs={})
2022-11-11 21:55:33,533:INFO:Checking exceptions
2022-11-11 21:55:33,533:INFO:Importing libraries
2022-11-11 21:55:33,533:INFO:Copying training dataset
2022-11-11 21:55:33,534:INFO:Defining folds
2022-11-11 21:55:33,534:INFO:Declaring metric variables
2022-11-11 21:55:33,538:INFO:Importing untrained model
2022-11-11 21:55:33,543:INFO:Bayesian Ridge Imported succesfully
2022-11-11 21:55:33,554:INFO:Starting cross validation
2022-11-11 21:55:33,555:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-11 21:55:35,854:INFO:Calculating mean and std
2022-11-11 21:55:35,855:INFO:Creating metrics dataframe
2022-11-11 21:55:35,858:INFO:Uploading results into container
2022-11-11 21:55:35,859:INFO:Uploading model into container now
2022-11-11 21:55:35,859:INFO:create_model_container: 7
2022-11-11 21:55:35,859:INFO:master_model_container: 7
2022-11-11 21:55:35,859:INFO:display_container: 2
2022-11-11 21:55:35,859:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False)
2022-11-11 21:55:35,859:INFO:create_model() succesfully completed......................................
2022-11-11 21:55:35,932:INFO:SubProcess create_model() end ==================================
2022-11-11 21:55:35,932:INFO:Creating metrics dataframe
2022-11-11 21:55:35,944:INFO:Initializing Passive Aggressive Regressor
2022-11-11 21:55:35,944:INFO:Total runtime is 0.1741783102353414 minutes
2022-11-11 21:55:35,950:INFO:SubProcess create_model() called ==================================
2022-11-11 21:55:35,950:INFO:Initializing create_model()
2022-11-11 21:55:35,950:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000223B0505BC8>, return_train_score=False, kwargs={})
2022-11-11 21:55:35,950:INFO:Checking exceptions
2022-11-11 21:55:35,950:INFO:Importing libraries
2022-11-11 21:55:35,951:INFO:Copying training dataset
2022-11-11 21:55:35,951:INFO:Defining folds
2022-11-11 21:55:35,951:INFO:Declaring metric variables
2022-11-11 21:55:35,956:INFO:Importing untrained model
2022-11-11 21:55:35,963:INFO:Passive Aggressive Regressor Imported succesfully
2022-11-11 21:55:35,975:INFO:Starting cross validation
2022-11-11 21:55:35,976:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-11 21:55:36,216:INFO:Calculating mean and std
2022-11-11 21:55:36,217:INFO:Creating metrics dataframe
2022-11-11 21:55:36,220:INFO:Uploading results into container
2022-11-11 21:55:36,220:INFO:Uploading model into container now
2022-11-11 21:55:36,220:INFO:create_model_container: 8
2022-11-11 21:55:36,221:INFO:master_model_container: 8
2022-11-11 21:55:36,221:INFO:display_container: 2
2022-11-11 21:55:36,221:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=8052, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-11-11 21:55:36,221:INFO:create_model() succesfully completed......................................
2022-11-11 21:55:36,289:INFO:SubProcess create_model() end ==================================
2022-11-11 21:55:36,289:INFO:Creating metrics dataframe
2022-11-11 21:55:36,300:INFO:Initializing Huber Regressor
2022-11-11 21:55:36,300:INFO:Total runtime is 0.1801129897435506 minutes
2022-11-11 21:55:36,306:INFO:SubProcess create_model() called ==================================
2022-11-11 21:55:36,306:INFO:Initializing create_model()
2022-11-11 21:55:36,306:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000223B0505BC8>, return_train_score=False, kwargs={})
2022-11-11 21:55:36,306:INFO:Checking exceptions
2022-11-11 21:55:36,306:INFO:Importing libraries
2022-11-11 21:55:36,306:INFO:Copying training dataset
2022-11-11 21:55:36,307:INFO:Defining folds
2022-11-11 21:55:36,307:INFO:Declaring metric variables
2022-11-11 21:55:36,312:INFO:Importing untrained model
2022-11-11 21:55:36,317:INFO:Huber Regressor Imported succesfully
2022-11-11 21:55:36,329:INFO:Starting cross validation
2022-11-11 21:55:36,329:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-11 21:55:40,367:INFO:Calculating mean and std
2022-11-11 21:55:40,368:INFO:Creating metrics dataframe
2022-11-11 21:55:40,372:INFO:Uploading results into container
2022-11-11 21:55:40,372:INFO:Uploading model into container now
2022-11-11 21:55:40,372:INFO:create_model_container: 9
2022-11-11 21:55:40,372:INFO:master_model_container: 9
2022-11-11 21:55:40,372:INFO:display_container: 2
2022-11-11 21:55:40,372:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-11-11 21:55:40,372:INFO:create_model() succesfully completed......................................
2022-11-11 21:55:40,441:INFO:SubProcess create_model() end ==================================
2022-11-11 21:55:40,441:INFO:Creating metrics dataframe
2022-11-11 21:55:40,453:INFO:Initializing K Neighbors Regressor
2022-11-11 21:55:40,454:INFO:Total runtime is 0.24935169617335 minutes
2022-11-11 21:55:40,459:INFO:SubProcess create_model() called ==================================
2022-11-11 21:55:40,459:INFO:Initializing create_model()
2022-11-11 21:55:40,460:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000223B0505BC8>, return_train_score=False, kwargs={})
2022-11-11 21:55:40,460:INFO:Checking exceptions
2022-11-11 21:55:40,460:INFO:Importing libraries
2022-11-11 21:55:40,460:INFO:Copying training dataset
2022-11-11 21:55:40,461:INFO:Defining folds
2022-11-11 21:55:40,461:INFO:Declaring metric variables
2022-11-11 21:55:40,467:INFO:Importing untrained model
2022-11-11 21:55:40,473:INFO:K Neighbors Regressor Imported succesfully
2022-11-11 21:55:40,485:INFO:Starting cross validation
2022-11-11 21:55:40,485:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-11 21:55:43,936:INFO:Calculating mean and std
2022-11-11 21:55:43,937:INFO:Creating metrics dataframe
2022-11-11 21:55:43,940:INFO:Uploading results into container
2022-11-11 21:55:43,940:INFO:Uploading model into container now
2022-11-11 21:55:43,940:INFO:create_model_container: 10
2022-11-11 21:55:43,940:INFO:master_model_container: 10
2022-11-11 21:55:43,941:INFO:display_container: 2
2022-11-11 21:55:43,941:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2022-11-11 21:55:43,941:INFO:create_model() succesfully completed......................................
2022-11-11 21:55:44,014:INFO:SubProcess create_model() end ==================================
2022-11-11 21:55:44,014:INFO:Creating metrics dataframe
2022-11-11 21:55:44,027:INFO:Initializing Decision Tree Regressor
2022-11-11 21:55:44,027:INFO:Total runtime is 0.3089017709096273 minutes
2022-11-11 21:55:44,033:INFO:SubProcess create_model() called ==================================
2022-11-11 21:55:44,033:INFO:Initializing create_model()
2022-11-11 21:55:44,033:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000223B0505BC8>, return_train_score=False, kwargs={})
2022-11-11 21:55:44,033:INFO:Checking exceptions
2022-11-11 21:55:44,033:INFO:Importing libraries
2022-11-11 21:55:44,033:INFO:Copying training dataset
2022-11-11 21:55:44,034:INFO:Defining folds
2022-11-11 21:55:44,034:INFO:Declaring metric variables
2022-11-11 21:55:44,039:INFO:Importing untrained model
2022-11-11 21:55:44,045:INFO:Decision Tree Regressor Imported succesfully
2022-11-11 21:55:44,057:INFO:Starting cross validation
2022-11-11 21:55:44,058:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-11 21:55:44,397:INFO:Calculating mean and std
2022-11-11 21:55:44,398:INFO:Creating metrics dataframe
2022-11-11 21:55:44,402:INFO:Uploading results into container
2022-11-11 21:55:44,402:INFO:Uploading model into container now
2022-11-11 21:55:44,402:INFO:create_model_container: 11
2022-11-11 21:55:44,402:INFO:master_model_container: 11
2022-11-11 21:55:44,402:INFO:display_container: 2
2022-11-11 21:55:44,402:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=8052, splitter='best')
2022-11-11 21:55:44,402:INFO:create_model() succesfully completed......................................
2022-11-11 21:55:44,474:INFO:SubProcess create_model() end ==================================
2022-11-11 21:55:44,474:INFO:Creating metrics dataframe
2022-11-11 21:55:44,486:INFO:Initializing Random Forest Regressor
2022-11-11 21:55:44,486:INFO:Total runtime is 0.31653875509897866 minutes
2022-11-11 21:55:44,491:INFO:SubProcess create_model() called ==================================
2022-11-11 21:55:44,492:INFO:Initializing create_model()
2022-11-11 21:55:44,492:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000223B0505BC8>, return_train_score=False, kwargs={})
2022-11-11 21:55:44,492:INFO:Checking exceptions
2022-11-11 21:55:44,492:INFO:Importing libraries
2022-11-11 21:55:44,492:INFO:Copying training dataset
2022-11-11 21:55:44,493:INFO:Defining folds
2022-11-11 21:55:44,493:INFO:Declaring metric variables
2022-11-11 21:55:44,497:INFO:Importing untrained model
2022-11-11 21:55:44,502:INFO:Random Forest Regressor Imported succesfully
2022-11-11 21:55:44,513:INFO:Starting cross validation
2022-11-11 21:55:44,514:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-11 21:55:51,905:INFO:Calculating mean and std
2022-11-11 21:55:51,905:INFO:Creating metrics dataframe
2022-11-11 21:55:51,909:INFO:Uploading results into container
2022-11-11 21:55:51,909:INFO:Uploading model into container now
2022-11-11 21:55:51,909:INFO:create_model_container: 12
2022-11-11 21:55:51,909:INFO:master_model_container: 12
2022-11-11 21:55:51,909:INFO:display_container: 2
2022-11-11 21:55:51,909:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=8052, verbose=0, warm_start=False)
2022-11-11 21:55:51,909:INFO:create_model() succesfully completed......................................
2022-11-11 21:55:51,993:INFO:SubProcess create_model() end ==================================
2022-11-11 21:55:51,993:INFO:Creating metrics dataframe
2022-11-11 21:55:52,007:INFO:Initializing Extra Trees Regressor
2022-11-11 21:55:52,007:INFO:Total runtime is 0.4419007658958435 minutes
2022-11-11 21:55:52,012:INFO:SubProcess create_model() called ==================================
2022-11-11 21:55:52,013:INFO:Initializing create_model()
2022-11-11 21:55:52,013:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000223B0505BC8>, return_train_score=False, kwargs={})
2022-11-11 21:55:52,013:INFO:Checking exceptions
2022-11-11 21:55:52,013:INFO:Importing libraries
2022-11-11 21:55:52,014:INFO:Copying training dataset
2022-11-11 21:55:52,015:INFO:Defining folds
2022-11-11 21:55:52,016:INFO:Declaring metric variables
2022-11-11 21:55:52,022:INFO:Importing untrained model
2022-11-11 21:55:52,029:INFO:Extra Trees Regressor Imported succesfully
2022-11-11 21:55:52,042:INFO:Starting cross validation
2022-11-11 21:55:52,042:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-11 21:55:59,958:INFO:Calculating mean and std
2022-11-11 21:55:59,959:INFO:Creating metrics dataframe
2022-11-11 21:55:59,963:INFO:Uploading results into container
2022-11-11 21:55:59,963:INFO:Uploading model into container now
2022-11-11 21:55:59,963:INFO:create_model_container: 13
2022-11-11 21:55:59,963:INFO:master_model_container: 13
2022-11-11 21:55:59,963:INFO:display_container: 2
2022-11-11 21:55:59,964:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=8052, verbose=0, warm_start=False)
2022-11-11 21:55:59,964:INFO:create_model() succesfully completed......................................
2022-11-11 21:56:00,039:INFO:SubProcess create_model() end ==================================
2022-11-11 21:56:00,040:INFO:Creating metrics dataframe
2022-11-11 21:56:00,052:INFO:Initializing AdaBoost Regressor
2022-11-11 21:56:00,052:INFO:Total runtime is 0.5759729663530986 minutes
2022-11-11 21:56:00,058:INFO:SubProcess create_model() called ==================================
2022-11-11 21:56:00,059:INFO:Initializing create_model()
2022-11-11 21:56:00,059:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000223B0505BC8>, return_train_score=False, kwargs={})
2022-11-11 21:56:00,059:INFO:Checking exceptions
2022-11-11 21:56:00,059:INFO:Importing libraries
2022-11-11 21:56:00,059:INFO:Copying training dataset
2022-11-11 21:56:00,060:INFO:Defining folds
2022-11-11 21:56:00,060:INFO:Declaring metric variables
2022-11-11 21:56:00,065:INFO:Importing untrained model
2022-11-11 21:56:00,070:INFO:AdaBoost Regressor Imported succesfully
2022-11-11 21:56:00,082:INFO:Starting cross validation
2022-11-11 21:56:00,083:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-11 21:56:03,760:INFO:Calculating mean and std
2022-11-11 21:56:03,761:INFO:Creating metrics dataframe
2022-11-11 21:56:03,764:INFO:Uploading results into container
2022-11-11 21:56:03,764:INFO:Uploading model into container now
2022-11-11 21:56:03,764:INFO:create_model_container: 14
2022-11-11 21:56:03,764:INFO:master_model_container: 14
2022-11-11 21:56:03,765:INFO:display_container: 2
2022-11-11 21:56:03,765:INFO:AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=8052)
2022-11-11 21:56:03,765:INFO:create_model() succesfully completed......................................
2022-11-11 21:56:03,836:INFO:SubProcess create_model() end ==================================
2022-11-11 21:56:03,836:INFO:Creating metrics dataframe
2022-11-11 21:56:03,849:INFO:Initializing Gradient Boosting Regressor
2022-11-11 21:56:03,849:INFO:Total runtime is 0.6392567515373231 minutes
2022-11-11 21:56:03,854:INFO:SubProcess create_model() called ==================================
2022-11-11 21:56:03,855:INFO:Initializing create_model()
2022-11-11 21:56:03,855:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000223B0505BC8>, return_train_score=False, kwargs={})
2022-11-11 21:56:03,855:INFO:Checking exceptions
2022-11-11 21:56:03,855:INFO:Importing libraries
2022-11-11 21:56:03,855:INFO:Copying training dataset
2022-11-11 21:56:03,856:INFO:Defining folds
2022-11-11 21:56:03,856:INFO:Declaring metric variables
2022-11-11 21:56:03,861:INFO:Importing untrained model
2022-11-11 21:56:03,867:INFO:Gradient Boosting Regressor Imported succesfully
2022-11-11 21:56:03,877:INFO:Starting cross validation
2022-11-11 21:56:03,877:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-11 21:56:09,983:INFO:Calculating mean and std
2022-11-11 21:56:09,984:INFO:Creating metrics dataframe
2022-11-11 21:56:09,987:INFO:Uploading results into container
2022-11-11 21:56:09,988:INFO:Uploading model into container now
2022-11-11 21:56:09,988:INFO:create_model_container: 15
2022-11-11 21:56:09,988:INFO:master_model_container: 15
2022-11-11 21:56:09,988:INFO:display_container: 2
2022-11-11 21:56:09,988:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8052, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-11 21:56:09,988:INFO:create_model() succesfully completed......................................
2022-11-11 21:56:10,060:INFO:SubProcess create_model() end ==================================
2022-11-11 21:56:10,060:INFO:Creating metrics dataframe
2022-11-11 21:56:10,073:INFO:Initializing Light Gradient Boosting Machine
2022-11-11 21:56:10,073:INFO:Total runtime is 0.7429918924967449 minutes
2022-11-11 21:56:10,080:INFO:SubProcess create_model() called ==================================
2022-11-11 21:56:10,080:INFO:Initializing create_model()
2022-11-11 21:56:10,080:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000223B0505BC8>, return_train_score=False, kwargs={})
2022-11-11 21:56:10,080:INFO:Checking exceptions
2022-11-11 21:56:10,080:INFO:Importing libraries
2022-11-11 21:56:10,080:INFO:Copying training dataset
2022-11-11 21:56:10,081:INFO:Defining folds
2022-11-11 21:56:10,081:INFO:Declaring metric variables
2022-11-11 21:56:10,086:INFO:Importing untrained model
2022-11-11 21:56:10,091:INFO:Light Gradient Boosting Machine Imported succesfully
2022-11-11 21:56:10,104:INFO:Starting cross validation
2022-11-11 21:56:10,105:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-11 21:56:20,220:INFO:Calculating mean and std
2022-11-11 21:56:20,221:INFO:Creating metrics dataframe
2022-11-11 21:56:20,225:INFO:Uploading results into container
2022-11-11 21:56:20,225:INFO:Uploading model into container now
2022-11-11 21:56:20,225:INFO:create_model_container: 16
2022-11-11 21:56:20,225:INFO:master_model_container: 16
2022-11-11 21:56:20,225:INFO:display_container: 2
2022-11-11 21:56:20,226:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              device='gpu', importance_type='split', learning_rate=0.1,
              max_depth=-1, min_child_samples=20, min_child_weight=0.001,
              min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
              objective=None, random_state=8052, reg_alpha=0.0, reg_lambda=0.0,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0)
2022-11-11 21:56:20,226:INFO:create_model() succesfully completed......................................
2022-11-11 21:56:20,309:INFO:SubProcess create_model() end ==================================
2022-11-11 21:56:20,309:INFO:Creating metrics dataframe
2022-11-11 21:56:20,325:INFO:Initializing Dummy Regressor
2022-11-11 21:56:20,325:INFO:Total runtime is 0.9138560732205709 minutes
2022-11-11 21:56:20,331:INFO:SubProcess create_model() called ==================================
2022-11-11 21:56:20,332:INFO:Initializing create_model()
2022-11-11 21:56:20,332:INFO:create_model(estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x00000223B0505BC8>, return_train_score=False, kwargs={})
2022-11-11 21:56:20,332:INFO:Checking exceptions
2022-11-11 21:56:20,332:INFO:Importing libraries
2022-11-11 21:56:20,332:INFO:Copying training dataset
2022-11-11 21:56:20,333:INFO:Defining folds
2022-11-11 21:56:20,333:INFO:Declaring metric variables
2022-11-11 21:56:20,338:INFO:Importing untrained model
2022-11-11 21:56:20,344:INFO:Dummy Regressor Imported succesfully
2022-11-11 21:56:20,355:INFO:Starting cross validation
2022-11-11 21:56:20,356:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-11 21:56:20,391:INFO:Calculating mean and std
2022-11-11 21:56:20,392:INFO:Creating metrics dataframe
2022-11-11 21:56:20,395:INFO:Uploading results into container
2022-11-11 21:56:20,395:INFO:Uploading model into container now
2022-11-11 21:56:20,395:INFO:create_model_container: 17
2022-11-11 21:56:20,396:INFO:master_model_container: 17
2022-11-11 21:56:20,396:INFO:display_container: 2
2022-11-11 21:56:20,396:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2022-11-11 21:56:20,396:INFO:create_model() succesfully completed......................................
2022-11-11 21:56:20,469:INFO:SubProcess create_model() end ==================================
2022-11-11 21:56:20,470:INFO:Creating metrics dataframe
2022-11-11 21:56:20,496:INFO:Initializing create_model()
2022-11-11 21:56:20,496:INFO:create_model(estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              device='gpu', importance_type='split', learning_rate=0.1,
              max_depth=-1, min_child_samples=20, min_child_weight=0.001,
              min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
              objective=None, random_state=8052, reg_alpha=0.0, reg_lambda=0.0,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-11-11 21:56:20,496:INFO:Checking exceptions
2022-11-11 21:56:20,496:INFO:Importing libraries
2022-11-11 21:56:20,496:INFO:Copying training dataset
2022-11-11 21:56:20,497:INFO:Defining folds
2022-11-11 21:56:20,497:INFO:Declaring metric variables
2022-11-11 21:56:20,497:INFO:Importing untrained model
2022-11-11 21:56:20,497:INFO:Declaring custom model
2022-11-11 21:56:20,498:INFO:Light Gradient Boosting Machine Imported succesfully
2022-11-11 21:56:20,498:INFO:Cross validation set to False
2022-11-11 21:56:20,498:INFO:Fitting Model
2022-11-11 21:56:21,132:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              device='gpu', importance_type='split', learning_rate=0.1,
              max_depth=-1, min_child_samples=20, min_child_weight=0.001,
              min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
              objective=None, random_state=8052, reg_alpha=0.0, reg_lambda=0.0,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0)
2022-11-11 21:56:21,132:INFO:create_models() succesfully completed......................................
2022-11-11 21:56:21,247:INFO:create_model_container: 17
2022-11-11 21:56:21,247:INFO:master_model_container: 17
2022-11-11 21:56:21,247:INFO:display_container: 2
2022-11-11 21:56:21,248:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              device='gpu', importance_type='split', learning_rate=0.1,
              max_depth=-1, min_child_samples=20, min_child_weight=0.001,
              min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
              objective=None, random_state=8052, reg_alpha=0.0, reg_lambda=0.0,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0)
2022-11-11 21:56:21,248:INFO:compare_models() succesfully completed......................................
2022-11-11 21:56:30,049:INFO:Initializing evaluate_model()
2022-11-11 21:56:30,049:INFO:evaluate_model(estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              device='gpu', importance_type='split', learning_rate=0.1,
              max_depth=-1, min_child_samples=20, min_child_weight=0.001,
              min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
              objective=None, random_state=8052, reg_alpha=0.0, reg_lambda=0.0,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2022-11-11 21:56:30,090:INFO:Initializing plot_model()
2022-11-11 21:56:30,090:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              device='gpu', importance_type='split', learning_rate=0.1,
              max_depth=-1, min_child_samples=20, min_child_weight=0.001,
              min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
              objective=None, random_state=8052, reg_alpha=0.0, reg_lambda=0.0,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=parameter, plot_kwargs={}, save=False, scale=1, system=True)
2022-11-11 21:56:30,090:INFO:Checking exceptions
2022-11-11 21:56:30,090:INFO:Preparing display monitor
2022-11-11 21:56:30,096:INFO:Preloading libraries
2022-11-11 21:56:30,102:INFO:Copying training dataset
2022-11-11 21:56:30,102:INFO:Copying test dataset
2022-11-11 21:56:30,103:INFO:Plot type: parameter
2022-11-11 21:56:30,110:INFO:Visual Rendered Successfully
2022-11-11 21:56:30,210:INFO:plot_model() succesfully completed......................................
2022-11-11 21:56:32,884:INFO:Initializing predict_model()
2022-11-11 21:56:32,884:INFO:predict_model(estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              device='gpu', importance_type='split', learning_rate=0.1,
              max_depth=-1, min_child_samples=20, min_child_weight=0.001,
              min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
              objective=None, random_state=8052, reg_alpha=0.0, reg_lambda=0.0,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-11-11 21:56:32,884:INFO:Checking exceptions
2022-11-11 21:56:32,884:INFO:Preloading libraries
2022-11-11 21:56:32,885:INFO:Preparing display monitor
2022-11-11 21:56:41,225:INFO:Initializing finalize_model()
2022-11-11 21:56:41,225:INFO:finalize_model(estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              device='gpu', importance_type='split', learning_rate=0.1,
              max_depth=-1, min_child_samples=20, min_child_weight=0.001,
              min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
              objective=None, random_state=8052, reg_alpha=0.0, reg_lambda=0.0,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0), fit_kwargs=None, groups=None, model_only=True, display=None, experiment_custom_tags=None, return_train_score=False)
2022-11-11 21:56:41,225:INFO:Finalizing LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              device='gpu', importance_type='split', learning_rate=0.1,
              max_depth=-1, min_child_samples=20, min_child_weight=0.001,
              min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
              objective=None, random_state=8052, reg_alpha=0.0, reg_lambda=0.0,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0)
2022-11-11 21:56:41,226:INFO:Initializing create_model()
2022-11-11 21:56:41,226:INFO:create_model(estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              device='gpu', importance_type='split', learning_rate=0.1,
              max_depth=-1, min_child_samples=20, min_child_weight=0.001,
              min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
              objective=None, random_state=8052, reg_alpha=0.0, reg_lambda=0.0,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=False, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-11-11 21:56:41,226:INFO:Checking exceptions
2022-11-11 21:56:41,226:INFO:Importing libraries
2022-11-11 21:56:41,226:INFO:Copying training dataset
2022-11-11 21:56:41,226:INFO:Defining folds
2022-11-11 21:56:41,226:INFO:Declaring metric variables
2022-11-11 21:56:41,226:INFO:Importing untrained model
2022-11-11 21:56:41,227:INFO:Declaring custom model
2022-11-11 21:56:41,227:INFO:Light Gradient Boosting Machine Imported succesfully
2022-11-11 21:56:41,227:INFO:Starting cross validation
2022-11-11 21:56:41,227:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-11 21:56:47,870:INFO:Calculating mean and std
2022-11-11 21:56:47,870:INFO:Creating metrics dataframe
2022-11-11 21:56:47,872:INFO:Finalizing model
2022-11-11 21:56:48,550:INFO:create_model_container: 17
2022-11-11 21:56:48,550:INFO:master_model_container: 17
2022-11-11 21:56:48,550:INFO:display_container: 3
2022-11-11 21:56:48,551:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              device='gpu', importance_type='split', learning_rate=0.1,
              max_depth=-1, min_child_samples=20, min_child_weight=0.001,
              min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
              objective=None, random_state=8052, reg_alpha=0.0, reg_lambda=0.0,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0)
2022-11-11 21:56:48,551:INFO:create_model() succesfully completed......................................
2022-11-11 21:56:48,634:INFO:create_model_container: 17
2022-11-11 21:56:48,634:INFO:master_model_container: 17
2022-11-11 21:56:48,634:INFO:display_container: 2
2022-11-11 21:56:48,635:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              device='gpu', importance_type='split', learning_rate=0.1,
              max_depth=-1, min_child_samples=20, min_child_weight=0.001,
              min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
              objective=None, random_state=8052, reg_alpha=0.0, reg_lambda=0.0,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0)
2022-11-11 21:56:48,635:INFO:finalize_model() succesfully completed......................................
2022-11-11 21:56:51,657:INFO:Initializing save_model()
2022-11-11 21:56:51,657:INFO:save_model(model=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              device='gpu', importance_type='split', learning_rate=0.1,
              max_depth=-1, min_child_samples=20, min_child_weight=0.001,
              min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
              objective=None, random_state=8052, reg_alpha=0.0, reg_lambda=0.0,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0), model_name=saved_model, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=['Id'],
                                      ml_usecase='regression',
                                      numerical_features=[], target='SalePrice',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_st...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='SalePrice')),
                ('fix_perfect', Remove_100(target='SalePrice')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True, kwargs={})
2022-11-11 21:56:51,657:INFO:Adding model into prep_pipe
2022-11-11 21:56:51,672:INFO:saved_model.pkl saved in current working directory
2022-11-11 21:56:51,678:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=['Id'],
                                      ml_usecase='regression',
                                      numerical_features=[], target='SalePrice',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_st...
                 LGBMRegressor(boosting_type='gbdt', class_weight=None,
                               colsample_bytree=1.0, device='gpu',
                               importance_type='split', learning_rate=0.1,
                               max_depth=-1, min_child_samples=20,
                               min_child_weight=0.001, min_split_gain=0.0,
                               n_estimators=100, n_jobs=-1, num_leaves=31,
                               objective=None, random_state=8052, reg_alpha=0.0,
                               reg_lambda=0.0, silent='warn', subsample=1.0,
                               subsample_for_bin=200000, subsample_freq=0)]],
         verbose=False)
2022-11-11 21:56:51,678:INFO:save_model() successfully completed......................................
2022-11-11 21:57:49,504:INFO:Initializing get_config()
2022-11-11 21:57:49,504:INFO:get_config(variable=data_before_preprocess)
2022-11-11 21:57:49,512:INFO:Global variable: data_before_preprocess returned as         Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \
0        1          60       RL         65.0     8450   Pave   NaN      Reg   
1        2          20       RL         80.0     9600   Pave   NaN      Reg   
2        3          60       RL         68.0    11250   Pave   NaN      IR1   
3        4          70       RL         60.0     9550   Pave   NaN      IR1   
4        5          60       RL         84.0    14260   Pave   NaN      IR1   
...    ...         ...      ...          ...      ...    ...   ...      ...   
1455  1456          60       RL         62.0     7917   Pave   NaN      Reg   
1456  1457          20       RL         85.0    13175   Pave   NaN      Reg   
1457  1458          70       RL         66.0     9042   Pave   NaN      Reg   
1458  1459          20       RL         68.0     9717   Pave   NaN      Reg   
1459  1460          20       RL         75.0     9937   Pave   NaN      Reg   

     LandContour Utilities  ... PoolArea PoolQC  Fence MiscFeature MiscVal  \
0            Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
1            Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
2            Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
3            Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
4            Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
...          ...       ...  ...      ...    ...    ...         ...     ...   
1455         Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
1456         Lvl    AllPub  ...        0    NaN  MnPrv         NaN       0   
1457         Lvl    AllPub  ...        0    NaN  GdPrv        Shed    2500   
1458         Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
1459         Lvl    AllPub  ...        0    NaN    NaN         NaN       0   

     MoSold YrSold  SaleType  SaleCondition  SalePrice  
0         2   2008        WD         Normal     208500  
1         5   2007        WD         Normal     181500  
2         9   2008        WD         Normal     223500  
3         2   2006        WD        Abnorml     140000  
4        12   2008        WD         Normal     250000  
...     ...    ...       ...            ...        ...  
1455      8   2007        WD         Normal     175000  
1456      2   2010        WD         Normal     210000  
1457      5   2010        WD         Normal     266500  
1458      4   2010        WD         Normal     142125  
1459      6   2008        WD         Normal     147500  

[1460 rows x 81 columns]
2022-11-11 21:57:49,512:INFO:get_config() succesfully completed......................................
2022-11-11 21:57:49,512:INFO:Initializing get_config()
2022-11-11 21:57:49,512:INFO:get_config(variable=prep_pipe)
2022-11-11 21:57:49,516:INFO:Global variable: prep_pipe returned as Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=['Id'],
                                      ml_usecase='regression',
                                      numerical_features=[], target='SalePrice',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_st...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='SalePrice')),
                ('fix_perfect', Remove_100(target='SalePrice')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-11-11 21:57:49,516:INFO:get_config() succesfully completed......................................
2022-11-11 21:57:49,516:INFO:Initializing get_config()
2022-11-11 21:57:49,516:INFO:get_config(variable=prep_pipe)
2022-11-11 21:57:49,519:INFO:Global variable: prep_pipe returned as Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=['Id'],
                                      ml_usecase='regression',
                                      numerical_features=[], target='SalePrice',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_st...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='SalePrice')),
                ('fix_perfect', Remove_100(target='SalePrice')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-11-11 21:57:49,519:INFO:get_config() succesfully completed......................................
2022-11-11 21:57:49,519:INFO:Initializing get_config()
2022-11-11 21:57:49,519:INFO:get_config(variable=prep_pipe)
2022-11-11 21:57:49,522:INFO:Global variable: prep_pipe returned as Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=['Id'],
                                      ml_usecase='regression',
                                      numerical_features=[], target='SalePrice',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_st...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='SalePrice')),
                ('fix_perfect', Remove_100(target='SalePrice')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-11-11 21:57:49,522:INFO:get_config() succesfully completed......................................
2022-11-11 21:59:08,301:INFO:Initializing predict_model()
2022-11-11 21:59:08,301:INFO:predict_model(estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              device='gpu', importance_type='split', learning_rate=0.1,
              max_depth=-1, min_child_samples=20, min_child_weight=0.001,
              min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
              objective=None, random_state=8052, reg_alpha=0.0, reg_lambda=0.0,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=None, display=None, drift_kwargs=None)
2022-11-11 21:59:08,301:INFO:Checking exceptions
2022-11-11 21:59:08,301:INFO:Preloading libraries
2022-11-11 21:59:08,301:INFO:Preparing display monitor
2022-11-11 22:01:44,731:INFO:Initializing predict_model()
2022-11-11 22:01:44,731:INFO:predict_model(estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              device='gpu', importance_type='split', learning_rate=0.1,
              max_depth=-1, min_child_samples=20, min_child_weight=0.001,
              min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
              objective=None, random_state=8052, reg_alpha=0.0, reg_lambda=0.0,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=None, display=None, drift_kwargs=None)
2022-11-11 22:01:44,731:INFO:Checking exceptions
2022-11-11 22:01:44,731:INFO:Preloading libraries
2022-11-11 22:01:44,731:INFO:Preparing display monitor
2022-11-11 22:04:04,551:INFO:Initializing predict_model()
2022-11-11 22:04:04,551:INFO:predict_model(estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              device='gpu', importance_type='split', learning_rate=0.1,
              max_depth=-1, min_child_samples=20, min_child_weight=0.001,
              min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
              objective=None, random_state=8052, reg_alpha=0.0, reg_lambda=0.0,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=None, display=None, drift_kwargs=None)
2022-11-11 22:04:04,551:INFO:Checking exceptions
2022-11-11 22:04:04,551:INFO:Preloading libraries
2022-11-11 22:04:04,551:INFO:Preparing display monitor
2022-11-11 22:04:37,627:INFO:Initializing predict_model()
2022-11-11 22:04:37,627:INFO:predict_model(estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              device='gpu', importance_type='split', learning_rate=0.1,
              max_depth=-1, min_child_samples=20, min_child_weight=0.001,
              min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
              objective=None, random_state=8052, reg_alpha=0.0, reg_lambda=0.0,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=None, display=None, drift_kwargs=None)
2022-11-11 22:04:37,627:INFO:Checking exceptions
2022-11-11 22:04:37,627:INFO:Preloading libraries
2022-11-11 22:04:37,627:INFO:Preparing display monitor
2022-11-11 22:04:57,750:INFO:Initializing predict_model()
2022-11-11 22:04:57,750:INFO:predict_model(estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              device='gpu', importance_type='split', learning_rate=0.1,
              max_depth=-1, min_child_samples=20, min_child_weight=0.001,
              min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
              objective=None, random_state=8052, reg_alpha=0.0, reg_lambda=0.0,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=None, display=None, drift_kwargs=None)
2022-11-11 22:04:57,750:INFO:Checking exceptions
2022-11-11 22:04:57,750:INFO:Preloading libraries
2022-11-11 22:04:57,751:INFO:Preparing display monitor
2022-11-11 22:05:16,070:INFO:Initializing predict_model()
2022-11-11 22:05:16,070:INFO:predict_model(estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              device='gpu', importance_type='split', learning_rate=0.1,
              max_depth=-1, min_child_samples=20, min_child_weight=0.001,
              min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
              objective=None, random_state=8052, reg_alpha=0.0, reg_lambda=0.0,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=None, display=None, drift_kwargs=None)
2022-11-11 22:05:16,070:INFO:Checking exceptions
2022-11-11 22:05:16,070:INFO:Preloading libraries
2022-11-11 22:05:16,070:INFO:Preparing display monitor
2022-11-11 22:07:15,339:INFO:Initializing predict_model()
2022-11-11 22:07:15,339:INFO:predict_model(estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              device='gpu', importance_type='split', learning_rate=0.1,
              max_depth=-1, min_child_samples=20, min_child_weight=0.001,
              min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
              objective=None, random_state=8052, reg_alpha=0.0, reg_lambda=0.0,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=None, display=None, drift_kwargs=None)
2022-11-11 22:07:15,339:INFO:Checking exceptions
2022-11-11 22:07:15,339:INFO:Preloading libraries
2022-11-11 22:07:15,339:INFO:Preparing display monitor
2022-11-11 22:07:32,977:INFO:Initializing predict_model()
2022-11-11 22:07:32,977:INFO:predict_model(estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              device='gpu', importance_type='split', learning_rate=0.1,
              max_depth=-1, min_child_samples=20, min_child_weight=0.001,
              min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
              objective=None, random_state=8052, reg_alpha=0.0, reg_lambda=0.0,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=None, display=None, drift_kwargs=None)
2022-11-11 22:07:32,977:INFO:Checking exceptions
2022-11-11 22:07:32,977:INFO:Preloading libraries
2022-11-11 22:07:32,977:INFO:Preparing display monitor
2022-11-11 22:07:41,894:INFO:Initializing predict_model()
2022-11-11 22:07:41,894:INFO:predict_model(estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              device='gpu', importance_type='split', learning_rate=0.1,
              max_depth=-1, min_child_samples=20, min_child_weight=0.001,
              min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
              objective=None, random_state=8052, reg_alpha=0.0, reg_lambda=0.0,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=None, display=None, drift_kwargs=None)
2022-11-11 22:07:41,894:INFO:Checking exceptions
2022-11-11 22:07:41,894:INFO:Preloading libraries
2022-11-11 22:07:41,894:INFO:Preparing display monitor
2022-11-12 17:15:18,084:INFO:Initializing get_config()
2022-11-12 17:15:18,085:INFO:get_config(variable=data_before_preprocess)
2022-11-12 17:17:18,258:INFO:Initializing finalize_model()
2022-11-12 17:17:18,258:INFO:finalize_model(estimator=C:/Users/Tommy/notebook/saved_model.pkl, fit_kwargs=None, groups=None, model_only=True, display=None, experiment_custom_tags=None, return_train_score=False)
2022-11-12 17:17:27,059:INFO:Initializing finalize_model()
2022-11-12 17:17:27,060:INFO:finalize_model(estimator=C:/Users/Tommy/notebook/saved_model.pkl, fit_kwargs=None, groups=None, model_only=True, display=None, experiment_custom_tags=None, return_train_score=False)
2022-11-12 17:23:05,036:INFO:Initializing get_config()
2022-11-12 17:23:05,036:INFO:get_config(variable=data_before_preprocess)
2022-11-12 17:24:35,516:INFO:Initializing get_config()
2022-11-12 17:24:35,516:INFO:get_config(variable=data_before_preprocess)
2022-11-12 17:33:09,667:INFO:PyCaret Supervised Module
2022-11-12 17:33:09,668:INFO:ML Usecase: regression
2022-11-12 17:33:09,668:INFO:version 2.3.10
2022-11-12 17:33:09,668:INFO:Initializing setup()
2022-11-12 17:33:09,668:INFO:setup(target=SalePrice, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=True, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-11-12 17:33:09,668:INFO:Checking environment
2022-11-12 17:33:09,668:INFO:python_version: 3.7.8
2022-11-12 17:33:09,668:INFO:python_build: ('tags/v3.7.8:4b47a5b6ba', 'Jun 28 2020 08:53:46')
2022-11-12 17:33:09,668:INFO:machine: AMD64
2022-11-12 17:33:09,668:INFO:platform: Windows-10-10.0.19041-SP0
2022-11-12 17:33:09,673:INFO:Memory: svmem(total=17090736128, available=5820346368, percent=65.9, used=11270389760, free=5820346368)
2022-11-12 17:33:09,673:INFO:Physical Core: 8
2022-11-12 17:33:09,673:INFO:Logical Core: 16
2022-11-12 17:33:09,673:INFO:Checking libraries
2022-11-12 17:33:09,673:INFO:pd==1.3.5
2022-11-12 17:33:09,673:INFO:numpy==1.19.5
2022-11-12 17:33:09,673:INFO:sklearn==0.23.2
2022-11-12 17:33:09,673:INFO:lightgbm==3.3.3
2022-11-12 17:33:09,674:WARNING:catboost not found
2022-11-12 17:33:09,675:WARNING:xgboost not found
2022-11-12 17:33:09,675:INFO:mlflow==1.30.0
2022-11-12 17:33:09,675:INFO:Checking Exceptions
2022-11-12 17:33:09,675:INFO:Declaring global variables
2022-11-12 17:33:09,675:INFO:USI: 75f3
2022-11-12 17:33:09,675:INFO:pycaret_globals: {'USI', 'display_container', 'X', 'transform_target_param', 'target_param', 'fold_generator', 'transform_target_method_param', '_gpu_n_jobs_param', 'create_model_container', 'gpu_param', 'imputation_regressor', '_all_models_internal', '_all_models', 'exp_name_log', 'y_test', 'log_plots_param', 'y_train', 'dashboard_logger', 'fold_param', 'master_model_container', 'n_jobs_param', 'fold_groups_param', 'html_param', 'prep_pipe', 'seed', '_all_metrics', 'experiment__', 'logging_param', 'y', 'fix_imbalance_param', 'fold_groups_param_full', 'X_train', 'data_before_preprocess', 'fix_imbalance_method_param', 'iterative_imputation_iters_param', '_available_plots', '_internal_pipeline', 'imputation_classifier', 'pycaret_globals', 'stratify_param', 'X_test', 'fold_shuffle_param', '_ml_usecase'}
2022-11-12 17:33:09,675:INFO:Preparing display monitor
2022-11-12 17:33:09,675:INFO:Preparing display monitor
2022-11-12 17:33:09,685:INFO:Importing libraries
2022-11-12 17:33:09,685:INFO:Copying data for preprocessing
2022-11-12 17:33:09,691:INFO:Declaring preprocessing parameters
2022-11-12 17:33:09,692:WARNING:cuML not found
2022-11-12 17:33:09,692:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.3.3
2022-11-12 17:33:09,694:INFO:Creating preprocessing pipeline
2022-11-12 17:33:09,721:INFO:Preprocessing pipeline created successfully
2022-11-12 17:33:09,721:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-11-12 17:33:09,721:INFO:Creating global containers
2022-11-12 17:33:09,723:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-11-12 17:47:36,038:WARNING:Couldn't import cuml.linear_model.LinearRegression
2022-11-12 17:47:36,039:WARNING:Couldn't import cuml.linear_model.Lasso
2022-11-12 17:47:36,044:WARNING:Couldn't import cuml.linear_model.Ridge
2022-11-12 17:47:36,049:WARNING:Couldn't import cuml.linear_model.ElasticNet
2022-11-12 17:47:36,103:WARNING:Couldn't import cuml.svm.SVR
2022-11-12 17:47:36,147:WARNING:Couldn't import cuml.neighbors.KNeighborsRegressor
2022-11-12 17:47:36,147:WARNING:Couldn't import cuml.ensemble
2022-11-12 17:47:36,148:WARNING:Couldn't import xgboost.XGBRegressor
2022-11-12 17:47:36,631:WARNING:Couldn't import catboost.CatBoostRegressor
2022-11-12 17:47:36,633:WARNING:Couldn't import cuml.linear_model.LinearRegression
2022-11-12 17:47:36,633:WARNING:Couldn't import cuml.linear_model.Lasso
2022-11-12 17:47:36,640:WARNING:Couldn't import cuml.linear_model.Ridge
2022-11-12 17:47:36,647:WARNING:Couldn't import cuml.linear_model.ElasticNet
2022-11-12 17:47:36,723:WARNING:Couldn't import cuml.svm.SVR
2022-11-12 17:47:36,770:WARNING:Couldn't import cuml.neighbors.KNeighborsRegressor
2022-11-12 17:47:36,770:WARNING:Couldn't import cuml.ensemble
2022-11-12 17:47:36,771:WARNING:Couldn't import xgboost.XGBRegressor
2022-11-12 17:47:36,891:WARNING:Couldn't import catboost.CatBoostRegressor
2022-11-12 17:47:36,891:INFO:Creating grid variables
2022-11-12 17:47:36,905:INFO:create_model_container: 0
2022-11-12 17:47:36,905:INFO:master_model_container: 0
2022-11-12 17:47:36,906:INFO:display_container: 1
2022-11-12 17:47:36,911:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=['Id'],
                                      ml_usecase='regression',
                                      numerical_features=[], target='SalePrice',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_st...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='SalePrice')),
                ('fix_perfect', Remove_100(target='SalePrice')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-11-12 17:47:36,911:INFO:setup() succesfully completed......................................
2022-11-12 17:47:37,067:INFO:Initializing compare_models()
2022-11-12 17:47:37,067:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2022-11-12 17:47:37,067:INFO:Checking exceptions
2022-11-12 17:47:37,067:INFO:Preparing display monitor
2022-11-12 17:47:37,067:INFO:Preparing display monitor
2022-11-12 17:47:37,088:INFO:Initializing Linear Regression
2022-11-12 17:47:37,088:INFO:Total runtime is 0.0 minutes
2022-11-12 17:47:37,095:INFO:SubProcess create_model() called ==================================
2022-11-12 17:47:37,095:INFO:Initializing create_model()
2022-11-12 17:47:37,095:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8308D7A08>, return_train_score=False, kwargs={})
2022-11-12 17:47:37,095:INFO:Checking exceptions
2022-11-12 17:47:37,095:INFO:Importing libraries
2022-11-12 17:47:37,095:INFO:Copying training dataset
2022-11-12 17:47:37,097:INFO:Defining folds
2022-11-12 17:47:37,097:INFO:Declaring metric variables
2022-11-12 17:47:37,103:INFO:Importing untrained model
2022-11-12 17:47:37,109:INFO:Linear Regression Imported succesfully
2022-11-12 17:47:37,122:INFO:Starting cross validation
2022-11-12 17:47:37,128:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 17:47:38,249:INFO:Calculating mean and std
2022-11-12 17:47:38,250:INFO:Creating metrics dataframe
2022-11-12 17:47:38,254:INFO:Uploading results into container
2022-11-12 17:47:38,254:INFO:Uploading model into container now
2022-11-12 17:47:38,254:INFO:create_model_container: 1
2022-11-12 17:47:38,254:INFO:master_model_container: 1
2022-11-12 17:47:38,254:INFO:display_container: 2
2022-11-12 17:47:38,254:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2022-11-12 17:47:38,254:INFO:create_model() succesfully completed......................................
2022-11-12 17:47:38,327:INFO:SubProcess create_model() end ==================================
2022-11-12 17:47:38,327:INFO:Creating metrics dataframe
2022-11-12 17:47:38,337:INFO:Initializing Lasso Regression
2022-11-12 17:47:38,337:INFO:Total runtime is 0.02082134485244751 minutes
2022-11-12 17:47:38,343:INFO:SubProcess create_model() called ==================================
2022-11-12 17:47:38,344:INFO:Initializing create_model()
2022-11-12 17:47:38,344:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8308D7A08>, return_train_score=False, kwargs={})
2022-11-12 17:47:38,344:INFO:Checking exceptions
2022-11-12 17:47:38,344:INFO:Importing libraries
2022-11-12 17:47:38,344:INFO:Copying training dataset
2022-11-12 17:47:38,345:INFO:Defining folds
2022-11-12 17:47:38,345:INFO:Declaring metric variables
2022-11-12 17:47:38,351:INFO:Importing untrained model
2022-11-12 17:47:38,357:INFO:Lasso Regression Imported succesfully
2022-11-12 17:47:38,370:INFO:Starting cross validation
2022-11-12 17:47:38,371:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 17:47:39,673:INFO:Calculating mean and std
2022-11-12 17:47:39,674:INFO:Creating metrics dataframe
2022-11-12 17:47:39,678:INFO:Uploading results into container
2022-11-12 17:47:39,678:INFO:Uploading model into container now
2022-11-12 17:47:39,678:INFO:create_model_container: 2
2022-11-12 17:47:39,678:INFO:master_model_container: 2
2022-11-12 17:47:39,678:INFO:display_container: 2
2022-11-12 17:47:39,678:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=1730,
      selection='cyclic', tol=0.0001, warm_start=False)
2022-11-12 17:47:39,678:INFO:create_model() succesfully completed......................................
2022-11-12 17:47:39,750:INFO:SubProcess create_model() end ==================================
2022-11-12 17:47:39,750:INFO:Creating metrics dataframe
2022-11-12 17:47:39,761:INFO:Initializing Ridge Regression
2022-11-12 17:47:39,761:INFO:Total runtime is 0.04456002314885457 minutes
2022-11-12 17:47:39,768:INFO:SubProcess create_model() called ==================================
2022-11-12 17:47:39,768:INFO:Initializing create_model()
2022-11-12 17:47:39,768:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8308D7A08>, return_train_score=False, kwargs={})
2022-11-12 17:47:39,769:INFO:Checking exceptions
2022-11-12 17:47:39,769:INFO:Importing libraries
2022-11-12 17:47:39,769:INFO:Copying training dataset
2022-11-12 17:47:39,770:INFO:Defining folds
2022-11-12 17:47:39,770:INFO:Declaring metric variables
2022-11-12 17:47:39,776:INFO:Importing untrained model
2022-11-12 17:47:39,782:INFO:Ridge Regression Imported succesfully
2022-11-12 17:47:39,794:INFO:Starting cross validation
2022-11-12 17:47:39,795:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 17:47:40,469:INFO:Calculating mean and std
2022-11-12 17:47:40,470:INFO:Creating metrics dataframe
2022-11-12 17:47:40,474:INFO:Uploading results into container
2022-11-12 17:47:40,474:INFO:Uploading model into container now
2022-11-12 17:47:40,474:INFO:create_model_container: 3
2022-11-12 17:47:40,475:INFO:master_model_container: 3
2022-11-12 17:47:40,475:INFO:display_container: 2
2022-11-12 17:47:40,475:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=1730, solver='auto', tol=0.001)
2022-11-12 17:47:40,475:INFO:create_model() succesfully completed......................................
2022-11-12 17:47:40,549:INFO:SubProcess create_model() end ==================================
2022-11-12 17:47:40,549:INFO:Creating metrics dataframe
2022-11-12 17:47:40,559:INFO:Initializing Elastic Net
2022-11-12 17:47:40,560:INFO:Total runtime is 0.057863020896911616 minutes
2022-11-12 17:47:40,566:INFO:SubProcess create_model() called ==================================
2022-11-12 17:47:40,566:INFO:Initializing create_model()
2022-11-12 17:47:40,566:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8308D7A08>, return_train_score=False, kwargs={})
2022-11-12 17:47:40,566:INFO:Checking exceptions
2022-11-12 17:47:40,566:INFO:Importing libraries
2022-11-12 17:47:40,566:INFO:Copying training dataset
2022-11-12 17:47:40,567:INFO:Defining folds
2022-11-12 17:47:40,568:INFO:Declaring metric variables
2022-11-12 17:47:40,573:INFO:Importing untrained model
2022-11-12 17:47:40,580:INFO:Elastic Net Imported succesfully
2022-11-12 17:47:40,592:INFO:Starting cross validation
2022-11-12 17:47:40,592:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 17:47:42,036:INFO:Calculating mean and std
2022-11-12 17:47:42,037:INFO:Creating metrics dataframe
2022-11-12 17:47:42,040:INFO:Uploading results into container
2022-11-12 17:47:42,040:INFO:Uploading model into container now
2022-11-12 17:47:42,040:INFO:create_model_container: 4
2022-11-12 17:47:42,040:INFO:master_model_container: 4
2022-11-12 17:47:42,041:INFO:display_container: 2
2022-11-12 17:47:42,041:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=1730, selection='cyclic', tol=0.0001, warm_start=False)
2022-11-12 17:47:42,041:INFO:create_model() succesfully completed......................................
2022-11-12 17:47:42,112:INFO:SubProcess create_model() end ==================================
2022-11-12 17:47:42,112:INFO:Creating metrics dataframe
2022-11-12 17:47:42,123:INFO:Initializing Least Angle Regression
2022-11-12 17:47:42,123:INFO:Total runtime is 0.08391616344451903 minutes
2022-11-12 17:47:42,130:INFO:SubProcess create_model() called ==================================
2022-11-12 17:47:42,130:INFO:Initializing create_model()
2022-11-12 17:47:42,130:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8308D7A08>, return_train_score=False, kwargs={})
2022-11-12 17:47:42,130:INFO:Checking exceptions
2022-11-12 17:47:42,130:INFO:Importing libraries
2022-11-12 17:47:42,130:INFO:Copying training dataset
2022-11-12 17:47:42,131:INFO:Defining folds
2022-11-12 17:47:42,131:INFO:Declaring metric variables
2022-11-12 17:47:42,136:INFO:Importing untrained model
2022-11-12 17:47:42,142:INFO:Least Angle Regression Imported succesfully
2022-11-12 17:47:42,154:INFO:Starting cross validation
2022-11-12 17:47:42,154:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 17:47:42,560:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2022-11-12 17:47:42,612:WARNING:Traceback (most recent call last):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 3210, in create_model_supervised
    error_score=0,
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 248, in cross_validate
    for train, test in cv.split(X, y, groups))
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 1088, in __call__
    while self.dispatch_one_batch(iterator):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 901, in dispatch_one_batch
    self._dispatch(tasks)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 819, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 597, in __init__
    self.results = batch()
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in __call__
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in <listcomp>
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 88, in __call__
    *args, **kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 213, in _score
    **self._kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 179, in mean_absolute_error
    y_true, y_pred, multioutput)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 645, in check_array
    allow_nan=force_all_finite == 'allow-nan')
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 99, in _assert_all_finite
    msg_dtype if msg_dtype is not None else X.dtype)
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2022-11-12 17:47:42,612:INFO:Initializing create_model()
2022-11-12 17:47:42,612:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8308D7A08>, return_train_score=False, kwargs={})
2022-11-12 17:47:42,612:INFO:Checking exceptions
2022-11-12 17:47:42,612:INFO:Importing libraries
2022-11-12 17:47:42,612:INFO:Copying training dataset
2022-11-12 17:47:42,613:INFO:Defining folds
2022-11-12 17:47:42,614:INFO:Declaring metric variables
2022-11-12 17:47:42,619:INFO:Importing untrained model
2022-11-12 17:47:42,625:INFO:Least Angle Regression Imported succesfully
2022-11-12 17:47:42,636:INFO:Starting cross validation
2022-11-12 17:47:42,637:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 17:47:43,038:ERROR:create_model() for lar raised an exception or returned all 0.0:
2022-11-12 17:47:43,039:ERROR:Traceback (most recent call last):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 3210, in create_model_supervised
    error_score=0,
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 248, in cross_validate
    for train, test in cv.split(X, y, groups))
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 1088, in __call__
    while self.dispatch_one_batch(iterator):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 901, in dispatch_one_batch
    self._dispatch(tasks)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 819, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 597, in __init__
    self.results = batch()
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in __call__
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in <listcomp>
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 88, in __call__
    *args, **kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 213, in _score
    **self._kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 179, in mean_absolute_error
    y_true, y_pred, multioutput)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 645, in check_array
    allow_nan=force_all_finite == 'allow-nan')
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 99, in _assert_all_finite
    msg_dtype if msg_dtype is not None else X.dtype)
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 2212, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 3210, in create_model_supervised
    error_score=0,
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 248, in cross_validate
    for train, test in cv.split(X, y, groups))
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 1088, in __call__
    while self.dispatch_one_batch(iterator):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 901, in dispatch_one_batch
    self._dispatch(tasks)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 819, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 597, in __init__
    self.results = batch()
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in __call__
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in <listcomp>
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 88, in __call__
    *args, **kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 213, in _score
    **self._kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 179, in mean_absolute_error
    y_true, y_pred, multioutput)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 645, in check_array
    allow_nan=force_all_finite == 'allow-nan')
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 99, in _assert_all_finite
    msg_dtype if msg_dtype is not None else X.dtype)
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2022-11-12 17:47:43,040:INFO:Initializing Lasso Least Angle Regression
2022-11-12 17:47:43,040:INFO:Total runtime is 0.09920303026835123 minutes
2022-11-12 17:47:43,046:INFO:SubProcess create_model() called ==================================
2022-11-12 17:47:43,047:INFO:Initializing create_model()
2022-11-12 17:47:43,047:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8308D7A08>, return_train_score=False, kwargs={})
2022-11-12 17:47:43,047:INFO:Checking exceptions
2022-11-12 17:47:43,047:INFO:Importing libraries
2022-11-12 17:47:43,047:INFO:Copying training dataset
2022-11-12 17:47:43,048:INFO:Defining folds
2022-11-12 17:47:43,048:INFO:Declaring metric variables
2022-11-12 17:47:43,054:INFO:Importing untrained model
2022-11-12 17:47:43,059:INFO:Lasso Least Angle Regression Imported succesfully
2022-11-12 17:47:43,071:INFO:Starting cross validation
2022-11-12 17:47:43,071:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 17:47:44,506:INFO:Calculating mean and std
2022-11-12 17:47:44,507:INFO:Creating metrics dataframe
2022-11-12 17:47:44,511:INFO:Uploading results into container
2022-11-12 17:47:44,511:INFO:Uploading model into container now
2022-11-12 17:47:44,511:INFO:create_model_container: 5
2022-11-12 17:47:44,511:INFO:master_model_container: 5
2022-11-12 17:47:44,512:INFO:display_container: 2
2022-11-12 17:47:44,512:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize=True,
          positive=False, precompute='auto', random_state=1730, verbose=False)
2022-11-12 17:47:44,512:INFO:create_model() succesfully completed......................................
2022-11-12 17:47:44,595:INFO:SubProcess create_model() end ==================================
2022-11-12 17:47:44,595:INFO:Creating metrics dataframe
2022-11-12 17:47:44,607:INFO:Initializing Orthogonal Matching Pursuit
2022-11-12 17:47:44,607:INFO:Total runtime is 0.12532043854395547 minutes
2022-11-12 17:47:44,613:INFO:SubProcess create_model() called ==================================
2022-11-12 17:47:44,614:INFO:Initializing create_model()
2022-11-12 17:47:44,614:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8308D7A08>, return_train_score=False, kwargs={})
2022-11-12 17:47:44,614:INFO:Checking exceptions
2022-11-12 17:47:44,614:INFO:Importing libraries
2022-11-12 17:47:44,614:INFO:Copying training dataset
2022-11-12 17:47:44,615:INFO:Defining folds
2022-11-12 17:47:44,615:INFO:Declaring metric variables
2022-11-12 17:47:44,621:INFO:Importing untrained model
2022-11-12 17:47:44,627:INFO:Orthogonal Matching Pursuit Imported succesfully
2022-11-12 17:47:44,639:INFO:Starting cross validation
2022-11-12 17:47:44,639:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 17:47:44,791:INFO:Calculating mean and std
2022-11-12 17:47:44,792:INFO:Creating metrics dataframe
2022-11-12 17:47:44,796:INFO:Uploading results into container
2022-11-12 17:47:44,796:INFO:Uploading model into container now
2022-11-12 17:47:44,796:INFO:create_model_container: 6
2022-11-12 17:47:44,796:INFO:master_model_container: 6
2022-11-12 17:47:44,796:INFO:display_container: 2
2022-11-12 17:47:44,796:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None)
2022-11-12 17:47:44,796:INFO:create_model() succesfully completed......................................
2022-11-12 17:47:44,873:INFO:SubProcess create_model() end ==================================
2022-11-12 17:47:44,873:INFO:Creating metrics dataframe
2022-11-12 17:47:44,884:INFO:Initializing Bayesian Ridge
2022-11-12 17:47:44,884:INFO:Total runtime is 0.1299358328183492 minutes
2022-11-12 17:47:44,890:INFO:SubProcess create_model() called ==================================
2022-11-12 17:47:44,891:INFO:Initializing create_model()
2022-11-12 17:47:44,891:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001C8308D7A08>, return_train_score=False, kwargs={})
2022-11-12 17:47:44,891:INFO:Checking exceptions
2022-11-12 17:47:44,891:INFO:Importing libraries
2022-11-12 17:47:44,891:INFO:Copying training dataset
2022-11-12 17:47:44,892:INFO:Defining folds
2022-11-12 17:47:44,892:INFO:Declaring metric variables
2022-11-12 17:47:44,898:INFO:Importing untrained model
2022-11-12 17:47:44,904:INFO:Bayesian Ridge Imported succesfully
2022-11-12 17:47:44,916:INFO:Starting cross validation
2022-11-12 17:47:44,917:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 17:48:08,386:INFO:PyCaret Supervised Module
2022-11-12 17:48:08,387:INFO:ML Usecase: regression
2022-11-12 17:48:08,387:INFO:version 2.3.10
2022-11-12 17:48:08,387:INFO:Initializing setup()
2022-11-12 17:48:08,387:INFO:setup(target=SalePrice, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=True, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-11-12 17:48:08,387:INFO:Checking environment
2022-11-12 17:48:08,387:INFO:python_version: 3.7.8
2022-11-12 17:48:08,387:INFO:python_build: ('tags/v3.7.8:4b47a5b6ba', 'Jun 28 2020 08:53:46')
2022-11-12 17:48:08,387:INFO:machine: AMD64
2022-11-12 17:48:08,387:INFO:platform: Windows-10-10.0.19041-SP0
2022-11-12 17:48:08,391:INFO:Memory: svmem(total=17090736128, available=5529223168, percent=67.6, used=11561512960, free=5529223168)
2022-11-12 17:48:08,392:INFO:Physical Core: 8
2022-11-12 17:48:08,392:INFO:Logical Core: 16
2022-11-12 17:48:08,392:INFO:Checking libraries
2022-11-12 17:48:08,392:INFO:pd==1.3.5
2022-11-12 17:48:08,392:INFO:numpy==1.19.5
2022-11-12 17:48:08,392:INFO:sklearn==0.23.2
2022-11-12 17:48:08,392:INFO:lightgbm==3.3.3
2022-11-12 17:48:08,393:WARNING:catboost not found
2022-11-12 17:48:08,394:WARNING:xgboost not found
2022-11-12 17:48:08,394:INFO:mlflow==1.30.0
2022-11-12 17:48:08,394:INFO:Checking Exceptions
2022-11-12 17:48:08,394:INFO:Declaring global variables
2022-11-12 17:48:08,395:INFO:USI: f142
2022-11-12 17:48:08,395:INFO:pycaret_globals: {'_available_plots', 'exp_name_log', 'fix_imbalance_param', 'fold_generator', 'n_jobs_param', 'y_train', 'master_model_container', 'seed', 'USI', 'transform_target_param', 'X', '_all_models', 'experiment__', 'imputation_regressor', 'fold_groups_param', 'html_param', 'X_train', 'display_container', 'target_param', 'create_model_container', 'fold_groups_param_full', 'y', 'logging_param', 'transform_target_method_param', '_gpu_n_jobs_param', '_all_models_internal', '_ml_usecase', 'y_test', 'data_before_preprocess', 'iterative_imputation_iters_param', 'prep_pipe', 'fix_imbalance_method_param', 'X_test', 'stratify_param', '_all_metrics', 'gpu_param', 'fold_param', 'fold_shuffle_param', 'dashboard_logger', 'imputation_classifier', 'log_plots_param', 'pycaret_globals', '_internal_pipeline'}
2022-11-12 17:48:08,395:INFO:Preparing display monitor
2022-11-12 17:48:08,395:INFO:Preparing display monitor
2022-11-12 17:48:08,405:INFO:Importing libraries
2022-11-12 17:48:08,405:INFO:Copying data for preprocessing
2022-11-12 17:48:08,411:INFO:Declaring preprocessing parameters
2022-11-12 17:48:08,412:WARNING:cuML not found
2022-11-12 17:48:08,412:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.3.3
2022-11-12 17:48:08,413:INFO:Creating preprocessing pipeline
2022-11-12 17:48:08,438:INFO:Preprocessing pipeline created successfully
2022-11-12 17:48:08,439:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-11-12 17:48:08,439:INFO:Creating global containers
2022-11-12 17:48:08,440:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-11-12 17:57:34,065:INFO:PyCaret Supervised Module
2022-11-12 17:57:34,065:INFO:ML Usecase: regression
2022-11-12 17:57:34,065:INFO:version 2.3.10
2022-11-12 17:57:34,065:INFO:Initializing setup()
2022-11-12 17:57:34,065:INFO:setup(target=SalePrice, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=True, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-11-12 17:57:34,065:INFO:Checking environment
2022-11-12 17:57:34,065:INFO:python_version: 3.7.8
2022-11-12 17:57:34,065:INFO:python_build: ('tags/v3.7.8:4b47a5b6ba', 'Jun 28 2020 08:53:46')
2022-11-12 17:57:34,065:INFO:machine: AMD64
2022-11-12 17:57:34,065:INFO:platform: Windows-10-10.0.19041-SP0
2022-11-12 17:57:34,070:INFO:Memory: svmem(total=17090736128, available=5681471488, percent=66.8, used=11409264640, free=5681471488)
2022-11-12 17:57:34,070:INFO:Physical Core: 8
2022-11-12 17:57:34,070:INFO:Logical Core: 16
2022-11-12 17:57:34,070:INFO:Checking libraries
2022-11-12 17:57:34,070:INFO:pd==1.3.5
2022-11-12 17:57:34,070:INFO:numpy==1.19.5
2022-11-12 17:57:34,070:INFO:sklearn==0.23.2
2022-11-12 17:57:34,070:INFO:lightgbm==3.3.3
2022-11-12 17:57:34,071:WARNING:catboost not found
2022-11-12 17:57:34,071:WARNING:xgboost not found
2022-11-12 17:57:34,072:INFO:mlflow==1.30.0
2022-11-12 17:57:34,072:INFO:Checking Exceptions
2022-11-12 17:57:34,072:INFO:Declaring global variables
2022-11-12 17:57:34,072:INFO:USI: 6884
2022-11-12 17:57:34,072:INFO:pycaret_globals: {'create_model_container', 'seed', 'imputation_classifier', 'transform_target_method_param', 'exp_name_log', 'fold_groups_param', '_ml_usecase', 'fold_shuffle_param', 'USI', 'transform_target_param', 'X_test', 'y', 'experiment__', '_all_models', 'fix_imbalance_param', 'fold_groups_param_full', 'y_test', 'data_before_preprocess', 'X_train', 'log_plots_param', 'stratify_param', '_all_metrics', 'pycaret_globals', '_all_models_internal', 'prep_pipe', 'gpu_param', 'master_model_container', 'fold_generator', 'y_train', 'fix_imbalance_method_param', 'target_param', 'X', 'imputation_regressor', '_internal_pipeline', '_available_plots', 'iterative_imputation_iters_param', '_gpu_n_jobs_param', 'fold_param', 'display_container', 'n_jobs_param', 'dashboard_logger', 'html_param', 'logging_param'}
2022-11-12 17:57:34,072:INFO:Preparing display monitor
2022-11-12 17:57:34,072:INFO:Preparing display monitor
2022-11-12 17:57:34,081:INFO:Importing libraries
2022-11-12 17:57:34,081:INFO:Copying data for preprocessing
2022-11-12 17:57:34,087:INFO:Declaring preprocessing parameters
2022-11-12 17:57:34,087:WARNING:cuML not found
2022-11-12 17:57:34,088:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.3.3
2022-11-12 17:57:34,089:INFO:Creating preprocessing pipeline
2022-11-12 17:57:34,115:INFO:Preprocessing pipeline created successfully
2022-11-12 17:57:34,115:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-11-12 17:57:34,115:INFO:Creating global containers
2022-11-12 17:57:34,116:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-11-12 17:57:34,731:WARNING:Couldn't import cuml.linear_model.LinearRegression
2022-11-12 17:57:34,731:WARNING:Couldn't import cuml.linear_model.Lasso
2022-11-12 17:57:34,736:WARNING:Couldn't import cuml.linear_model.Ridge
2022-11-12 17:57:34,741:WARNING:Couldn't import cuml.linear_model.ElasticNet
2022-11-12 17:57:34,793:WARNING:Couldn't import cuml.svm.SVR
2022-11-12 17:57:34,836:WARNING:Couldn't import cuml.neighbors.KNeighborsRegressor
2022-11-12 17:57:34,837:WARNING:Couldn't import cuml.ensemble
2022-11-12 17:57:34,837:WARNING:Couldn't import xgboost.XGBRegressor
2022-11-12 17:57:35,073:WARNING:Couldn't import catboost.CatBoostRegressor
2022-11-12 17:57:35,074:WARNING:Couldn't import cuml.linear_model.LinearRegression
2022-11-12 17:57:35,074:WARNING:Couldn't import cuml.linear_model.Lasso
2022-11-12 17:57:35,081:WARNING:Couldn't import cuml.linear_model.Ridge
2022-11-12 17:57:35,087:WARNING:Couldn't import cuml.linear_model.ElasticNet
2022-11-12 17:57:35,156:WARNING:Couldn't import cuml.svm.SVR
2022-11-12 17:57:35,204:WARNING:Couldn't import cuml.neighbors.KNeighborsRegressor
2022-11-12 17:57:35,204:WARNING:Couldn't import cuml.ensemble
2022-11-12 17:57:35,205:WARNING:Couldn't import xgboost.XGBRegressor
2022-11-12 17:57:35,325:WARNING:Couldn't import catboost.CatBoostRegressor
2022-11-12 17:57:35,326:INFO:Creating grid variables
2022-11-12 17:57:35,341:INFO:create_model_container: 0
2022-11-12 17:57:35,341:INFO:master_model_container: 0
2022-11-12 17:57:35,341:INFO:display_container: 1
2022-11-12 17:57:35,346:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=['Id'],
                                      ml_usecase='regression',
                                      numerical_features=[], target='SalePrice',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_st...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='SalePrice')),
                ('fix_perfect', Remove_100(target='SalePrice')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-11-12 17:57:35,346:INFO:setup() succesfully completed......................................
2022-11-12 18:13:52,362:INFO:PyCaret Supervised Module
2022-11-12 18:13:52,362:INFO:ML Usecase: regression
2022-11-12 18:13:52,362:INFO:version 2.3.10
2022-11-12 18:13:52,362:INFO:Initializing setup()
2022-11-12 18:13:52,362:INFO:setup(target=SalePrice, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=True, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-11-12 18:13:52,363:INFO:Checking environment
2022-11-12 18:13:52,363:INFO:python_version: 3.7.8
2022-11-12 18:13:52,363:INFO:python_build: ('tags/v3.7.8:4b47a5b6ba', 'Jun 28 2020 08:53:46')
2022-11-12 18:13:52,363:INFO:machine: AMD64
2022-11-12 18:13:52,363:INFO:platform: Windows-10-10.0.19041-SP0
2022-11-12 18:13:52,367:INFO:Memory: svmem(total=17090736128, available=5059960832, percent=70.4, used=12030775296, free=5059960832)
2022-11-12 18:13:52,367:INFO:Physical Core: 8
2022-11-12 18:13:52,368:INFO:Logical Core: 16
2022-11-12 18:13:52,368:INFO:Checking libraries
2022-11-12 18:13:52,368:INFO:pd==1.3.5
2022-11-12 18:13:52,368:INFO:numpy==1.19.5
2022-11-12 18:13:52,368:INFO:sklearn==0.23.2
2022-11-12 18:13:52,368:INFO:lightgbm==3.3.3
2022-11-12 18:13:52,369:WARNING:catboost not found
2022-11-12 18:13:52,369:WARNING:xgboost not found
2022-11-12 18:13:52,370:INFO:mlflow==1.30.0
2022-11-12 18:13:52,370:INFO:Checking Exceptions
2022-11-12 18:13:52,370:INFO:Declaring global variables
2022-11-12 18:13:52,370:INFO:USI: 5358
2022-11-12 18:13:52,370:INFO:pycaret_globals: {'y_train', '_all_models', 'fold_groups_param_full', 'gpu_param', 'imputation_classifier', 'iterative_imputation_iters_param', 'dashboard_logger', 'seed', 'X', 'X_train', 'USI', 'transform_target_param', 'fix_imbalance_method_param', '_all_metrics', 'prep_pipe', 'data_before_preprocess', 'X_test', 'pycaret_globals', 'display_container', 'n_jobs_param', '_available_plots', 'fold_generator', '_gpu_n_jobs_param', '_ml_usecase', '_all_models_internal', 'fix_imbalance_param', 'y_test', 'master_model_container', 'experiment__', 'html_param', 'exp_name_log', 'logging_param', 'transform_target_method_param', 'imputation_regressor', 'target_param', 'fold_shuffle_param', 'fold_param', 'y', 'create_model_container', 'stratify_param', 'log_plots_param', '_internal_pipeline', 'fold_groups_param'}
2022-11-12 18:13:52,370:INFO:Preparing display monitor
2022-11-12 18:13:52,370:INFO:Preparing display monitor
2022-11-12 18:13:52,380:INFO:Importing libraries
2022-11-12 18:13:52,380:INFO:Copying data for preprocessing
2022-11-12 18:13:52,386:INFO:Declaring preprocessing parameters
2022-11-12 18:13:52,387:WARNING:cuML not found
2022-11-12 18:13:52,387:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.3.3
2022-11-12 18:13:52,388:INFO:Creating preprocessing pipeline
2022-11-12 18:13:52,416:INFO:Preprocessing pipeline created successfully
2022-11-12 18:13:52,416:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-11-12 18:13:52,416:INFO:Creating global containers
2022-11-12 18:13:52,417:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-11-12 18:13:53,052:WARNING:Couldn't import cuml.linear_model.LinearRegression
2022-11-12 18:13:53,052:WARNING:Couldn't import cuml.linear_model.Lasso
2022-11-12 18:13:53,057:WARNING:Couldn't import cuml.linear_model.Ridge
2022-11-12 18:13:53,062:WARNING:Couldn't import cuml.linear_model.ElasticNet
2022-11-12 18:13:53,127:WARNING:Couldn't import cuml.svm.SVR
2022-11-12 18:13:53,171:WARNING:Couldn't import cuml.neighbors.KNeighborsRegressor
2022-11-12 18:13:53,172:WARNING:Couldn't import cuml.ensemble
2022-11-12 18:13:53,172:WARNING:Couldn't import xgboost.XGBRegressor
2022-11-12 18:13:53,409:WARNING:Couldn't import catboost.CatBoostRegressor
2022-11-12 18:13:53,410:WARNING:Couldn't import cuml.linear_model.LinearRegression
2022-11-12 18:13:53,410:WARNING:Couldn't import cuml.linear_model.Lasso
2022-11-12 18:13:53,417:WARNING:Couldn't import cuml.linear_model.Ridge
2022-11-12 18:13:53,423:WARNING:Couldn't import cuml.linear_model.ElasticNet
2022-11-12 18:13:53,494:WARNING:Couldn't import cuml.svm.SVR
2022-11-12 18:13:53,540:WARNING:Couldn't import cuml.neighbors.KNeighborsRegressor
2022-11-12 18:13:53,541:WARNING:Couldn't import cuml.ensemble
2022-11-12 18:13:53,541:WARNING:Couldn't import xgboost.XGBRegressor
2022-11-12 18:13:53,659:WARNING:Couldn't import catboost.CatBoostRegressor
2022-11-12 18:13:53,659:INFO:Creating grid variables
2022-11-12 18:13:53,674:INFO:create_model_container: 0
2022-11-12 18:13:53,674:INFO:master_model_container: 0
2022-11-12 18:13:53,674:INFO:display_container: 1
2022-11-12 18:13:53,679:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=['Id'],
                                      ml_usecase='regression',
                                      numerical_features=[], target='SalePrice',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_st...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='SalePrice')),
                ('fix_perfect', Remove_100(target='SalePrice')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-11-12 18:13:53,679:INFO:setup() succesfully completed......................................
2022-11-12 18:14:14,474:INFO:Initializing compare_models()
2022-11-12 18:14:14,474:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2022-11-12 18:14:14,474:INFO:Checking exceptions
2022-11-12 18:14:14,475:INFO:Preparing display monitor
2022-11-12 18:14:14,475:INFO:Preparing display monitor
2022-11-12 18:14:14,495:INFO:Initializing Linear Regression
2022-11-12 18:14:14,495:INFO:Total runtime is 0.0 minutes
2022-11-12 18:14:14,500:INFO:SubProcess create_model() called ==================================
2022-11-12 18:14:14,500:INFO:Initializing create_model()
2022-11-12 18:14:14,501:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F9322CA448>, return_train_score=False, kwargs={})
2022-11-12 18:14:14,501:INFO:Checking exceptions
2022-11-12 18:14:14,501:INFO:Importing libraries
2022-11-12 18:14:14,501:INFO:Copying training dataset
2022-11-12 18:14:14,502:INFO:Defining folds
2022-11-12 18:14:14,502:INFO:Declaring metric variables
2022-11-12 18:14:14,507:INFO:Importing untrained model
2022-11-12 18:14:14,514:INFO:Linear Regression Imported succesfully
2022-11-12 18:14:14,525:INFO:Starting cross validation
2022-11-12 18:14:14,529:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 18:14:15,556:INFO:Calculating mean and std
2022-11-12 18:14:15,557:INFO:Creating metrics dataframe
2022-11-12 18:14:15,561:INFO:Uploading results into container
2022-11-12 18:14:15,561:INFO:Uploading model into container now
2022-11-12 18:14:15,562:INFO:create_model_container: 1
2022-11-12 18:14:15,562:INFO:master_model_container: 1
2022-11-12 18:14:15,562:INFO:display_container: 2
2022-11-12 18:14:15,562:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2022-11-12 18:14:15,562:INFO:create_model() succesfully completed......................................
2022-11-12 18:14:15,660:INFO:SubProcess create_model() end ==================================
2022-11-12 18:14:15,660:INFO:Creating metrics dataframe
2022-11-12 18:14:15,674:INFO:Initializing Lasso Regression
2022-11-12 18:14:15,674:INFO:Total runtime is 0.01965441306432088 minutes
2022-11-12 18:14:15,680:INFO:SubProcess create_model() called ==================================
2022-11-12 18:14:15,681:INFO:Initializing create_model()
2022-11-12 18:14:15,681:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F9322CA448>, return_train_score=False, kwargs={})
2022-11-12 18:14:15,681:INFO:Checking exceptions
2022-11-12 18:14:15,681:INFO:Importing libraries
2022-11-12 18:14:15,681:INFO:Copying training dataset
2022-11-12 18:14:15,682:INFO:Defining folds
2022-11-12 18:14:15,683:INFO:Declaring metric variables
2022-11-12 18:14:15,688:INFO:Importing untrained model
2022-11-12 18:14:15,694:INFO:Lasso Regression Imported succesfully
2022-11-12 18:14:15,707:INFO:Starting cross validation
2022-11-12 18:14:15,707:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 18:14:16,744:INFO:Calculating mean and std
2022-11-12 18:14:16,745:INFO:Creating metrics dataframe
2022-11-12 18:14:16,749:INFO:Uploading results into container
2022-11-12 18:14:16,749:INFO:Uploading model into container now
2022-11-12 18:14:16,749:INFO:create_model_container: 2
2022-11-12 18:14:16,749:INFO:master_model_container: 2
2022-11-12 18:14:16,749:INFO:display_container: 2
2022-11-12 18:14:16,750:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=8320,
      selection='cyclic', tol=0.0001, warm_start=False)
2022-11-12 18:14:16,750:INFO:create_model() succesfully completed......................................
2022-11-12 18:14:16,836:INFO:SubProcess create_model() end ==================================
2022-11-12 18:14:16,836:INFO:Creating metrics dataframe
2022-11-12 18:14:16,848:INFO:Initializing Ridge Regression
2022-11-12 18:14:16,848:INFO:Total runtime is 0.03922548294067382 minutes
2022-11-12 18:14:16,855:INFO:SubProcess create_model() called ==================================
2022-11-12 18:14:16,855:INFO:Initializing create_model()
2022-11-12 18:14:16,855:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F9322CA448>, return_train_score=False, kwargs={})
2022-11-12 18:14:16,855:INFO:Checking exceptions
2022-11-12 18:14:16,855:INFO:Importing libraries
2022-11-12 18:14:16,855:INFO:Copying training dataset
2022-11-12 18:14:16,857:INFO:Defining folds
2022-11-12 18:14:16,857:INFO:Declaring metric variables
2022-11-12 18:14:16,863:INFO:Importing untrained model
2022-11-12 18:14:16,869:INFO:Ridge Regression Imported succesfully
2022-11-12 18:14:16,884:INFO:Starting cross validation
2022-11-12 18:14:16,884:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 18:14:17,752:INFO:Calculating mean and std
2022-11-12 18:14:17,753:INFO:Creating metrics dataframe
2022-11-12 18:14:17,757:INFO:Uploading results into container
2022-11-12 18:14:17,757:INFO:Uploading model into container now
2022-11-12 18:14:17,758:INFO:create_model_container: 3
2022-11-12 18:14:17,758:INFO:master_model_container: 3
2022-11-12 18:14:17,758:INFO:display_container: 2
2022-11-12 18:14:17,758:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=8320, solver='auto', tol=0.001)
2022-11-12 18:14:17,758:INFO:create_model() succesfully completed......................................
2022-11-12 18:14:17,847:INFO:SubProcess create_model() end ==================================
2022-11-12 18:14:17,847:INFO:Creating metrics dataframe
2022-11-12 18:14:17,860:INFO:Initializing Elastic Net
2022-11-12 18:14:17,860:INFO:Total runtime is 0.05609594583511352 minutes
2022-11-12 18:14:17,868:INFO:SubProcess create_model() called ==================================
2022-11-12 18:14:17,868:INFO:Initializing create_model()
2022-11-12 18:14:17,868:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F9322CA448>, return_train_score=False, kwargs={})
2022-11-12 18:14:17,868:INFO:Checking exceptions
2022-11-12 18:14:17,868:INFO:Importing libraries
2022-11-12 18:14:17,868:INFO:Copying training dataset
2022-11-12 18:14:17,869:INFO:Defining folds
2022-11-12 18:14:17,870:INFO:Declaring metric variables
2022-11-12 18:14:17,877:INFO:Importing untrained model
2022-11-12 18:14:17,883:INFO:Elastic Net Imported succesfully
2022-11-12 18:14:17,896:INFO:Starting cross validation
2022-11-12 18:14:17,897:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 18:14:19,519:INFO:Calculating mean and std
2022-11-12 18:14:19,520:INFO:Creating metrics dataframe
2022-11-12 18:14:19,525:INFO:Uploading results into container
2022-11-12 18:14:19,525:INFO:Uploading model into container now
2022-11-12 18:14:19,525:INFO:create_model_container: 4
2022-11-12 18:14:19,525:INFO:master_model_container: 4
2022-11-12 18:14:19,525:INFO:display_container: 2
2022-11-12 18:14:19,525:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=8320, selection='cyclic', tol=0.0001, warm_start=False)
2022-11-12 18:14:19,525:INFO:create_model() succesfully completed......................................
2022-11-12 18:14:19,606:INFO:SubProcess create_model() end ==================================
2022-11-12 18:14:19,607:INFO:Creating metrics dataframe
2022-11-12 18:14:19,617:INFO:Initializing Least Angle Regression
2022-11-12 18:14:19,617:INFO:Total runtime is 0.08537808656692504 minutes
2022-11-12 18:14:19,623:INFO:SubProcess create_model() called ==================================
2022-11-12 18:14:19,624:INFO:Initializing create_model()
2022-11-12 18:14:19,624:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F9322CA448>, return_train_score=False, kwargs={})
2022-11-12 18:14:19,624:INFO:Checking exceptions
2022-11-12 18:14:19,624:INFO:Importing libraries
2022-11-12 18:14:19,624:INFO:Copying training dataset
2022-11-12 18:14:19,625:INFO:Defining folds
2022-11-12 18:14:19,625:INFO:Declaring metric variables
2022-11-12 18:14:19,631:INFO:Importing untrained model
2022-11-12 18:14:19,638:INFO:Least Angle Regression Imported succesfully
2022-11-12 18:14:19,650:INFO:Starting cross validation
2022-11-12 18:14:19,650:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 18:14:19,843:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2022-11-12 18:14:19,847:WARNING:Traceback (most recent call last):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 3210, in create_model_supervised
    error_score=0,
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 248, in cross_validate
    for train, test in cv.split(X, y, groups))
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 1085, in __call__
    if self.dispatch_one_batch(iterator):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 901, in dispatch_one_batch
    self._dispatch(tasks)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 819, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 597, in __init__
    self.results = batch()
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in __call__
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in <listcomp>
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 88, in __call__
    *args, **kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 213, in _score
    **self._kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 179, in mean_absolute_error
    y_true, y_pred, multioutput)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 645, in check_array
    allow_nan=force_all_finite == 'allow-nan')
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 99, in _assert_all_finite
    msg_dtype if msg_dtype is not None else X.dtype)
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2022-11-12 18:14:19,848:INFO:Initializing create_model()
2022-11-12 18:14:19,848:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F9322CA448>, return_train_score=False, kwargs={})
2022-11-12 18:14:19,848:INFO:Checking exceptions
2022-11-12 18:14:19,848:INFO:Importing libraries
2022-11-12 18:14:19,848:INFO:Copying training dataset
2022-11-12 18:14:19,849:INFO:Defining folds
2022-11-12 18:14:19,849:INFO:Declaring metric variables
2022-11-12 18:14:19,855:INFO:Importing untrained model
2022-11-12 18:14:19,861:INFO:Least Angle Regression Imported succesfully
2022-11-12 18:14:19,874:INFO:Starting cross validation
2022-11-12 18:14:19,875:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 18:14:20,070:ERROR:create_model() for lar raised an exception or returned all 0.0:
2022-11-12 18:14:20,070:ERROR:Traceback (most recent call last):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 3210, in create_model_supervised
    error_score=0,
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 248, in cross_validate
    for train, test in cv.split(X, y, groups))
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 1085, in __call__
    if self.dispatch_one_batch(iterator):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 901, in dispatch_one_batch
    self._dispatch(tasks)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 819, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 597, in __init__
    self.results = batch()
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in __call__
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in <listcomp>
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 88, in __call__
    *args, **kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 213, in _score
    **self._kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 179, in mean_absolute_error
    y_true, y_pred, multioutput)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 645, in check_array
    allow_nan=force_all_finite == 'allow-nan')
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 99, in _assert_all_finite
    msg_dtype if msg_dtype is not None else X.dtype)
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 2212, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 3210, in create_model_supervised
    error_score=0,
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 248, in cross_validate
    for train, test in cv.split(X, y, groups))
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 1085, in __call__
    if self.dispatch_one_batch(iterator):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 901, in dispatch_one_batch
    self._dispatch(tasks)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 819, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 597, in __init__
    self.results = batch()
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in __call__
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in <listcomp>
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 88, in __call__
    *args, **kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 213, in _score
    **self._kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 179, in mean_absolute_error
    y_true, y_pred, multioutput)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 645, in check_array
    allow_nan=force_all_finite == 'allow-nan')
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 99, in _assert_all_finite
    msg_dtype if msg_dtype is not None else X.dtype)
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2022-11-12 18:14:20,071:INFO:Initializing Lasso Least Angle Regression
2022-11-12 18:14:20,071:INFO:Total runtime is 0.09294646183649698 minutes
2022-11-12 18:14:20,078:INFO:SubProcess create_model() called ==================================
2022-11-12 18:14:20,078:INFO:Initializing create_model()
2022-11-12 18:14:20,078:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F9322CA448>, return_train_score=False, kwargs={})
2022-11-12 18:14:20,078:INFO:Checking exceptions
2022-11-12 18:14:20,078:INFO:Importing libraries
2022-11-12 18:14:20,079:INFO:Copying training dataset
2022-11-12 18:14:20,079:INFO:Defining folds
2022-11-12 18:14:20,079:INFO:Declaring metric variables
2022-11-12 18:14:20,085:INFO:Importing untrained model
2022-11-12 18:14:20,091:INFO:Lasso Least Angle Regression Imported succesfully
2022-11-12 18:14:20,102:INFO:Starting cross validation
2022-11-12 18:14:20,103:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 18:14:21,455:INFO:Calculating mean and std
2022-11-12 18:14:21,456:INFO:Creating metrics dataframe
2022-11-12 18:14:21,460:INFO:Uploading results into container
2022-11-12 18:14:21,461:INFO:Uploading model into container now
2022-11-12 18:14:21,461:INFO:create_model_container: 5
2022-11-12 18:14:21,461:INFO:master_model_container: 5
2022-11-12 18:14:21,461:INFO:display_container: 2
2022-11-12 18:14:21,461:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize=True,
          positive=False, precompute='auto', random_state=8320, verbose=False)
2022-11-12 18:14:21,461:INFO:create_model() succesfully completed......................................
2022-11-12 18:14:21,537:INFO:SubProcess create_model() end ==================================
2022-11-12 18:14:21,537:INFO:Creating metrics dataframe
2022-11-12 18:14:21,549:INFO:Initializing Orthogonal Matching Pursuit
2022-11-12 18:14:21,549:INFO:Total runtime is 0.11757932106653848 minutes
2022-11-12 18:14:21,555:INFO:SubProcess create_model() called ==================================
2022-11-12 18:14:21,556:INFO:Initializing create_model()
2022-11-12 18:14:21,556:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F9322CA448>, return_train_score=False, kwargs={})
2022-11-12 18:14:21,556:INFO:Checking exceptions
2022-11-12 18:14:21,556:INFO:Importing libraries
2022-11-12 18:14:21,556:INFO:Copying training dataset
2022-11-12 18:14:21,557:INFO:Defining folds
2022-11-12 18:14:21,557:INFO:Declaring metric variables
2022-11-12 18:14:21,563:INFO:Importing untrained model
2022-11-12 18:14:21,568:INFO:Orthogonal Matching Pursuit Imported succesfully
2022-11-12 18:14:21,580:INFO:Starting cross validation
2022-11-12 18:14:21,581:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 18:14:21,733:INFO:Calculating mean and std
2022-11-12 18:14:21,734:INFO:Creating metrics dataframe
2022-11-12 18:14:21,738:INFO:Uploading results into container
2022-11-12 18:14:21,738:INFO:Uploading model into container now
2022-11-12 18:14:21,738:INFO:create_model_container: 6
2022-11-12 18:14:21,738:INFO:master_model_container: 6
2022-11-12 18:14:21,738:INFO:display_container: 2
2022-11-12 18:14:21,738:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None)
2022-11-12 18:14:21,738:INFO:create_model() succesfully completed......................................
2022-11-12 18:14:21,818:INFO:SubProcess create_model() end ==================================
2022-11-12 18:14:21,819:INFO:Creating metrics dataframe
2022-11-12 18:14:21,831:INFO:Initializing Bayesian Ridge
2022-11-12 18:14:21,831:INFO:Total runtime is 0.12227871417999267 minutes
2022-11-12 18:14:21,838:INFO:SubProcess create_model() called ==================================
2022-11-12 18:14:21,839:INFO:Initializing create_model()
2022-11-12 18:14:21,839:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F9322CA448>, return_train_score=False, kwargs={})
2022-11-12 18:14:21,839:INFO:Checking exceptions
2022-11-12 18:14:21,840:INFO:Importing libraries
2022-11-12 18:14:21,840:INFO:Copying training dataset
2022-11-12 18:14:21,841:INFO:Defining folds
2022-11-12 18:14:21,841:INFO:Declaring metric variables
2022-11-12 18:14:21,850:INFO:Importing untrained model
2022-11-12 18:14:21,858:INFO:Bayesian Ridge Imported succesfully
2022-11-12 18:14:21,874:INFO:Starting cross validation
2022-11-12 18:14:21,874:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 18:14:24,376:INFO:Calculating mean and std
2022-11-12 18:14:24,377:INFO:Creating metrics dataframe
2022-11-12 18:14:24,381:INFO:Uploading results into container
2022-11-12 18:14:24,381:INFO:Uploading model into container now
2022-11-12 18:14:24,381:INFO:create_model_container: 7
2022-11-12 18:14:24,381:INFO:master_model_container: 7
2022-11-12 18:14:24,381:INFO:display_container: 2
2022-11-12 18:14:24,381:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False)
2022-11-12 18:14:24,381:INFO:create_model() succesfully completed......................................
2022-11-12 18:14:24,452:INFO:SubProcess create_model() end ==================================
2022-11-12 18:14:24,452:INFO:Creating metrics dataframe
2022-11-12 18:14:24,464:INFO:Initializing Passive Aggressive Regressor
2022-11-12 18:14:24,465:INFO:Total runtime is 0.16617326736450194 minutes
2022-11-12 18:14:24,470:INFO:SubProcess create_model() called ==================================
2022-11-12 18:14:24,470:INFO:Initializing create_model()
2022-11-12 18:14:24,470:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F9322CA448>, return_train_score=False, kwargs={})
2022-11-12 18:14:24,471:INFO:Checking exceptions
2022-11-12 18:14:24,471:INFO:Importing libraries
2022-11-12 18:14:24,471:INFO:Copying training dataset
2022-11-12 18:14:24,472:INFO:Defining folds
2022-11-12 18:14:24,472:INFO:Declaring metric variables
2022-11-12 18:14:24,477:INFO:Importing untrained model
2022-11-12 18:14:24,483:INFO:Passive Aggressive Regressor Imported succesfully
2022-11-12 18:14:24,496:INFO:Starting cross validation
2022-11-12 18:14:24,497:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 18:14:24,726:INFO:Calculating mean and std
2022-11-12 18:14:24,727:INFO:Creating metrics dataframe
2022-11-12 18:14:24,730:INFO:Uploading results into container
2022-11-12 18:14:24,730:INFO:Uploading model into container now
2022-11-12 18:14:24,730:INFO:create_model_container: 8
2022-11-12 18:14:24,730:INFO:master_model_container: 8
2022-11-12 18:14:24,730:INFO:display_container: 2
2022-11-12 18:14:24,731:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=8320, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-11-12 18:14:24,731:INFO:create_model() succesfully completed......................................
2022-11-12 18:14:24,798:INFO:SubProcess create_model() end ==================================
2022-11-12 18:14:24,798:INFO:Creating metrics dataframe
2022-11-12 18:14:24,810:INFO:Initializing Huber Regressor
2022-11-12 18:14:24,810:INFO:Total runtime is 0.17192455132802326 minutes
2022-11-12 18:14:24,815:INFO:SubProcess create_model() called ==================================
2022-11-12 18:14:24,816:INFO:Initializing create_model()
2022-11-12 18:14:24,816:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F9322CA448>, return_train_score=False, kwargs={})
2022-11-12 18:14:24,816:INFO:Checking exceptions
2022-11-12 18:14:24,816:INFO:Importing libraries
2022-11-12 18:14:24,816:INFO:Copying training dataset
2022-11-12 18:14:24,817:INFO:Defining folds
2022-11-12 18:14:24,817:INFO:Declaring metric variables
2022-11-12 18:14:24,822:INFO:Importing untrained model
2022-11-12 18:14:24,827:INFO:Huber Regressor Imported succesfully
2022-11-12 18:14:24,838:INFO:Starting cross validation
2022-11-12 18:14:24,839:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 18:14:28,518:INFO:Calculating mean and std
2022-11-12 18:14:28,519:INFO:Creating metrics dataframe
2022-11-12 18:14:28,523:INFO:Uploading results into container
2022-11-12 18:14:28,523:INFO:Uploading model into container now
2022-11-12 18:14:28,523:INFO:create_model_container: 9
2022-11-12 18:14:28,523:INFO:master_model_container: 9
2022-11-12 18:14:28,523:INFO:display_container: 2
2022-11-12 18:14:28,524:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-11-12 18:14:28,524:INFO:create_model() succesfully completed......................................
2022-11-12 18:14:28,595:INFO:SubProcess create_model() end ==================================
2022-11-12 18:14:28,595:INFO:Creating metrics dataframe
2022-11-12 18:14:28,607:INFO:Initializing K Neighbors Regressor
2022-11-12 18:14:28,607:INFO:Total runtime is 0.23520085811614988 minutes
2022-11-12 18:14:28,613:INFO:SubProcess create_model() called ==================================
2022-11-12 18:14:28,613:INFO:Initializing create_model()
2022-11-12 18:14:28,613:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F9322CA448>, return_train_score=False, kwargs={})
2022-11-12 18:14:28,613:INFO:Checking exceptions
2022-11-12 18:14:28,613:INFO:Importing libraries
2022-11-12 18:14:28,613:INFO:Copying training dataset
2022-11-12 18:14:28,614:INFO:Defining folds
2022-11-12 18:14:28,615:INFO:Declaring metric variables
2022-11-12 18:14:28,620:INFO:Importing untrained model
2022-11-12 18:14:28,625:INFO:K Neighbors Regressor Imported succesfully
2022-11-12 18:14:28,637:INFO:Starting cross validation
2022-11-12 18:14:28,637:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 18:14:32,095:INFO:Calculating mean and std
2022-11-12 18:14:32,096:INFO:Creating metrics dataframe
2022-11-12 18:14:32,099:INFO:Uploading results into container
2022-11-12 18:14:32,099:INFO:Uploading model into container now
2022-11-12 18:14:32,099:INFO:create_model_container: 10
2022-11-12 18:14:32,099:INFO:master_model_container: 10
2022-11-12 18:14:32,099:INFO:display_container: 2
2022-11-12 18:14:32,100:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2022-11-12 18:14:32,100:INFO:create_model() succesfully completed......................................
2022-11-12 18:14:32,170:INFO:SubProcess create_model() end ==================================
2022-11-12 18:14:32,170:INFO:Creating metrics dataframe
2022-11-12 18:14:32,183:INFO:Initializing Decision Tree Regressor
2022-11-12 18:14:32,183:INFO:Total runtime is 0.2947976191838582 minutes
2022-11-12 18:14:32,189:INFO:SubProcess create_model() called ==================================
2022-11-12 18:14:32,189:INFO:Initializing create_model()
2022-11-12 18:14:32,189:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F9322CA448>, return_train_score=False, kwargs={})
2022-11-12 18:14:32,189:INFO:Checking exceptions
2022-11-12 18:14:32,189:INFO:Importing libraries
2022-11-12 18:14:32,189:INFO:Copying training dataset
2022-11-12 18:14:32,190:INFO:Defining folds
2022-11-12 18:14:32,190:INFO:Declaring metric variables
2022-11-12 18:14:32,195:INFO:Importing untrained model
2022-11-12 18:14:32,200:INFO:Decision Tree Regressor Imported succesfully
2022-11-12 18:14:32,212:INFO:Starting cross validation
2022-11-12 18:14:32,213:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 18:14:32,561:INFO:Calculating mean and std
2022-11-12 18:14:32,562:INFO:Creating metrics dataframe
2022-11-12 18:14:32,565:INFO:Uploading results into container
2022-11-12 18:14:32,566:INFO:Uploading model into container now
2022-11-12 18:14:32,566:INFO:create_model_container: 11
2022-11-12 18:14:32,566:INFO:master_model_container: 11
2022-11-12 18:14:32,566:INFO:display_container: 2
2022-11-12 18:14:32,566:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=8320, splitter='best')
2022-11-12 18:14:32,566:INFO:create_model() succesfully completed......................................
2022-11-12 18:14:32,636:INFO:SubProcess create_model() end ==================================
2022-11-12 18:14:32,637:INFO:Creating metrics dataframe
2022-11-12 18:14:32,649:INFO:Initializing Random Forest Regressor
2022-11-12 18:14:32,649:INFO:Total runtime is 0.30256602764129636 minutes
2022-11-12 18:14:32,655:INFO:SubProcess create_model() called ==================================
2022-11-12 18:14:32,655:INFO:Initializing create_model()
2022-11-12 18:14:32,655:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F9322CA448>, return_train_score=False, kwargs={})
2022-11-12 18:14:32,655:INFO:Checking exceptions
2022-11-12 18:14:32,656:INFO:Importing libraries
2022-11-12 18:14:32,656:INFO:Copying training dataset
2022-11-12 18:14:32,657:INFO:Defining folds
2022-11-12 18:14:32,657:INFO:Declaring metric variables
2022-11-12 18:14:32,662:INFO:Importing untrained model
2022-11-12 18:14:32,667:INFO:Random Forest Regressor Imported succesfully
2022-11-12 18:14:32,680:INFO:Starting cross validation
2022-11-12 18:14:32,681:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 18:14:40,570:INFO:Calculating mean and std
2022-11-12 18:14:40,571:INFO:Creating metrics dataframe
2022-11-12 18:14:40,575:INFO:Uploading results into container
2022-11-12 18:14:40,575:INFO:Uploading model into container now
2022-11-12 18:14:40,575:INFO:create_model_container: 12
2022-11-12 18:14:40,575:INFO:master_model_container: 12
2022-11-12 18:14:40,576:INFO:display_container: 2
2022-11-12 18:14:40,576:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=8320, verbose=0, warm_start=False)
2022-11-12 18:14:40,576:INFO:create_model() succesfully completed......................................
2022-11-12 18:14:40,672:INFO:SubProcess create_model() end ==================================
2022-11-12 18:14:40,672:INFO:Creating metrics dataframe
2022-11-12 18:14:40,687:INFO:Initializing Extra Trees Regressor
2022-11-12 18:14:40,688:INFO:Total runtime is 0.4365505735079447 minutes
2022-11-12 18:14:40,694:INFO:SubProcess create_model() called ==================================
2022-11-12 18:14:40,695:INFO:Initializing create_model()
2022-11-12 18:14:40,695:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F9322CA448>, return_train_score=False, kwargs={})
2022-11-12 18:14:40,695:INFO:Checking exceptions
2022-11-12 18:14:40,695:INFO:Importing libraries
2022-11-12 18:14:40,695:INFO:Copying training dataset
2022-11-12 18:14:40,696:INFO:Defining folds
2022-11-12 18:14:40,696:INFO:Declaring metric variables
2022-11-12 18:14:40,703:INFO:Importing untrained model
2022-11-12 18:14:40,710:INFO:Extra Trees Regressor Imported succesfully
2022-11-12 18:14:40,725:INFO:Starting cross validation
2022-11-12 18:14:40,725:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 18:14:49,109:INFO:Calculating mean and std
2022-11-12 18:14:49,110:INFO:Creating metrics dataframe
2022-11-12 18:14:49,113:INFO:Uploading results into container
2022-11-12 18:14:49,113:INFO:Uploading model into container now
2022-11-12 18:14:49,114:INFO:create_model_container: 13
2022-11-12 18:14:49,114:INFO:master_model_container: 13
2022-11-12 18:14:49,114:INFO:display_container: 2
2022-11-12 18:14:49,114:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=8320, verbose=0, warm_start=False)
2022-11-12 18:14:49,114:INFO:create_model() succesfully completed......................................
2022-11-12 18:14:49,190:INFO:SubProcess create_model() end ==================================
2022-11-12 18:14:49,190:INFO:Creating metrics dataframe
2022-11-12 18:14:49,202:INFO:Initializing AdaBoost Regressor
2022-11-12 18:14:49,202:INFO:Total runtime is 0.578453775246938 minutes
2022-11-12 18:14:49,209:INFO:SubProcess create_model() called ==================================
2022-11-12 18:14:49,209:INFO:Initializing create_model()
2022-11-12 18:14:49,210:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F9322CA448>, return_train_score=False, kwargs={})
2022-11-12 18:14:49,210:INFO:Checking exceptions
2022-11-12 18:14:49,210:INFO:Importing libraries
2022-11-12 18:14:49,210:INFO:Copying training dataset
2022-11-12 18:14:49,211:INFO:Defining folds
2022-11-12 18:14:49,211:INFO:Declaring metric variables
2022-11-12 18:14:49,217:INFO:Importing untrained model
2022-11-12 18:14:49,222:INFO:AdaBoost Regressor Imported succesfully
2022-11-12 18:14:49,233:INFO:Starting cross validation
2022-11-12 18:14:49,234:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 18:14:53,148:INFO:Calculating mean and std
2022-11-12 18:14:53,149:INFO:Creating metrics dataframe
2022-11-12 18:14:53,152:INFO:Uploading results into container
2022-11-12 18:14:53,152:INFO:Uploading model into container now
2022-11-12 18:14:53,152:INFO:create_model_container: 14
2022-11-12 18:14:53,153:INFO:master_model_container: 14
2022-11-12 18:14:53,153:INFO:display_container: 2
2022-11-12 18:14:53,153:INFO:AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=8320)
2022-11-12 18:14:53,153:INFO:create_model() succesfully completed......................................
2022-11-12 18:14:53,230:INFO:SubProcess create_model() end ==================================
2022-11-12 18:14:53,230:INFO:Creating metrics dataframe
2022-11-12 18:14:53,243:INFO:Initializing Gradient Boosting Regressor
2022-11-12 18:14:53,243:INFO:Total runtime is 0.6458058516184488 minutes
2022-11-12 18:14:53,250:INFO:SubProcess create_model() called ==================================
2022-11-12 18:14:53,250:INFO:Initializing create_model()
2022-11-12 18:14:53,250:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F9322CA448>, return_train_score=False, kwargs={})
2022-11-12 18:14:53,250:INFO:Checking exceptions
2022-11-12 18:14:53,250:INFO:Importing libraries
2022-11-12 18:14:53,250:INFO:Copying training dataset
2022-11-12 18:14:53,251:INFO:Defining folds
2022-11-12 18:14:53,251:INFO:Declaring metric variables
2022-11-12 18:14:53,257:INFO:Importing untrained model
2022-11-12 18:14:53,263:INFO:Gradient Boosting Regressor Imported succesfully
2022-11-12 18:14:53,276:INFO:Starting cross validation
2022-11-12 18:14:53,277:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 18:14:59,499:INFO:Calculating mean and std
2022-11-12 18:14:59,500:INFO:Creating metrics dataframe
2022-11-12 18:14:59,503:INFO:Uploading results into container
2022-11-12 18:14:59,504:INFO:Uploading model into container now
2022-11-12 18:14:59,504:INFO:create_model_container: 15
2022-11-12 18:14:59,504:INFO:master_model_container: 15
2022-11-12 18:14:59,504:INFO:display_container: 2
2022-11-12 18:14:59,504:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-12 18:14:59,504:INFO:create_model() succesfully completed......................................
2022-11-12 18:14:59,582:INFO:SubProcess create_model() end ==================================
2022-11-12 18:14:59,582:INFO:Creating metrics dataframe
2022-11-12 18:14:59,595:INFO:Initializing Light Gradient Boosting Machine
2022-11-12 18:14:59,595:INFO:Total runtime is 0.7516732931137085 minutes
2022-11-12 18:14:59,601:INFO:SubProcess create_model() called ==================================
2022-11-12 18:14:59,601:INFO:Initializing create_model()
2022-11-12 18:14:59,601:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F9322CA448>, return_train_score=False, kwargs={})
2022-11-12 18:14:59,602:INFO:Checking exceptions
2022-11-12 18:14:59,602:INFO:Importing libraries
2022-11-12 18:14:59,602:INFO:Copying training dataset
2022-11-12 18:14:59,603:INFO:Defining folds
2022-11-12 18:14:59,603:INFO:Declaring metric variables
2022-11-12 18:14:59,608:INFO:Importing untrained model
2022-11-12 18:14:59,615:INFO:Light Gradient Boosting Machine Imported succesfully
2022-11-12 18:14:59,628:INFO:Starting cross validation
2022-11-12 18:14:59,629:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 18:15:06,309:INFO:Calculating mean and std
2022-11-12 18:15:06,310:INFO:Creating metrics dataframe
2022-11-12 18:15:06,314:INFO:Uploading results into container
2022-11-12 18:15:06,314:INFO:Uploading model into container now
2022-11-12 18:15:06,314:INFO:create_model_container: 16
2022-11-12 18:15:06,314:INFO:master_model_container: 16
2022-11-12 18:15:06,314:INFO:display_container: 2
2022-11-12 18:15:06,315:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              device='gpu', importance_type='split', learning_rate=0.1,
              max_depth=-1, min_child_samples=20, min_child_weight=0.001,
              min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
              objective=None, random_state=8320, reg_alpha=0.0, reg_lambda=0.0,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0)
2022-11-12 18:15:06,315:INFO:create_model() succesfully completed......................................
2022-11-12 18:15:06,399:INFO:SubProcess create_model() end ==================================
2022-11-12 18:15:06,400:INFO:Creating metrics dataframe
2022-11-12 18:15:06,416:INFO:Initializing Dummy Regressor
2022-11-12 18:15:06,416:INFO:Total runtime is 0.8653589685757954 minutes
2022-11-12 18:15:06,421:INFO:SubProcess create_model() called ==================================
2022-11-12 18:15:06,422:INFO:Initializing create_model()
2022-11-12 18:15:06,422:INFO:create_model(estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F9322CA448>, return_train_score=False, kwargs={})
2022-11-12 18:15:06,422:INFO:Checking exceptions
2022-11-12 18:15:06,422:INFO:Importing libraries
2022-11-12 18:15:06,423:INFO:Copying training dataset
2022-11-12 18:15:06,424:INFO:Defining folds
2022-11-12 18:15:06,424:INFO:Declaring metric variables
2022-11-12 18:15:06,430:INFO:Importing untrained model
2022-11-12 18:15:06,435:INFO:Dummy Regressor Imported succesfully
2022-11-12 18:15:06,448:INFO:Starting cross validation
2022-11-12 18:15:06,448:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 18:15:06,482:INFO:Calculating mean and std
2022-11-12 18:15:06,483:INFO:Creating metrics dataframe
2022-11-12 18:15:06,487:INFO:Uploading results into container
2022-11-12 18:15:06,487:INFO:Uploading model into container now
2022-11-12 18:15:06,487:INFO:create_model_container: 17
2022-11-12 18:15:06,487:INFO:master_model_container: 17
2022-11-12 18:15:06,487:INFO:display_container: 2
2022-11-12 18:15:06,487:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2022-11-12 18:15:06,487:INFO:create_model() succesfully completed......................................
2022-11-12 18:15:06,564:INFO:SubProcess create_model() end ==================================
2022-11-12 18:15:06,564:INFO:Creating metrics dataframe
2022-11-12 18:15:06,591:INFO:Initializing create_model()
2022-11-12 18:15:06,592:INFO:create_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-11-12 18:15:06,592:INFO:Checking exceptions
2022-11-12 18:15:06,592:INFO:Importing libraries
2022-11-12 18:15:06,592:INFO:Copying training dataset
2022-11-12 18:15:06,593:INFO:Defining folds
2022-11-12 18:15:06,593:INFO:Declaring metric variables
2022-11-12 18:15:06,593:INFO:Importing untrained model
2022-11-12 18:15:06,593:INFO:Declaring custom model
2022-11-12 18:15:06,594:INFO:Gradient Boosting Regressor Imported succesfully
2022-11-12 18:15:06,594:INFO:Cross validation set to False
2022-11-12 18:15:06,594:INFO:Fitting Model
2022-11-12 18:15:07,278:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-12 18:15:07,278:INFO:create_models() succesfully completed......................................
2022-11-12 18:15:07,382:INFO:create_model_container: 17
2022-11-12 18:15:07,382:INFO:master_model_container: 17
2022-11-12 18:15:07,382:INFO:display_container: 2
2022-11-12 18:15:07,383:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-12 18:15:07,383:INFO:compare_models() succesfully completed......................................
2022-11-12 18:15:07,450:INFO:Initializing evaluate_model()
2022-11-12 18:15:07,451:INFO:evaluate_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2022-11-12 18:15:07,489:INFO:Initializing plot_model()
2022-11-12 18:15:07,489:INFO:plot_model(fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=True, is_in_evaluate=True, display=None, display_format=None, estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot=parameter, plot_kwargs={}, save=False, scale=1, system=True)
2022-11-12 18:15:07,489:INFO:Checking exceptions
2022-11-12 18:15:07,490:INFO:Preparing display monitor
2022-11-12 18:15:07,495:INFO:Preloading libraries
2022-11-12 18:15:07,503:INFO:Copying training dataset
2022-11-12 18:15:07,503:INFO:Copying test dataset
2022-11-12 18:15:07,504:INFO:Plot type: parameter
2022-11-12 18:15:07,510:INFO:Visual Rendered Successfully
2022-11-12 18:15:07,592:INFO:plot_model() succesfully completed......................................
2022-11-12 18:15:07,640:INFO:Initializing predict_model()
2022-11-12 18:15:07,640:INFO:predict_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-11-12 18:15:07,640:INFO:Checking exceptions
2022-11-12 18:15:07,640:INFO:Preloading libraries
2022-11-12 18:15:07,640:INFO:Preparing display monitor
2022-11-12 18:15:39,771:INFO:Initializing finalize_model()
2022-11-12 18:15:39,771:INFO:finalize_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=True, display=None, experiment_custom_tags=None, return_train_score=False)
2022-11-12 18:15:39,771:INFO:Finalizing GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-12 18:15:39,772:INFO:Initializing create_model()
2022-11-12 18:15:39,772:INFO:create_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=False, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-11-12 18:15:39,772:INFO:Checking exceptions
2022-11-12 18:15:39,772:INFO:Importing libraries
2022-11-12 18:15:39,772:INFO:Copying training dataset
2022-11-12 18:15:39,773:INFO:Defining folds
2022-11-12 18:15:39,773:INFO:Declaring metric variables
2022-11-12 18:15:39,773:INFO:Importing untrained model
2022-11-12 18:15:39,773:INFO:Declaring custom model
2022-11-12 18:15:39,773:INFO:Gradient Boosting Regressor Imported succesfully
2022-11-12 18:15:39,773:INFO:Starting cross validation
2022-11-12 18:15:39,774:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 18:15:48,882:INFO:Calculating mean and std
2022-11-12 18:15:48,882:INFO:Creating metrics dataframe
2022-11-12 18:15:48,884:INFO:Finalizing model
2022-11-12 18:15:49,877:INFO:create_model_container: 17
2022-11-12 18:15:49,877:INFO:master_model_container: 17
2022-11-12 18:15:49,877:INFO:display_container: 3
2022-11-12 18:15:49,878:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-12 18:15:49,878:INFO:create_model() succesfully completed......................................
2022-11-12 18:15:49,950:INFO:create_model_container: 17
2022-11-12 18:15:49,950:INFO:master_model_container: 17
2022-11-12 18:15:49,950:INFO:display_container: 2
2022-11-12 18:15:49,951:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-12 18:15:49,951:INFO:finalize_model() succesfully completed......................................
2022-11-12 18:16:02,843:INFO:Initializing get_config()
2022-11-12 18:16:02,843:INFO:get_config(variable=data_before_preprocess)
2022-11-12 18:16:02,851:INFO:Global variable: data_before_preprocess returned as         Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \
0        1          60       RL         65.0     8450   Pave   NaN      Reg   
1        2          20       RL         80.0     9600   Pave   NaN      Reg   
2        3          60       RL         68.0    11250   Pave   NaN      IR1   
3        4          70       RL         60.0     9550   Pave   NaN      IR1   
4        5          60       RL         84.0    14260   Pave   NaN      IR1   
...    ...         ...      ...          ...      ...    ...   ...      ...   
1455  1456          60       RL         62.0     7917   Pave   NaN      Reg   
1456  1457          20       RL         85.0    13175   Pave   NaN      Reg   
1457  1458          70       RL         66.0     9042   Pave   NaN      Reg   
1458  1459          20       RL         68.0     9717   Pave   NaN      Reg   
1459  1460          20       RL         75.0     9937   Pave   NaN      Reg   

     LandContour Utilities  ... PoolArea PoolQC  Fence MiscFeature MiscVal  \
0            Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
1            Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
2            Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
3            Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
4            Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
...          ...       ...  ...      ...    ...    ...         ...     ...   
1455         Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
1456         Lvl    AllPub  ...        0    NaN  MnPrv         NaN       0   
1457         Lvl    AllPub  ...        0    NaN  GdPrv        Shed    2500   
1458         Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
1459         Lvl    AllPub  ...        0    NaN    NaN         NaN       0   

     MoSold YrSold  SaleType  SaleCondition  SalePrice  
0         2   2008        WD         Normal     208500  
1         5   2007        WD         Normal     181500  
2         9   2008        WD         Normal     223500  
3         2   2006        WD        Abnorml     140000  
4        12   2008        WD         Normal     250000  
...     ...    ...       ...            ...        ...  
1455      8   2007        WD         Normal     175000  
1456      2   2010        WD         Normal     210000  
1457      5   2010        WD         Normal     266500  
1458      4   2010        WD         Normal     142125  
1459      6   2008        WD         Normal     147500  

[1460 rows x 81 columns]
2022-11-12 18:16:02,852:INFO:get_config() succesfully completed......................................
2022-11-12 18:16:02,852:INFO:Initializing get_config()
2022-11-12 18:16:02,852:INFO:get_config(variable=prep_pipe)
2022-11-12 18:16:02,855:INFO:Global variable: prep_pipe returned as Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=['Id'],
                                      ml_usecase='regression',
                                      numerical_features=[], target='SalePrice',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_st...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='SalePrice')),
                ('fix_perfect', Remove_100(target='SalePrice')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-11-12 18:16:02,855:INFO:get_config() succesfully completed......................................
2022-11-12 18:16:02,855:INFO:Initializing get_config()
2022-11-12 18:16:02,855:INFO:get_config(variable=prep_pipe)
2022-11-12 18:16:02,858:INFO:Global variable: prep_pipe returned as Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=['Id'],
                                      ml_usecase='regression',
                                      numerical_features=[], target='SalePrice',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_st...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='SalePrice')),
                ('fix_perfect', Remove_100(target='SalePrice')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-11-12 18:16:02,858:INFO:get_config() succesfully completed......................................
2022-11-12 18:16:02,859:INFO:Initializing get_config()
2022-11-12 18:16:02,859:INFO:get_config(variable=prep_pipe)
2022-11-12 18:16:02,862:INFO:Global variable: prep_pipe returned as Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=['Id'],
                                      ml_usecase='regression',
                                      numerical_features=[], target='SalePrice',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_st...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='SalePrice')),
                ('fix_perfect', Remove_100(target='SalePrice')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-11-12 18:16:02,862:INFO:get_config() succesfully completed......................................
2022-11-12 18:16:17,838:INFO:Initializing predict_model()
2022-11-12 18:16:17,838:INFO:predict_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=None, display=None, drift_kwargs=None)
2022-11-12 18:16:17,839:INFO:Checking exceptions
2022-11-12 18:16:17,839:INFO:Preloading libraries
2022-11-12 18:16:17,839:INFO:Preparing display monitor
2022-11-12 18:17:09,523:INFO:Initializing get_config()
2022-11-12 18:17:09,524:INFO:get_config(variable=data_before_preprocess)
2022-11-12 18:27:26,370:INFO:Initializing predict_model()
2022-11-12 18:27:26,370:INFO:predict_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=None, display=None, drift_kwargs=None)
2022-11-12 18:27:26,370:INFO:Checking exceptions
2022-11-12 18:27:26,370:INFO:Preloading libraries
2022-11-12 18:27:26,370:INFO:Preparing display monitor
2022-11-12 18:46:26,491:INFO:Initializing predict_model()
2022-11-12 18:46:26,492:INFO:predict_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=None, display=None, drift_kwargs=None)
2022-11-12 18:46:26,492:INFO:Checking exceptions
2022-11-12 18:46:26,492:INFO:Preloading libraries
2022-11-12 18:46:26,492:INFO:Preparing display monitor
2022-11-12 18:47:00,907:INFO:Initializing predict_model()
2022-11-12 18:47:00,907:INFO:predict_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=None, display=None, drift_kwargs=None)
2022-11-12 18:47:00,907:INFO:Checking exceptions
2022-11-12 18:47:00,907:INFO:Preloading libraries
2022-11-12 18:47:00,907:INFO:Preparing display monitor
2022-11-12 18:47:27,258:INFO:Initializing predict_model()
2022-11-12 18:47:27,258:INFO:predict_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=None, display=None, drift_kwargs=None)
2022-11-12 18:47:27,258:INFO:Checking exceptions
2022-11-12 18:47:27,258:INFO:Preloading libraries
2022-11-12 18:47:27,258:INFO:Preparing display monitor
2022-11-12 18:48:00,152:INFO:Initializing predict_model()
2022-11-12 18:48:00,152:INFO:predict_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=None, display=None, drift_kwargs=None)
2022-11-12 18:48:00,152:INFO:Checking exceptions
2022-11-12 18:48:00,152:INFO:Preloading libraries
2022-11-12 18:48:00,152:INFO:Preparing display monitor
2022-11-12 18:48:34,975:INFO:Initializing predict_model()
2022-11-12 18:48:34,976:INFO:predict_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=None, display=None, drift_kwargs=None)
2022-11-12 18:48:34,976:INFO:Checking exceptions
2022-11-12 18:48:34,976:INFO:Preloading libraries
2022-11-12 18:48:34,976:INFO:Preparing display monitor
2022-11-12 18:49:09,878:INFO:Initializing predict_model()
2022-11-12 18:49:09,878:INFO:predict_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=None, display=None, drift_kwargs=None)
2022-11-12 18:49:09,878:INFO:Checking exceptions
2022-11-12 18:49:09,878:INFO:Preloading libraries
2022-11-12 18:49:09,878:INFO:Preparing display monitor
2022-11-12 18:49:48,662:INFO:Initializing predict_model()
2022-11-12 18:49:48,663:INFO:predict_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=None, display=None, drift_kwargs=None)
2022-11-12 18:49:48,663:INFO:Checking exceptions
2022-11-12 18:49:48,663:INFO:Preloading libraries
2022-11-12 18:49:48,663:INFO:Preparing display monitor
2022-11-12 18:50:10,240:INFO:Initializing predict_model()
2022-11-12 18:50:10,240:INFO:predict_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=None, display=None, drift_kwargs=None)
2022-11-12 18:50:10,240:INFO:Checking exceptions
2022-11-12 18:50:10,240:INFO:Preloading libraries
2022-11-12 18:50:10,240:INFO:Preparing display monitor
2022-11-12 18:51:05,350:INFO:Initializing predict_model()
2022-11-12 18:51:05,350:INFO:predict_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=None, display=None, drift_kwargs=None)
2022-11-12 18:51:05,350:INFO:Checking exceptions
2022-11-12 18:51:05,350:INFO:Preloading libraries
2022-11-12 18:51:05,350:INFO:Preparing display monitor
2022-11-12 18:55:05,088:INFO:Initializing predict_model()
2022-11-12 18:55:05,089:INFO:predict_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=None, display=None, drift_kwargs=None)
2022-11-12 18:55:05,089:INFO:Checking exceptions
2022-11-12 18:55:05,089:INFO:Preloading libraries
2022-11-12 18:55:05,089:INFO:Preparing display monitor
2022-11-12 18:55:48,735:INFO:Initializing predict_model()
2022-11-12 18:55:48,735:INFO:predict_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=None, display=None, drift_kwargs=None)
2022-11-12 18:55:48,735:INFO:Checking exceptions
2022-11-12 18:55:48,735:INFO:Preloading libraries
2022-11-12 18:55:48,735:INFO:Preparing display monitor
2022-11-12 18:56:17,012:INFO:Initializing predict_model()
2022-11-12 18:56:17,012:INFO:predict_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=None, display=None, drift_kwargs=None)
2022-11-12 18:56:17,012:INFO:Checking exceptions
2022-11-12 18:56:17,012:INFO:Preloading libraries
2022-11-12 18:56:17,012:INFO:Preparing display monitor
2022-11-12 18:56:32,609:INFO:Initializing predict_model()
2022-11-12 18:56:32,610:INFO:predict_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=None, display=None, drift_kwargs=None)
2022-11-12 18:56:32,610:INFO:Checking exceptions
2022-11-12 18:56:32,610:INFO:Preloading libraries
2022-11-12 18:56:32,610:INFO:Preparing display monitor
2022-11-12 18:58:02,091:INFO:Initializing predict_model()
2022-11-12 18:58:02,091:INFO:predict_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=None, display=None, drift_kwargs=None)
2022-11-12 18:58:02,091:INFO:Checking exceptions
2022-11-12 18:58:02,091:INFO:Preloading libraries
2022-11-12 18:58:02,091:INFO:Preparing display monitor
2022-11-12 18:58:57,168:INFO:Initializing predict_model()
2022-11-12 18:58:57,168:INFO:predict_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=None, display=None, drift_kwargs=None)
2022-11-12 18:58:57,168:INFO:Checking exceptions
2022-11-12 18:58:57,168:INFO:Preloading libraries
2022-11-12 18:58:57,168:INFO:Preparing display monitor
2022-11-12 19:04:00,350:INFO:Initializing tune_model()
2022-11-12 19:04:00,350:INFO:tune_model(estimator=[DecisionTreeRegressor(ccp_alpha=0.0, criterion='friedman_mse', max_depth=3,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=RandomState(MT19937) at 0x1F93220DAE8,
                      splitter='best')], fold=10, round=4, n_iter=100, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, return_train_score=False, kwargs={})
2022-11-12 19:04:00,351:INFO:Checking exceptions
2022-11-12 19:05:00,220:INFO:Initializing tune_model()
2022-11-12 19:05:00,220:INFO:tune_model(estimator=[DecisionTreeRegressor(ccp_alpha=0.0, criterion='friedman_mse', max_depth=3,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=RandomState(MT19937) at 0x1F93220DAE8,
                      splitter='best')], fold=None, round=4, n_iter=10, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, return_train_score=False, kwargs={})
2022-11-12 19:05:00,221:INFO:Checking exceptions
2022-11-12 19:05:29,630:INFO:Initializing tune_model()
2022-11-12 19:05:29,631:INFO:tune_model(estimator=[DecisionTreeRegressor(ccp_alpha=0.0, criterion='friedman_mse', max_depth=3,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=RandomState(MT19937) at 0x1F93220DAE8,
                      splitter='best')], fold=10, round=4, n_iter=100, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, return_train_score=False, kwargs={})
2022-11-12 19:05:29,631:INFO:Checking exceptions
2022-11-12 19:06:12,358:INFO:Initializing compare_models()
2022-11-12 19:06:12,358:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2022-11-12 19:06:12,358:INFO:Checking exceptions
2022-11-12 19:06:12,358:INFO:Preparing display monitor
2022-11-12 19:06:12,358:INFO:Preparing display monitor
2022-11-12 19:06:12,379:INFO:Initializing Linear Regression
2022-11-12 19:06:12,379:INFO:Total runtime is 0.0 minutes
2022-11-12 19:06:12,387:INFO:SubProcess create_model() called ==================================
2022-11-12 19:06:12,387:INFO:Initializing create_model()
2022-11-12 19:06:12,387:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F93E660B48>, return_train_score=False, kwargs={})
2022-11-12 19:06:12,387:INFO:Checking exceptions
2022-11-12 19:06:12,387:INFO:Importing libraries
2022-11-12 19:06:12,388:INFO:Copying training dataset
2022-11-12 19:06:12,389:INFO:Defining folds
2022-11-12 19:06:12,389:INFO:Declaring metric variables
2022-11-12 19:06:12,396:INFO:Importing untrained model
2022-11-12 19:06:12,402:INFO:Linear Regression Imported succesfully
2022-11-12 19:06:12,415:INFO:Starting cross validation
2022-11-12 19:06:12,415:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:06:13,377:INFO:Calculating mean and std
2022-11-12 19:06:13,377:INFO:Creating metrics dataframe
2022-11-12 19:06:13,381:INFO:Uploading results into container
2022-11-12 19:06:13,381:INFO:Uploading model into container now
2022-11-12 19:06:13,381:INFO:create_model_container: 18
2022-11-12 19:06:13,381:INFO:master_model_container: 18
2022-11-12 19:06:13,381:INFO:display_container: 3
2022-11-12 19:06:13,382:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2022-11-12 19:06:13,382:INFO:create_model() succesfully completed......................................
2022-11-12 19:06:13,476:INFO:SubProcess create_model() end ==================================
2022-11-12 19:06:13,477:INFO:Creating metrics dataframe
2022-11-12 19:06:13,487:INFO:Initializing Lasso Regression
2022-11-12 19:06:13,487:INFO:Total runtime is 0.018475055694580078 minutes
2022-11-12 19:06:13,493:INFO:SubProcess create_model() called ==================================
2022-11-12 19:06:13,493:INFO:Initializing create_model()
2022-11-12 19:06:13,493:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F93E660B48>, return_train_score=False, kwargs={})
2022-11-12 19:06:13,493:INFO:Checking exceptions
2022-11-12 19:06:13,494:INFO:Importing libraries
2022-11-12 19:06:13,494:INFO:Copying training dataset
2022-11-12 19:06:13,495:INFO:Defining folds
2022-11-12 19:06:13,495:INFO:Declaring metric variables
2022-11-12 19:06:13,500:INFO:Importing untrained model
2022-11-12 19:06:13,507:INFO:Lasso Regression Imported succesfully
2022-11-12 19:06:13,518:INFO:Starting cross validation
2022-11-12 19:06:13,519:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:06:14,502:INFO:Calculating mean and std
2022-11-12 19:06:14,503:INFO:Creating metrics dataframe
2022-11-12 19:06:14,507:INFO:Uploading results into container
2022-11-12 19:06:14,507:INFO:Uploading model into container now
2022-11-12 19:06:14,507:INFO:create_model_container: 19
2022-11-12 19:06:14,507:INFO:master_model_container: 19
2022-11-12 19:06:14,507:INFO:display_container: 3
2022-11-12 19:06:14,508:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=8320,
      selection='cyclic', tol=0.0001, warm_start=False)
2022-11-12 19:06:14,508:INFO:create_model() succesfully completed......................................
2022-11-12 19:06:14,597:INFO:SubProcess create_model() end ==================================
2022-11-12 19:06:14,598:INFO:Creating metrics dataframe
2022-11-12 19:06:14,609:INFO:Initializing Ridge Regression
2022-11-12 19:06:14,609:INFO:Total runtime is 0.037162613868713376 minutes
2022-11-12 19:06:14,614:INFO:SubProcess create_model() called ==================================
2022-11-12 19:06:14,614:INFO:Initializing create_model()
2022-11-12 19:06:14,614:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F93E660B48>, return_train_score=False, kwargs={})
2022-11-12 19:06:14,615:INFO:Checking exceptions
2022-11-12 19:06:14,615:INFO:Importing libraries
2022-11-12 19:06:14,615:INFO:Copying training dataset
2022-11-12 19:06:14,616:INFO:Defining folds
2022-11-12 19:06:14,616:INFO:Declaring metric variables
2022-11-12 19:06:14,621:INFO:Importing untrained model
2022-11-12 19:06:14,629:INFO:Ridge Regression Imported succesfully
2022-11-12 19:06:14,640:INFO:Starting cross validation
2022-11-12 19:06:14,640:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:06:15,463:INFO:Calculating mean and std
2022-11-12 19:06:15,464:INFO:Creating metrics dataframe
2022-11-12 19:06:15,467:INFO:Uploading results into container
2022-11-12 19:06:15,467:INFO:Uploading model into container now
2022-11-12 19:06:15,468:INFO:create_model_container: 20
2022-11-12 19:06:15,468:INFO:master_model_container: 20
2022-11-12 19:06:15,468:INFO:display_container: 3
2022-11-12 19:06:15,468:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=8320, solver='auto', tol=0.001)
2022-11-12 19:06:15,468:INFO:create_model() succesfully completed......................................
2022-11-12 19:06:15,563:INFO:SubProcess create_model() end ==================================
2022-11-12 19:06:15,563:INFO:Creating metrics dataframe
2022-11-12 19:06:15,574:INFO:Initializing Elastic Net
2022-11-12 19:06:15,574:INFO:Total runtime is 0.05324958165486653 minutes
2022-11-12 19:06:15,580:INFO:SubProcess create_model() called ==================================
2022-11-12 19:06:15,580:INFO:Initializing create_model()
2022-11-12 19:06:15,580:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F93E660B48>, return_train_score=False, kwargs={})
2022-11-12 19:06:15,580:INFO:Checking exceptions
2022-11-12 19:06:15,580:INFO:Importing libraries
2022-11-12 19:06:15,581:INFO:Copying training dataset
2022-11-12 19:06:15,582:INFO:Defining folds
2022-11-12 19:06:15,582:INFO:Declaring metric variables
2022-11-12 19:06:15,588:INFO:Importing untrained model
2022-11-12 19:06:15,594:INFO:Elastic Net Imported succesfully
2022-11-12 19:06:15,607:INFO:Starting cross validation
2022-11-12 19:06:15,608:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:06:17,236:INFO:Calculating mean and std
2022-11-12 19:06:17,237:INFO:Creating metrics dataframe
2022-11-12 19:06:17,240:INFO:Uploading results into container
2022-11-12 19:06:17,240:INFO:Uploading model into container now
2022-11-12 19:06:17,241:INFO:create_model_container: 21
2022-11-12 19:06:17,241:INFO:master_model_container: 21
2022-11-12 19:06:17,241:INFO:display_container: 3
2022-11-12 19:06:17,241:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=8320, selection='cyclic', tol=0.0001, warm_start=False)
2022-11-12 19:06:17,241:INFO:create_model() succesfully completed......................................
2022-11-12 19:06:17,330:INFO:SubProcess create_model() end ==================================
2022-11-12 19:06:17,330:INFO:Creating metrics dataframe
2022-11-12 19:06:17,341:INFO:Initializing Least Angle Regression
2022-11-12 19:06:17,341:INFO:Total runtime is 0.08270619710286459 minutes
2022-11-12 19:06:17,347:INFO:SubProcess create_model() called ==================================
2022-11-12 19:06:17,348:INFO:Initializing create_model()
2022-11-12 19:06:17,348:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F93E660B48>, return_train_score=False, kwargs={})
2022-11-12 19:06:17,348:INFO:Checking exceptions
2022-11-12 19:06:17,348:INFO:Importing libraries
2022-11-12 19:06:17,348:INFO:Copying training dataset
2022-11-12 19:06:17,349:INFO:Defining folds
2022-11-12 19:06:17,349:INFO:Declaring metric variables
2022-11-12 19:06:17,354:INFO:Importing untrained model
2022-11-12 19:06:17,360:INFO:Least Angle Regression Imported succesfully
2022-11-12 19:06:17,371:INFO:Starting cross validation
2022-11-12 19:06:17,371:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:06:17,561:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2022-11-12 19:06:17,562:WARNING:Traceback (most recent call last):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 3210, in create_model_supervised
    error_score=0,
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 248, in cross_validate
    for train, test in cv.split(X, y, groups))
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 1085, in __call__
    if self.dispatch_one_batch(iterator):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 901, in dispatch_one_batch
    self._dispatch(tasks)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 819, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 597, in __init__
    self.results = batch()
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in __call__
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in <listcomp>
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 88, in __call__
    *args, **kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 213, in _score
    **self._kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 179, in mean_absolute_error
    y_true, y_pred, multioutput)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 645, in check_array
    allow_nan=force_all_finite == 'allow-nan')
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 99, in _assert_all_finite
    msg_dtype if msg_dtype is not None else X.dtype)
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2022-11-12 19:06:17,562:INFO:Initializing create_model()
2022-11-12 19:06:17,562:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F93E660B48>, return_train_score=False, kwargs={})
2022-11-12 19:06:17,562:INFO:Checking exceptions
2022-11-12 19:06:17,562:INFO:Importing libraries
2022-11-12 19:06:17,562:INFO:Copying training dataset
2022-11-12 19:06:17,563:INFO:Defining folds
2022-11-12 19:06:17,563:INFO:Declaring metric variables
2022-11-12 19:06:17,569:INFO:Importing untrained model
2022-11-12 19:06:17,574:INFO:Least Angle Regression Imported succesfully
2022-11-12 19:06:17,585:INFO:Starting cross validation
2022-11-12 19:06:17,586:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:06:17,771:ERROR:create_model() for lar raised an exception or returned all 0.0:
2022-11-12 19:06:17,772:ERROR:Traceback (most recent call last):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 3210, in create_model_supervised
    error_score=0,
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 248, in cross_validate
    for train, test in cv.split(X, y, groups))
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 1085, in __call__
    if self.dispatch_one_batch(iterator):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 901, in dispatch_one_batch
    self._dispatch(tasks)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 819, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 597, in __init__
    self.results = batch()
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in __call__
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in <listcomp>
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 88, in __call__
    *args, **kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 213, in _score
    **self._kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 179, in mean_absolute_error
    y_true, y_pred, multioutput)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 645, in check_array
    allow_nan=force_all_finite == 'allow-nan')
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 99, in _assert_all_finite
    msg_dtype if msg_dtype is not None else X.dtype)
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 2212, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 3210, in create_model_supervised
    error_score=0,
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 248, in cross_validate
    for train, test in cv.split(X, y, groups))
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 1085, in __call__
    if self.dispatch_one_batch(iterator):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 901, in dispatch_one_batch
    self._dispatch(tasks)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 819, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 597, in __init__
    self.results = batch()
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in __call__
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in <listcomp>
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 88, in __call__
    *args, **kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 213, in _score
    **self._kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 179, in mean_absolute_error
    y_true, y_pred, multioutput)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 645, in check_array
    allow_nan=force_all_finite == 'allow-nan')
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 99, in _assert_all_finite
    msg_dtype if msg_dtype is not None else X.dtype)
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2022-11-12 19:06:17,773:INFO:Initializing Lasso Least Angle Regression
2022-11-12 19:06:17,773:INFO:Total runtime is 0.08990503946940105 minutes
2022-11-12 19:06:17,779:INFO:SubProcess create_model() called ==================================
2022-11-12 19:06:17,780:INFO:Initializing create_model()
2022-11-12 19:06:17,780:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F93E660B48>, return_train_score=False, kwargs={})
2022-11-12 19:06:17,780:INFO:Checking exceptions
2022-11-12 19:06:17,780:INFO:Importing libraries
2022-11-12 19:06:17,780:INFO:Copying training dataset
2022-11-12 19:06:17,781:INFO:Defining folds
2022-11-12 19:06:17,781:INFO:Declaring metric variables
2022-11-12 19:06:17,787:INFO:Importing untrained model
2022-11-12 19:06:17,793:INFO:Lasso Least Angle Regression Imported succesfully
2022-11-12 19:06:17,806:INFO:Starting cross validation
2022-11-12 19:06:17,806:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:06:19,073:INFO:Calculating mean and std
2022-11-12 19:06:19,074:INFO:Creating metrics dataframe
2022-11-12 19:06:19,077:INFO:Uploading results into container
2022-11-12 19:06:19,077:INFO:Uploading model into container now
2022-11-12 19:06:19,077:INFO:create_model_container: 22
2022-11-12 19:06:19,077:INFO:master_model_container: 22
2022-11-12 19:06:19,077:INFO:display_container: 3
2022-11-12 19:06:19,078:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize=True,
          positive=False, precompute='auto', random_state=8320, verbose=False)
2022-11-12 19:06:19,078:INFO:create_model() succesfully completed......................................
2022-11-12 19:06:19,166:INFO:SubProcess create_model() end ==================================
2022-11-12 19:06:19,166:INFO:Creating metrics dataframe
2022-11-12 19:06:19,177:INFO:Initializing Orthogonal Matching Pursuit
2022-11-12 19:06:19,178:INFO:Total runtime is 0.11332462628682455 minutes
2022-11-12 19:06:19,184:INFO:SubProcess create_model() called ==================================
2022-11-12 19:06:19,184:INFO:Initializing create_model()
2022-11-12 19:06:19,184:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F93E660B48>, return_train_score=False, kwargs={})
2022-11-12 19:06:19,184:INFO:Checking exceptions
2022-11-12 19:06:19,184:INFO:Importing libraries
2022-11-12 19:06:19,185:INFO:Copying training dataset
2022-11-12 19:06:19,185:INFO:Defining folds
2022-11-12 19:06:19,186:INFO:Declaring metric variables
2022-11-12 19:06:19,191:INFO:Importing untrained model
2022-11-12 19:06:19,197:INFO:Orthogonal Matching Pursuit Imported succesfully
2022-11-12 19:06:19,210:INFO:Starting cross validation
2022-11-12 19:06:19,211:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:06:19,358:INFO:Calculating mean and std
2022-11-12 19:06:19,359:INFO:Creating metrics dataframe
2022-11-12 19:06:19,362:INFO:Uploading results into container
2022-11-12 19:06:19,362:INFO:Uploading model into container now
2022-11-12 19:06:19,362:INFO:create_model_container: 23
2022-11-12 19:06:19,363:INFO:master_model_container: 23
2022-11-12 19:06:19,363:INFO:display_container: 3
2022-11-12 19:06:19,363:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None)
2022-11-12 19:06:19,363:INFO:create_model() succesfully completed......................................
2022-11-12 19:06:19,451:INFO:SubProcess create_model() end ==================================
2022-11-12 19:06:19,451:INFO:Creating metrics dataframe
2022-11-12 19:06:19,463:INFO:Initializing Bayesian Ridge
2022-11-12 19:06:19,463:INFO:Total runtime is 0.11807579199473063 minutes
2022-11-12 19:06:19,468:INFO:SubProcess create_model() called ==================================
2022-11-12 19:06:19,469:INFO:Initializing create_model()
2022-11-12 19:06:19,469:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F93E660B48>, return_train_score=False, kwargs={})
2022-11-12 19:06:19,469:INFO:Checking exceptions
2022-11-12 19:06:19,469:INFO:Importing libraries
2022-11-12 19:06:19,469:INFO:Copying training dataset
2022-11-12 19:06:19,470:INFO:Defining folds
2022-11-12 19:06:19,470:INFO:Declaring metric variables
2022-11-12 19:06:19,476:INFO:Importing untrained model
2022-11-12 19:06:19,482:INFO:Bayesian Ridge Imported succesfully
2022-11-12 19:06:19,494:INFO:Starting cross validation
2022-11-12 19:06:19,494:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:06:21,622:INFO:Calculating mean and std
2022-11-12 19:06:21,623:INFO:Creating metrics dataframe
2022-11-12 19:06:21,626:INFO:Uploading results into container
2022-11-12 19:06:21,626:INFO:Uploading model into container now
2022-11-12 19:06:21,627:INFO:create_model_container: 24
2022-11-12 19:06:21,627:INFO:master_model_container: 24
2022-11-12 19:06:21,627:INFO:display_container: 3
2022-11-12 19:06:21,627:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False)
2022-11-12 19:06:21,627:INFO:create_model() succesfully completed......................................
2022-11-12 19:06:21,716:INFO:SubProcess create_model() end ==================================
2022-11-12 19:06:21,716:INFO:Creating metrics dataframe
2022-11-12 19:06:21,727:INFO:Initializing Passive Aggressive Regressor
2022-11-12 19:06:21,728:INFO:Total runtime is 0.15582019090652466 minutes
2022-11-12 19:06:21,733:INFO:SubProcess create_model() called ==================================
2022-11-12 19:06:21,734:INFO:Initializing create_model()
2022-11-12 19:06:21,734:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F93E660B48>, return_train_score=False, kwargs={})
2022-11-12 19:06:21,734:INFO:Checking exceptions
2022-11-12 19:06:21,734:INFO:Importing libraries
2022-11-12 19:06:21,734:INFO:Copying training dataset
2022-11-12 19:06:21,735:INFO:Defining folds
2022-11-12 19:06:21,735:INFO:Declaring metric variables
2022-11-12 19:06:21,740:INFO:Importing untrained model
2022-11-12 19:06:21,746:INFO:Passive Aggressive Regressor Imported succesfully
2022-11-12 19:06:21,757:INFO:Starting cross validation
2022-11-12 19:06:21,757:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:06:21,987:INFO:Calculating mean and std
2022-11-12 19:06:21,988:INFO:Creating metrics dataframe
2022-11-12 19:06:21,992:INFO:Uploading results into container
2022-11-12 19:06:21,993:INFO:Uploading model into container now
2022-11-12 19:06:21,993:INFO:create_model_container: 25
2022-11-12 19:06:21,993:INFO:master_model_container: 25
2022-11-12 19:06:21,993:INFO:display_container: 3
2022-11-12 19:06:21,993:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=8320, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-11-12 19:06:21,993:INFO:create_model() succesfully completed......................................
2022-11-12 19:06:22,081:INFO:SubProcess create_model() end ==================================
2022-11-12 19:06:22,081:INFO:Creating metrics dataframe
2022-11-12 19:06:22,093:INFO:Initializing Huber Regressor
2022-11-12 19:06:22,093:INFO:Total runtime is 0.16190489927927654 minutes
2022-11-12 19:06:22,099:INFO:SubProcess create_model() called ==================================
2022-11-12 19:06:22,099:INFO:Initializing create_model()
2022-11-12 19:06:22,100:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F93E660B48>, return_train_score=False, kwargs={})
2022-11-12 19:06:22,100:INFO:Checking exceptions
2022-11-12 19:06:22,100:INFO:Importing libraries
2022-11-12 19:06:22,100:INFO:Copying training dataset
2022-11-12 19:06:22,101:INFO:Defining folds
2022-11-12 19:06:22,101:INFO:Declaring metric variables
2022-11-12 19:06:22,107:INFO:Importing untrained model
2022-11-12 19:06:22,112:INFO:Huber Regressor Imported succesfully
2022-11-12 19:06:22,125:INFO:Starting cross validation
2022-11-12 19:06:22,125:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:06:25,145:INFO:Calculating mean and std
2022-11-12 19:06:25,146:INFO:Creating metrics dataframe
2022-11-12 19:06:25,149:INFO:Uploading results into container
2022-11-12 19:06:25,149:INFO:Uploading model into container now
2022-11-12 19:06:25,149:INFO:create_model_container: 26
2022-11-12 19:06:25,149:INFO:master_model_container: 26
2022-11-12 19:06:25,149:INFO:display_container: 3
2022-11-12 19:06:25,150:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-11-12 19:06:25,150:INFO:create_model() succesfully completed......................................
2022-11-12 19:06:25,236:INFO:SubProcess create_model() end ==================================
2022-11-12 19:06:25,236:INFO:Creating metrics dataframe
2022-11-12 19:06:25,248:INFO:Initializing K Neighbors Regressor
2022-11-12 19:06:25,249:INFO:Total runtime is 0.2145000735918681 minutes
2022-11-12 19:06:25,254:INFO:SubProcess create_model() called ==================================
2022-11-12 19:06:25,254:INFO:Initializing create_model()
2022-11-12 19:06:25,254:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F93E660B48>, return_train_score=False, kwargs={})
2022-11-12 19:06:25,255:INFO:Checking exceptions
2022-11-12 19:06:25,255:INFO:Importing libraries
2022-11-12 19:06:25,255:INFO:Copying training dataset
2022-11-12 19:06:25,256:INFO:Defining folds
2022-11-12 19:06:25,256:INFO:Declaring metric variables
2022-11-12 19:06:25,262:INFO:Importing untrained model
2022-11-12 19:06:25,267:INFO:K Neighbors Regressor Imported succesfully
2022-11-12 19:06:25,279:INFO:Starting cross validation
2022-11-12 19:06:25,280:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:06:28,789:INFO:Calculating mean and std
2022-11-12 19:06:28,790:INFO:Creating metrics dataframe
2022-11-12 19:06:28,794:INFO:Uploading results into container
2022-11-12 19:06:28,794:INFO:Uploading model into container now
2022-11-12 19:06:28,794:INFO:create_model_container: 27
2022-11-12 19:06:28,794:INFO:master_model_container: 27
2022-11-12 19:06:28,794:INFO:display_container: 3
2022-11-12 19:06:28,794:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2022-11-12 19:06:28,795:INFO:create_model() succesfully completed......................................
2022-11-12 19:06:28,884:INFO:SubProcess create_model() end ==================================
2022-11-12 19:06:28,884:INFO:Creating metrics dataframe
2022-11-12 19:06:28,896:INFO:Initializing Decision Tree Regressor
2022-11-12 19:06:28,897:INFO:Total runtime is 0.2753055254618327 minutes
2022-11-12 19:06:28,903:INFO:SubProcess create_model() called ==================================
2022-11-12 19:06:28,903:INFO:Initializing create_model()
2022-11-12 19:06:28,903:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F93E660B48>, return_train_score=False, kwargs={})
2022-11-12 19:06:28,904:INFO:Checking exceptions
2022-11-12 19:06:28,904:INFO:Importing libraries
2022-11-12 19:06:28,904:INFO:Copying training dataset
2022-11-12 19:06:28,905:INFO:Defining folds
2022-11-12 19:06:28,905:INFO:Declaring metric variables
2022-11-12 19:06:28,910:INFO:Importing untrained model
2022-11-12 19:06:28,916:INFO:Decision Tree Regressor Imported succesfully
2022-11-12 19:06:28,925:INFO:Starting cross validation
2022-11-12 19:06:28,926:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:06:29,277:INFO:Calculating mean and std
2022-11-12 19:06:29,278:INFO:Creating metrics dataframe
2022-11-12 19:06:29,281:INFO:Uploading results into container
2022-11-12 19:06:29,282:INFO:Uploading model into container now
2022-11-12 19:06:29,282:INFO:create_model_container: 28
2022-11-12 19:06:29,282:INFO:master_model_container: 28
2022-11-12 19:06:29,282:INFO:display_container: 3
2022-11-12 19:06:29,282:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=8320, splitter='best')
2022-11-12 19:06:29,282:INFO:create_model() succesfully completed......................................
2022-11-12 19:06:29,371:INFO:SubProcess create_model() end ==================================
2022-11-12 19:06:29,371:INFO:Creating metrics dataframe
2022-11-12 19:06:29,384:INFO:Initializing Random Forest Regressor
2022-11-12 19:06:29,384:INFO:Total runtime is 0.28342402378718057 minutes
2022-11-12 19:06:29,390:INFO:SubProcess create_model() called ==================================
2022-11-12 19:06:29,390:INFO:Initializing create_model()
2022-11-12 19:06:29,390:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F93E660B48>, return_train_score=False, kwargs={})
2022-11-12 19:06:29,390:INFO:Checking exceptions
2022-11-12 19:06:29,390:INFO:Importing libraries
2022-11-12 19:06:29,390:INFO:Copying training dataset
2022-11-12 19:06:29,391:INFO:Defining folds
2022-11-12 19:06:29,391:INFO:Declaring metric variables
2022-11-12 19:06:29,397:INFO:Importing untrained model
2022-11-12 19:06:29,402:INFO:Random Forest Regressor Imported succesfully
2022-11-12 19:06:29,414:INFO:Starting cross validation
2022-11-12 19:06:29,414:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:06:37,448:INFO:Calculating mean and std
2022-11-12 19:06:37,449:INFO:Creating metrics dataframe
2022-11-12 19:06:37,452:INFO:Uploading results into container
2022-11-12 19:06:37,452:INFO:Uploading model into container now
2022-11-12 19:06:37,452:INFO:create_model_container: 29
2022-11-12 19:06:37,452:INFO:master_model_container: 29
2022-11-12 19:06:37,452:INFO:display_container: 3
2022-11-12 19:06:37,452:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=8320, verbose=0, warm_start=False)
2022-11-12 19:06:37,452:INFO:create_model() succesfully completed......................................
2022-11-12 19:06:37,551:INFO:SubProcess create_model() end ==================================
2022-11-12 19:06:37,551:INFO:Creating metrics dataframe
2022-11-12 19:06:37,563:INFO:Initializing Extra Trees Regressor
2022-11-12 19:06:37,564:INFO:Total runtime is 0.41976059277852373 minutes
2022-11-12 19:06:37,570:INFO:SubProcess create_model() called ==================================
2022-11-12 19:06:37,570:INFO:Initializing create_model()
2022-11-12 19:06:37,570:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F93E660B48>, return_train_score=False, kwargs={})
2022-11-12 19:06:37,570:INFO:Checking exceptions
2022-11-12 19:06:37,570:INFO:Importing libraries
2022-11-12 19:06:37,571:INFO:Copying training dataset
2022-11-12 19:06:37,572:INFO:Defining folds
2022-11-12 19:06:37,572:INFO:Declaring metric variables
2022-11-12 19:06:37,578:INFO:Importing untrained model
2022-11-12 19:06:37,584:INFO:Extra Trees Regressor Imported succesfully
2022-11-12 19:06:37,597:INFO:Starting cross validation
2022-11-12 19:06:37,597:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:06:45,946:INFO:Calculating mean and std
2022-11-12 19:06:45,947:INFO:Creating metrics dataframe
2022-11-12 19:06:45,950:INFO:Uploading results into container
2022-11-12 19:06:45,950:INFO:Uploading model into container now
2022-11-12 19:06:45,950:INFO:create_model_container: 30
2022-11-12 19:06:45,950:INFO:master_model_container: 30
2022-11-12 19:06:45,950:INFO:display_container: 3
2022-11-12 19:06:45,951:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=8320, verbose=0, warm_start=False)
2022-11-12 19:06:45,951:INFO:create_model() succesfully completed......................................
2022-11-12 19:06:46,061:INFO:SubProcess create_model() end ==================================
2022-11-12 19:06:46,061:INFO:Creating metrics dataframe
2022-11-12 19:06:46,076:INFO:Initializing AdaBoost Regressor
2022-11-12 19:06:46,076:INFO:Total runtime is 0.5616191426912943 minutes
2022-11-12 19:06:46,084:INFO:SubProcess create_model() called ==================================
2022-11-12 19:06:46,084:INFO:Initializing create_model()
2022-11-12 19:06:46,084:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F93E660B48>, return_train_score=False, kwargs={})
2022-11-12 19:06:46,084:INFO:Checking exceptions
2022-11-12 19:06:46,084:INFO:Importing libraries
2022-11-12 19:06:46,084:INFO:Copying training dataset
2022-11-12 19:06:46,085:INFO:Defining folds
2022-11-12 19:06:46,086:INFO:Declaring metric variables
2022-11-12 19:06:46,092:INFO:Importing untrained model
2022-11-12 19:06:46,100:INFO:AdaBoost Regressor Imported succesfully
2022-11-12 19:06:46,114:INFO:Starting cross validation
2022-11-12 19:06:46,115:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:06:49,959:INFO:Calculating mean and std
2022-11-12 19:06:49,960:INFO:Creating metrics dataframe
2022-11-12 19:06:49,963:INFO:Uploading results into container
2022-11-12 19:06:49,963:INFO:Uploading model into container now
2022-11-12 19:06:49,963:INFO:create_model_container: 31
2022-11-12 19:06:49,963:INFO:master_model_container: 31
2022-11-12 19:06:49,964:INFO:display_container: 3
2022-11-12 19:06:49,964:INFO:AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=8320)
2022-11-12 19:06:49,964:INFO:create_model() succesfully completed......................................
2022-11-12 19:06:50,051:INFO:SubProcess create_model() end ==================================
2022-11-12 19:06:50,052:INFO:Creating metrics dataframe
2022-11-12 19:06:50,064:INFO:Initializing Gradient Boosting Regressor
2022-11-12 19:06:50,064:INFO:Total runtime is 0.6280832846959432 minutes
2022-11-12 19:06:50,070:INFO:SubProcess create_model() called ==================================
2022-11-12 19:06:50,070:INFO:Initializing create_model()
2022-11-12 19:06:50,070:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F93E660B48>, return_train_score=False, kwargs={})
2022-11-12 19:06:50,071:INFO:Checking exceptions
2022-11-12 19:06:50,071:INFO:Importing libraries
2022-11-12 19:06:50,071:INFO:Copying training dataset
2022-11-12 19:06:50,072:INFO:Defining folds
2022-11-12 19:06:50,072:INFO:Declaring metric variables
2022-11-12 19:06:50,077:INFO:Importing untrained model
2022-11-12 19:06:50,083:INFO:Gradient Boosting Regressor Imported succesfully
2022-11-12 19:06:50,095:INFO:Starting cross validation
2022-11-12 19:06:50,096:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:06:56,297:INFO:Calculating mean and std
2022-11-12 19:06:56,297:INFO:Creating metrics dataframe
2022-11-12 19:06:56,302:INFO:Uploading results into container
2022-11-12 19:06:56,302:INFO:Uploading model into container now
2022-11-12 19:06:56,302:INFO:create_model_container: 32
2022-11-12 19:06:56,302:INFO:master_model_container: 32
2022-11-12 19:06:56,302:INFO:display_container: 3
2022-11-12 19:06:56,303:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-12 19:06:56,303:INFO:create_model() succesfully completed......................................
2022-11-12 19:06:56,403:INFO:SubProcess create_model() end ==================================
2022-11-12 19:06:56,403:INFO:Creating metrics dataframe
2022-11-12 19:06:56,417:INFO:Initializing Light Gradient Boosting Machine
2022-11-12 19:06:56,418:INFO:Total runtime is 0.733992624282837 minutes
2022-11-12 19:06:56,425:INFO:SubProcess create_model() called ==================================
2022-11-12 19:06:56,425:INFO:Initializing create_model()
2022-11-12 19:06:56,425:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F93E660B48>, return_train_score=False, kwargs={})
2022-11-12 19:06:56,426:INFO:Checking exceptions
2022-11-12 19:06:56,426:INFO:Importing libraries
2022-11-12 19:06:56,426:INFO:Copying training dataset
2022-11-12 19:06:56,427:INFO:Defining folds
2022-11-12 19:06:56,428:INFO:Declaring metric variables
2022-11-12 19:06:56,434:INFO:Importing untrained model
2022-11-12 19:06:56,441:INFO:Light Gradient Boosting Machine Imported succesfully
2022-11-12 19:06:56,454:INFO:Starting cross validation
2022-11-12 19:06:56,454:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:07:03,119:INFO:Calculating mean and std
2022-11-12 19:07:03,120:INFO:Creating metrics dataframe
2022-11-12 19:07:03,124:INFO:Uploading results into container
2022-11-12 19:07:03,124:INFO:Uploading model into container now
2022-11-12 19:07:03,125:INFO:create_model_container: 33
2022-11-12 19:07:03,125:INFO:master_model_container: 33
2022-11-12 19:07:03,125:INFO:display_container: 3
2022-11-12 19:07:03,125:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              device='gpu', importance_type='split', learning_rate=0.1,
              max_depth=-1, min_child_samples=20, min_child_weight=0.001,
              min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
              objective=None, random_state=8320, reg_alpha=0.0, reg_lambda=0.0,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0)
2022-11-12 19:07:03,125:INFO:create_model() succesfully completed......................................
2022-11-12 19:07:03,228:INFO:SubProcess create_model() end ==================================
2022-11-12 19:07:03,228:INFO:Creating metrics dataframe
2022-11-12 19:07:03,242:INFO:Initializing Dummy Regressor
2022-11-12 19:07:03,242:INFO:Total runtime is 0.8477191249529521 minutes
2022-11-12 19:07:03,249:INFO:SubProcess create_model() called ==================================
2022-11-12 19:07:03,249:INFO:Initializing create_model()
2022-11-12 19:07:03,249:INFO:create_model(estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F93E660B48>, return_train_score=False, kwargs={})
2022-11-12 19:07:03,250:INFO:Checking exceptions
2022-11-12 19:07:03,250:INFO:Importing libraries
2022-11-12 19:07:03,250:INFO:Copying training dataset
2022-11-12 19:07:03,251:INFO:Defining folds
2022-11-12 19:07:03,251:INFO:Declaring metric variables
2022-11-12 19:07:03,257:INFO:Importing untrained model
2022-11-12 19:07:03,263:INFO:Dummy Regressor Imported succesfully
2022-11-12 19:07:03,275:INFO:Starting cross validation
2022-11-12 19:07:03,276:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:07:03,308:INFO:Calculating mean and std
2022-11-12 19:07:03,310:INFO:Creating metrics dataframe
2022-11-12 19:07:03,314:INFO:Uploading results into container
2022-11-12 19:07:03,314:INFO:Uploading model into container now
2022-11-12 19:07:03,314:INFO:create_model_container: 34
2022-11-12 19:07:03,314:INFO:master_model_container: 34
2022-11-12 19:07:03,314:INFO:display_container: 3
2022-11-12 19:07:03,314:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2022-11-12 19:07:03,314:INFO:create_model() succesfully completed......................................
2022-11-12 19:07:03,405:INFO:SubProcess create_model() end ==================================
2022-11-12 19:07:03,405:INFO:Creating metrics dataframe
2022-11-12 19:07:03,431:INFO:Initializing create_model()
2022-11-12 19:07:03,431:INFO:create_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-11-12 19:07:03,432:INFO:Checking exceptions
2022-11-12 19:07:03,432:INFO:Importing libraries
2022-11-12 19:07:03,432:INFO:Copying training dataset
2022-11-12 19:07:03,432:INFO:Defining folds
2022-11-12 19:07:03,433:INFO:Declaring metric variables
2022-11-12 19:07:03,433:INFO:Importing untrained model
2022-11-12 19:07:03,433:INFO:Declaring custom model
2022-11-12 19:07:03,433:INFO:Gradient Boosting Regressor Imported succesfully
2022-11-12 19:07:03,433:INFO:Cross validation set to False
2022-11-12 19:07:03,434:INFO:Fitting Model
2022-11-12 19:07:04,112:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-12 19:07:04,113:INFO:create_models() succesfully completed......................................
2022-11-12 19:07:04,237:INFO:create_model_container: 34
2022-11-12 19:07:04,238:INFO:master_model_container: 34
2022-11-12 19:07:04,238:INFO:display_container: 3
2022-11-12 19:07:04,239:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-12 19:07:04,239:INFO:compare_models() succesfully completed......................................
2022-11-12 19:07:15,750:INFO:Initializing compare_models()
2022-11-12 19:07:15,750:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=RMSE, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2022-11-12 19:07:15,750:INFO:Checking exceptions
2022-11-12 19:07:15,751:INFO:Preparing display monitor
2022-11-12 19:07:15,751:INFO:Preparing display monitor
2022-11-12 19:07:15,772:INFO:Initializing Linear Regression
2022-11-12 19:07:15,772:INFO:Total runtime is 0.0 minutes
2022-11-12 19:07:15,779:INFO:SubProcess create_model() called ==================================
2022-11-12 19:07:15,780:INFO:Initializing create_model()
2022-11-12 19:07:15,780:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F932177908>, return_train_score=False, kwargs={})
2022-11-12 19:07:15,780:INFO:Checking exceptions
2022-11-12 19:07:15,780:INFO:Importing libraries
2022-11-12 19:07:15,780:INFO:Copying training dataset
2022-11-12 19:07:15,781:INFO:Defining folds
2022-11-12 19:07:15,781:INFO:Declaring metric variables
2022-11-12 19:07:15,787:INFO:Importing untrained model
2022-11-12 19:07:15,794:INFO:Linear Regression Imported succesfully
2022-11-12 19:07:15,806:INFO:Starting cross validation
2022-11-12 19:07:15,806:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:07:16,791:INFO:Calculating mean and std
2022-11-12 19:07:16,792:INFO:Creating metrics dataframe
2022-11-12 19:07:16,795:INFO:Uploading results into container
2022-11-12 19:07:16,795:INFO:Uploading model into container now
2022-11-12 19:07:16,796:INFO:create_model_container: 35
2022-11-12 19:07:16,796:INFO:master_model_container: 35
2022-11-12 19:07:16,796:INFO:display_container: 4
2022-11-12 19:07:16,796:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2022-11-12 19:07:16,796:INFO:create_model() succesfully completed......................................
2022-11-12 19:07:16,889:INFO:SubProcess create_model() end ==================================
2022-11-12 19:07:16,889:INFO:Creating metrics dataframe
2022-11-12 19:07:16,899:INFO:Initializing Lasso Regression
2022-11-12 19:07:16,899:INFO:Total runtime is 0.01877088944117228 minutes
2022-11-12 19:07:16,905:INFO:SubProcess create_model() called ==================================
2022-11-12 19:07:16,905:INFO:Initializing create_model()
2022-11-12 19:07:16,905:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F932177908>, return_train_score=False, kwargs={})
2022-11-12 19:07:16,906:INFO:Checking exceptions
2022-11-12 19:07:16,906:INFO:Importing libraries
2022-11-12 19:07:16,906:INFO:Copying training dataset
2022-11-12 19:07:16,907:INFO:Defining folds
2022-11-12 19:07:16,907:INFO:Declaring metric variables
2022-11-12 19:07:16,912:INFO:Importing untrained model
2022-11-12 19:07:16,918:INFO:Lasso Regression Imported succesfully
2022-11-12 19:07:16,929:INFO:Starting cross validation
2022-11-12 19:07:16,929:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:07:17,926:INFO:Calculating mean and std
2022-11-12 19:07:17,927:INFO:Creating metrics dataframe
2022-11-12 19:07:17,931:INFO:Uploading results into container
2022-11-12 19:07:17,931:INFO:Uploading model into container now
2022-11-12 19:07:17,931:INFO:create_model_container: 36
2022-11-12 19:07:17,931:INFO:master_model_container: 36
2022-11-12 19:07:17,931:INFO:display_container: 4
2022-11-12 19:07:17,931:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=8320,
      selection='cyclic', tol=0.0001, warm_start=False)
2022-11-12 19:07:17,931:INFO:create_model() succesfully completed......................................
2022-11-12 19:07:18,031:INFO:SubProcess create_model() end ==================================
2022-11-12 19:07:18,031:INFO:Creating metrics dataframe
2022-11-12 19:07:18,042:INFO:Initializing Ridge Regression
2022-11-12 19:07:18,042:INFO:Total runtime is 0.0378251830736796 minutes
2022-11-12 19:07:18,048:INFO:SubProcess create_model() called ==================================
2022-11-12 19:07:18,048:INFO:Initializing create_model()
2022-11-12 19:07:18,048:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F932177908>, return_train_score=False, kwargs={})
2022-11-12 19:07:18,048:INFO:Checking exceptions
2022-11-12 19:07:18,048:INFO:Importing libraries
2022-11-12 19:07:18,049:INFO:Copying training dataset
2022-11-12 19:07:18,049:INFO:Defining folds
2022-11-12 19:07:18,049:INFO:Declaring metric variables
2022-11-12 19:07:18,055:INFO:Importing untrained model
2022-11-12 19:07:18,060:INFO:Ridge Regression Imported succesfully
2022-11-12 19:07:18,072:INFO:Starting cross validation
2022-11-12 19:07:18,073:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:07:18,931:INFO:Calculating mean and std
2022-11-12 19:07:18,932:INFO:Creating metrics dataframe
2022-11-12 19:07:18,935:INFO:Uploading results into container
2022-11-12 19:07:18,936:INFO:Uploading model into container now
2022-11-12 19:07:18,936:INFO:create_model_container: 37
2022-11-12 19:07:18,936:INFO:master_model_container: 37
2022-11-12 19:07:18,936:INFO:display_container: 4
2022-11-12 19:07:18,936:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=8320, solver='auto', tol=0.001)
2022-11-12 19:07:18,936:INFO:create_model() succesfully completed......................................
2022-11-12 19:07:19,035:INFO:SubProcess create_model() end ==================================
2022-11-12 19:07:19,035:INFO:Creating metrics dataframe
2022-11-12 19:07:19,046:INFO:Initializing Elastic Net
2022-11-12 19:07:19,047:INFO:Total runtime is 0.054578948020935054 minutes
2022-11-12 19:07:19,053:INFO:SubProcess create_model() called ==================================
2022-11-12 19:07:19,054:INFO:Initializing create_model()
2022-11-12 19:07:19,054:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F932177908>, return_train_score=False, kwargs={})
2022-11-12 19:07:19,054:INFO:Checking exceptions
2022-11-12 19:07:19,054:INFO:Importing libraries
2022-11-12 19:07:19,054:INFO:Copying training dataset
2022-11-12 19:07:19,055:INFO:Defining folds
2022-11-12 19:07:19,055:INFO:Declaring metric variables
2022-11-12 19:07:19,061:INFO:Importing untrained model
2022-11-12 19:07:19,067:INFO:Elastic Net Imported succesfully
2022-11-12 19:07:19,080:INFO:Starting cross validation
2022-11-12 19:07:19,081:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:07:20,680:INFO:Calculating mean and std
2022-11-12 19:07:20,681:INFO:Creating metrics dataframe
2022-11-12 19:07:20,685:INFO:Uploading results into container
2022-11-12 19:07:20,685:INFO:Uploading model into container now
2022-11-12 19:07:20,685:INFO:create_model_container: 38
2022-11-12 19:07:20,685:INFO:master_model_container: 38
2022-11-12 19:07:20,685:INFO:display_container: 4
2022-11-12 19:07:20,685:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=8320, selection='cyclic', tol=0.0001, warm_start=False)
2022-11-12 19:07:20,685:INFO:create_model() succesfully completed......................................
2022-11-12 19:07:20,776:INFO:SubProcess create_model() end ==================================
2022-11-12 19:07:20,776:INFO:Creating metrics dataframe
2022-11-12 19:07:20,787:INFO:Initializing Least Angle Regression
2022-11-12 19:07:20,787:INFO:Total runtime is 0.08358548879623412 minutes
2022-11-12 19:07:20,793:INFO:SubProcess create_model() called ==================================
2022-11-12 19:07:20,794:INFO:Initializing create_model()
2022-11-12 19:07:20,794:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F932177908>, return_train_score=False, kwargs={})
2022-11-12 19:07:20,794:INFO:Checking exceptions
2022-11-12 19:07:20,794:INFO:Importing libraries
2022-11-12 19:07:20,794:INFO:Copying training dataset
2022-11-12 19:07:20,795:INFO:Defining folds
2022-11-12 19:07:20,795:INFO:Declaring metric variables
2022-11-12 19:07:20,801:INFO:Importing untrained model
2022-11-12 19:07:20,807:INFO:Least Angle Regression Imported succesfully
2022-11-12 19:07:20,818:INFO:Starting cross validation
2022-11-12 19:07:20,819:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:07:21,021:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2022-11-12 19:07:21,022:WARNING:Traceback (most recent call last):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 3210, in create_model_supervised
    error_score=0,
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 248, in cross_validate
    for train, test in cv.split(X, y, groups))
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 1085, in __call__
    if self.dispatch_one_batch(iterator):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 901, in dispatch_one_batch
    self._dispatch(tasks)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 819, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 597, in __init__
    self.results = batch()
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in __call__
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in <listcomp>
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 88, in __call__
    *args, **kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 213, in _score
    **self._kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 179, in mean_absolute_error
    y_true, y_pred, multioutput)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 645, in check_array
    allow_nan=force_all_finite == 'allow-nan')
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 99, in _assert_all_finite
    msg_dtype if msg_dtype is not None else X.dtype)
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2022-11-12 19:07:21,022:INFO:Initializing create_model()
2022-11-12 19:07:21,022:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F932177908>, return_train_score=False, kwargs={})
2022-11-12 19:07:21,022:INFO:Checking exceptions
2022-11-12 19:07:21,022:INFO:Importing libraries
2022-11-12 19:07:21,023:INFO:Copying training dataset
2022-11-12 19:07:21,024:INFO:Defining folds
2022-11-12 19:07:21,024:INFO:Declaring metric variables
2022-11-12 19:07:21,029:INFO:Importing untrained model
2022-11-12 19:07:21,036:INFO:Least Angle Regression Imported succesfully
2022-11-12 19:07:21,048:INFO:Starting cross validation
2022-11-12 19:07:21,049:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:07:21,249:ERROR:create_model() for lar raised an exception or returned all 0.0:
2022-11-12 19:07:21,250:ERROR:Traceback (most recent call last):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 3210, in create_model_supervised
    error_score=0,
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 248, in cross_validate
    for train, test in cv.split(X, y, groups))
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 1085, in __call__
    if self.dispatch_one_batch(iterator):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 901, in dispatch_one_batch
    self._dispatch(tasks)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 819, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 597, in __init__
    self.results = batch()
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in __call__
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in <listcomp>
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 88, in __call__
    *args, **kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 213, in _score
    **self._kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 179, in mean_absolute_error
    y_true, y_pred, multioutput)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 645, in check_array
    allow_nan=force_all_finite == 'allow-nan')
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 99, in _assert_all_finite
    msg_dtype if msg_dtype is not None else X.dtype)
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 2212, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 3210, in create_model_supervised
    error_score=0,
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 248, in cross_validate
    for train, test in cv.split(X, y, groups))
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 1085, in __call__
    if self.dispatch_one_batch(iterator):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 901, in dispatch_one_batch
    self._dispatch(tasks)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 819, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 597, in __init__
    self.results = batch()
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in __call__
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in <listcomp>
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 88, in __call__
    *args, **kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 213, in _score
    **self._kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 179, in mean_absolute_error
    y_true, y_pred, multioutput)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 645, in check_array
    allow_nan=force_all_finite == 'allow-nan')
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 99, in _assert_all_finite
    msg_dtype if msg_dtype is not None else X.dtype)
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2022-11-12 19:07:21,251:INFO:Initializing Lasso Least Angle Regression
2022-11-12 19:07:21,251:INFO:Total runtime is 0.09132057825724282 minutes
2022-11-12 19:07:21,257:INFO:SubProcess create_model() called ==================================
2022-11-12 19:07:21,257:INFO:Initializing create_model()
2022-11-12 19:07:21,257:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F932177908>, return_train_score=False, kwargs={})
2022-11-12 19:07:21,258:INFO:Checking exceptions
2022-11-12 19:07:21,258:INFO:Importing libraries
2022-11-12 19:07:21,258:INFO:Copying training dataset
2022-11-12 19:07:21,259:INFO:Defining folds
2022-11-12 19:07:21,259:INFO:Declaring metric variables
2022-11-12 19:07:21,265:INFO:Importing untrained model
2022-11-12 19:07:21,270:INFO:Lasso Least Angle Regression Imported succesfully
2022-11-12 19:07:21,283:INFO:Starting cross validation
2022-11-12 19:07:21,283:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:07:22,616:INFO:Calculating mean and std
2022-11-12 19:07:22,617:INFO:Creating metrics dataframe
2022-11-12 19:07:22,621:INFO:Uploading results into container
2022-11-12 19:07:22,621:INFO:Uploading model into container now
2022-11-12 19:07:22,621:INFO:create_model_container: 39
2022-11-12 19:07:22,621:INFO:master_model_container: 39
2022-11-12 19:07:22,621:INFO:display_container: 4
2022-11-12 19:07:22,621:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize=True,
          positive=False, precompute='auto', random_state=8320, verbose=False)
2022-11-12 19:07:22,621:INFO:create_model() succesfully completed......................................
2022-11-12 19:07:22,720:INFO:SubProcess create_model() end ==================================
2022-11-12 19:07:22,720:INFO:Creating metrics dataframe
2022-11-12 19:07:22,732:INFO:Initializing Orthogonal Matching Pursuit
2022-11-12 19:07:22,733:INFO:Total runtime is 0.11600946982701618 minutes
2022-11-12 19:07:22,739:INFO:SubProcess create_model() called ==================================
2022-11-12 19:07:22,739:INFO:Initializing create_model()
2022-11-12 19:07:22,739:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F932177908>, return_train_score=False, kwargs={})
2022-11-12 19:07:22,739:INFO:Checking exceptions
2022-11-12 19:07:22,740:INFO:Importing libraries
2022-11-12 19:07:22,740:INFO:Copying training dataset
2022-11-12 19:07:22,741:INFO:Defining folds
2022-11-12 19:07:22,741:INFO:Declaring metric variables
2022-11-12 19:07:22,747:INFO:Importing untrained model
2022-11-12 19:07:22,753:INFO:Orthogonal Matching Pursuit Imported succesfully
2022-11-12 19:07:22,766:INFO:Starting cross validation
2022-11-12 19:07:22,767:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:07:22,928:INFO:Calculating mean and std
2022-11-12 19:07:22,929:INFO:Creating metrics dataframe
2022-11-12 19:07:22,933:INFO:Uploading results into container
2022-11-12 19:07:22,933:INFO:Uploading model into container now
2022-11-12 19:07:22,933:INFO:create_model_container: 40
2022-11-12 19:07:22,933:INFO:master_model_container: 40
2022-11-12 19:07:22,933:INFO:display_container: 4
2022-11-12 19:07:22,933:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None)
2022-11-12 19:07:22,933:INFO:create_model() succesfully completed......................................
2022-11-12 19:07:23,026:INFO:SubProcess create_model() end ==================================
2022-11-12 19:07:23,027:INFO:Creating metrics dataframe
2022-11-12 19:07:23,039:INFO:Initializing Bayesian Ridge
2022-11-12 19:07:23,039:INFO:Total runtime is 0.12111061016718545 minutes
2022-11-12 19:07:23,045:INFO:SubProcess create_model() called ==================================
2022-11-12 19:07:23,045:INFO:Initializing create_model()
2022-11-12 19:07:23,045:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F932177908>, return_train_score=False, kwargs={})
2022-11-12 19:07:23,046:INFO:Checking exceptions
2022-11-12 19:07:23,046:INFO:Importing libraries
2022-11-12 19:07:23,046:INFO:Copying training dataset
2022-11-12 19:07:23,047:INFO:Defining folds
2022-11-12 19:07:23,047:INFO:Declaring metric variables
2022-11-12 19:07:23,053:INFO:Importing untrained model
2022-11-12 19:07:23,058:INFO:Bayesian Ridge Imported succesfully
2022-11-12 19:07:23,070:INFO:Starting cross validation
2022-11-12 19:07:23,070:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:07:25,342:INFO:Calculating mean and std
2022-11-12 19:07:25,343:INFO:Creating metrics dataframe
2022-11-12 19:07:25,347:INFO:Uploading results into container
2022-11-12 19:07:25,348:INFO:Uploading model into container now
2022-11-12 19:07:25,348:INFO:create_model_container: 41
2022-11-12 19:07:25,348:INFO:master_model_container: 41
2022-11-12 19:07:25,348:INFO:display_container: 4
2022-11-12 19:07:25,348:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False)
2022-11-12 19:07:25,348:INFO:create_model() succesfully completed......................................
2022-11-12 19:07:25,449:INFO:SubProcess create_model() end ==================================
2022-11-12 19:07:25,449:INFO:Creating metrics dataframe
2022-11-12 19:07:25,461:INFO:Initializing Passive Aggressive Regressor
2022-11-12 19:07:25,461:INFO:Total runtime is 0.16148203214009602 minutes
2022-11-12 19:07:25,467:INFO:SubProcess create_model() called ==================================
2022-11-12 19:07:25,467:INFO:Initializing create_model()
2022-11-12 19:07:25,467:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F932177908>, return_train_score=False, kwargs={})
2022-11-12 19:07:25,468:INFO:Checking exceptions
2022-11-12 19:07:25,468:INFO:Importing libraries
2022-11-12 19:07:25,468:INFO:Copying training dataset
2022-11-12 19:07:25,469:INFO:Defining folds
2022-11-12 19:07:25,469:INFO:Declaring metric variables
2022-11-12 19:07:25,475:INFO:Importing untrained model
2022-11-12 19:07:25,481:INFO:Passive Aggressive Regressor Imported succesfully
2022-11-12 19:07:25,492:INFO:Starting cross validation
2022-11-12 19:07:25,492:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:07:25,723:INFO:Calculating mean and std
2022-11-12 19:07:25,724:INFO:Creating metrics dataframe
2022-11-12 19:07:25,728:INFO:Uploading results into container
2022-11-12 19:07:25,728:INFO:Uploading model into container now
2022-11-12 19:07:25,728:INFO:create_model_container: 42
2022-11-12 19:07:25,728:INFO:master_model_container: 42
2022-11-12 19:07:25,728:INFO:display_container: 4
2022-11-12 19:07:25,729:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=8320, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-11-12 19:07:25,729:INFO:create_model() succesfully completed......................................
2022-11-12 19:07:25,820:INFO:SubProcess create_model() end ==================================
2022-11-12 19:07:25,820:INFO:Creating metrics dataframe
2022-11-12 19:07:25,832:INFO:Initializing Huber Regressor
2022-11-12 19:07:25,832:INFO:Total runtime is 0.1676594853401184 minutes
2022-11-12 19:07:25,838:INFO:SubProcess create_model() called ==================================
2022-11-12 19:07:25,838:INFO:Initializing create_model()
2022-11-12 19:07:25,838:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F932177908>, return_train_score=False, kwargs={})
2022-11-12 19:07:25,838:INFO:Checking exceptions
2022-11-12 19:07:25,838:INFO:Importing libraries
2022-11-12 19:07:25,838:INFO:Copying training dataset
2022-11-12 19:07:25,839:INFO:Defining folds
2022-11-12 19:07:25,839:INFO:Declaring metric variables
2022-11-12 19:07:25,846:INFO:Importing untrained model
2022-11-12 19:07:25,851:INFO:Huber Regressor Imported succesfully
2022-11-12 19:07:25,863:INFO:Starting cross validation
2022-11-12 19:07:25,864:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:07:29,236:INFO:Calculating mean and std
2022-11-12 19:07:29,237:INFO:Creating metrics dataframe
2022-11-12 19:07:29,241:INFO:Uploading results into container
2022-11-12 19:07:29,241:INFO:Uploading model into container now
2022-11-12 19:07:29,241:INFO:create_model_container: 43
2022-11-12 19:07:29,241:INFO:master_model_container: 43
2022-11-12 19:07:29,241:INFO:display_container: 4
2022-11-12 19:07:29,241:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-11-12 19:07:29,241:INFO:create_model() succesfully completed......................................
2022-11-12 19:07:29,330:INFO:SubProcess create_model() end ==================================
2022-11-12 19:07:29,330:INFO:Creating metrics dataframe
2022-11-12 19:07:29,343:INFO:Initializing K Neighbors Regressor
2022-11-12 19:07:29,343:INFO:Total runtime is 0.226172665754954 minutes
2022-11-12 19:07:29,348:INFO:SubProcess create_model() called ==================================
2022-11-12 19:07:29,349:INFO:Initializing create_model()
2022-11-12 19:07:29,349:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F932177908>, return_train_score=False, kwargs={})
2022-11-12 19:07:29,349:INFO:Checking exceptions
2022-11-12 19:07:29,349:INFO:Importing libraries
2022-11-12 19:07:29,349:INFO:Copying training dataset
2022-11-12 19:07:29,350:INFO:Defining folds
2022-11-12 19:07:29,351:INFO:Declaring metric variables
2022-11-12 19:07:29,356:INFO:Importing untrained model
2022-11-12 19:07:29,362:INFO:K Neighbors Regressor Imported succesfully
2022-11-12 19:07:29,374:INFO:Starting cross validation
2022-11-12 19:07:29,374:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:07:31,291:INFO:Calculating mean and std
2022-11-12 19:07:31,292:INFO:Creating metrics dataframe
2022-11-12 19:07:31,295:INFO:Uploading results into container
2022-11-12 19:07:31,295:INFO:Uploading model into container now
2022-11-12 19:07:31,295:INFO:create_model_container: 44
2022-11-12 19:07:31,295:INFO:master_model_container: 44
2022-11-12 19:07:31,296:INFO:display_container: 4
2022-11-12 19:07:31,296:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2022-11-12 19:07:31,296:INFO:create_model() succesfully completed......................................
2022-11-12 19:07:31,383:INFO:SubProcess create_model() end ==================================
2022-11-12 19:07:31,384:INFO:Creating metrics dataframe
2022-11-12 19:07:31,396:INFO:Initializing Decision Tree Regressor
2022-11-12 19:07:31,396:INFO:Total runtime is 0.26039833227793374 minutes
2022-11-12 19:07:31,402:INFO:SubProcess create_model() called ==================================
2022-11-12 19:07:31,402:INFO:Initializing create_model()
2022-11-12 19:07:31,403:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F932177908>, return_train_score=False, kwargs={})
2022-11-12 19:07:31,403:INFO:Checking exceptions
2022-11-12 19:07:31,403:INFO:Importing libraries
2022-11-12 19:07:31,403:INFO:Copying training dataset
2022-11-12 19:07:31,404:INFO:Defining folds
2022-11-12 19:07:31,404:INFO:Declaring metric variables
2022-11-12 19:07:31,409:INFO:Importing untrained model
2022-11-12 19:07:31,415:INFO:Decision Tree Regressor Imported succesfully
2022-11-12 19:07:31,428:INFO:Starting cross validation
2022-11-12 19:07:31,429:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:07:31,786:INFO:Calculating mean and std
2022-11-12 19:07:31,787:INFO:Creating metrics dataframe
2022-11-12 19:07:31,790:INFO:Uploading results into container
2022-11-12 19:07:31,790:INFO:Uploading model into container now
2022-11-12 19:07:31,790:INFO:create_model_container: 45
2022-11-12 19:07:31,790:INFO:master_model_container: 45
2022-11-12 19:07:31,791:INFO:display_container: 4
2022-11-12 19:07:31,791:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=8320, splitter='best')
2022-11-12 19:07:31,791:INFO:create_model() succesfully completed......................................
2022-11-12 19:07:31,879:INFO:SubProcess create_model() end ==================================
2022-11-12 19:07:31,879:INFO:Creating metrics dataframe
2022-11-12 19:07:31,891:INFO:Initializing Random Forest Regressor
2022-11-12 19:07:31,891:INFO:Total runtime is 0.26865301132202146 minutes
2022-11-12 19:07:31,897:INFO:SubProcess create_model() called ==================================
2022-11-12 19:07:31,897:INFO:Initializing create_model()
2022-11-12 19:07:31,898:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F932177908>, return_train_score=False, kwargs={})
2022-11-12 19:07:31,898:INFO:Checking exceptions
2022-11-12 19:07:31,898:INFO:Importing libraries
2022-11-12 19:07:31,898:INFO:Copying training dataset
2022-11-12 19:07:31,899:INFO:Defining folds
2022-11-12 19:07:31,899:INFO:Declaring metric variables
2022-11-12 19:07:31,905:INFO:Importing untrained model
2022-11-12 19:07:31,910:INFO:Random Forest Regressor Imported succesfully
2022-11-12 19:07:31,921:INFO:Starting cross validation
2022-11-12 19:07:31,922:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:07:39,779:INFO:Calculating mean and std
2022-11-12 19:07:39,780:INFO:Creating metrics dataframe
2022-11-12 19:07:39,783:INFO:Uploading results into container
2022-11-12 19:07:39,784:INFO:Uploading model into container now
2022-11-12 19:07:39,784:INFO:create_model_container: 46
2022-11-12 19:07:39,784:INFO:master_model_container: 46
2022-11-12 19:07:39,784:INFO:display_container: 4
2022-11-12 19:07:39,784:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=8320, verbose=0, warm_start=False)
2022-11-12 19:07:39,784:INFO:create_model() succesfully completed......................................
2022-11-12 19:07:39,880:INFO:SubProcess create_model() end ==================================
2022-11-12 19:07:39,880:INFO:Creating metrics dataframe
2022-11-12 19:07:39,893:INFO:Initializing Extra Trees Regressor
2022-11-12 19:07:39,893:INFO:Total runtime is 0.40201359589894614 minutes
2022-11-12 19:07:39,900:INFO:SubProcess create_model() called ==================================
2022-11-12 19:07:39,900:INFO:Initializing create_model()
2022-11-12 19:07:39,900:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F932177908>, return_train_score=False, kwargs={})
2022-11-12 19:07:39,901:INFO:Checking exceptions
2022-11-12 19:07:39,901:INFO:Importing libraries
2022-11-12 19:07:39,901:INFO:Copying training dataset
2022-11-12 19:07:39,902:INFO:Defining folds
2022-11-12 19:07:39,902:INFO:Declaring metric variables
2022-11-12 19:07:39,908:INFO:Importing untrained model
2022-11-12 19:07:39,915:INFO:Extra Trees Regressor Imported succesfully
2022-11-12 19:07:39,929:INFO:Starting cross validation
2022-11-12 19:07:39,930:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:07:48,103:INFO:Calculating mean and std
2022-11-12 19:07:48,104:INFO:Creating metrics dataframe
2022-11-12 19:07:48,107:INFO:Uploading results into container
2022-11-12 19:07:48,107:INFO:Uploading model into container now
2022-11-12 19:07:48,108:INFO:create_model_container: 47
2022-11-12 19:07:48,108:INFO:master_model_container: 47
2022-11-12 19:07:48,108:INFO:display_container: 4
2022-11-12 19:07:48,108:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=8320, verbose=0, warm_start=False)
2022-11-12 19:07:48,108:INFO:create_model() succesfully completed......................................
2022-11-12 19:07:48,208:INFO:SubProcess create_model() end ==================================
2022-11-12 19:07:48,208:INFO:Creating metrics dataframe
2022-11-12 19:07:48,225:INFO:Initializing AdaBoost Regressor
2022-11-12 19:07:48,225:INFO:Total runtime is 0.5408809781074524 minutes
2022-11-12 19:07:48,232:INFO:SubProcess create_model() called ==================================
2022-11-12 19:07:48,233:INFO:Initializing create_model()
2022-11-12 19:07:48,233:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F932177908>, return_train_score=False, kwargs={})
2022-11-12 19:07:48,233:INFO:Checking exceptions
2022-11-12 19:07:48,233:INFO:Importing libraries
2022-11-12 19:07:48,233:INFO:Copying training dataset
2022-11-12 19:07:48,234:INFO:Defining folds
2022-11-12 19:07:48,235:INFO:Declaring metric variables
2022-11-12 19:07:48,241:INFO:Importing untrained model
2022-11-12 19:07:48,247:INFO:AdaBoost Regressor Imported succesfully
2022-11-12 19:07:48,258:INFO:Starting cross validation
2022-11-12 19:07:48,259:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:07:52,176:INFO:Calculating mean and std
2022-11-12 19:07:52,177:INFO:Creating metrics dataframe
2022-11-12 19:07:52,181:INFO:Uploading results into container
2022-11-12 19:07:52,181:INFO:Uploading model into container now
2022-11-12 19:07:52,181:INFO:create_model_container: 48
2022-11-12 19:07:52,181:INFO:master_model_container: 48
2022-11-12 19:07:52,181:INFO:display_container: 4
2022-11-12 19:07:52,181:INFO:AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=8320)
2022-11-12 19:07:52,181:INFO:create_model() succesfully completed......................................
2022-11-12 19:07:52,279:INFO:SubProcess create_model() end ==================================
2022-11-12 19:07:52,279:INFO:Creating metrics dataframe
2022-11-12 19:07:52,291:INFO:Initializing Gradient Boosting Regressor
2022-11-12 19:07:52,292:INFO:Total runtime is 0.6086646556854248 minutes
2022-11-12 19:07:52,297:INFO:SubProcess create_model() called ==================================
2022-11-12 19:07:52,298:INFO:Initializing create_model()
2022-11-12 19:07:52,298:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F932177908>, return_train_score=False, kwargs={})
2022-11-12 19:07:52,298:INFO:Checking exceptions
2022-11-12 19:07:52,298:INFO:Importing libraries
2022-11-12 19:07:52,298:INFO:Copying training dataset
2022-11-12 19:07:52,299:INFO:Defining folds
2022-11-12 19:07:52,299:INFO:Declaring metric variables
2022-11-12 19:07:52,305:INFO:Importing untrained model
2022-11-12 19:07:52,311:INFO:Gradient Boosting Regressor Imported succesfully
2022-11-12 19:07:52,323:INFO:Starting cross validation
2022-11-12 19:07:52,324:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:07:58,772:INFO:Calculating mean and std
2022-11-12 19:07:58,773:INFO:Creating metrics dataframe
2022-11-12 19:07:58,777:INFO:Uploading results into container
2022-11-12 19:07:58,777:INFO:Uploading model into container now
2022-11-12 19:07:58,777:INFO:create_model_container: 49
2022-11-12 19:07:58,777:INFO:master_model_container: 49
2022-11-12 19:07:58,777:INFO:display_container: 4
2022-11-12 19:07:58,777:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-12 19:07:58,777:INFO:create_model() succesfully completed......................................
2022-11-12 19:07:58,865:INFO:SubProcess create_model() end ==================================
2022-11-12 19:07:58,865:INFO:Creating metrics dataframe
2022-11-12 19:07:58,878:INFO:Initializing Light Gradient Boosting Machine
2022-11-12 19:07:58,879:INFO:Total runtime is 0.7184479872385661 minutes
2022-11-12 19:07:58,885:INFO:SubProcess create_model() called ==================================
2022-11-12 19:07:58,885:INFO:Initializing create_model()
2022-11-12 19:07:58,885:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F932177908>, return_train_score=False, kwargs={})
2022-11-12 19:07:58,885:INFO:Checking exceptions
2022-11-12 19:07:58,885:INFO:Importing libraries
2022-11-12 19:07:58,885:INFO:Copying training dataset
2022-11-12 19:07:58,886:INFO:Defining folds
2022-11-12 19:07:58,886:INFO:Declaring metric variables
2022-11-12 19:07:58,892:INFO:Importing untrained model
2022-11-12 19:07:58,898:INFO:Light Gradient Boosting Machine Imported succesfully
2022-11-12 19:07:58,910:INFO:Starting cross validation
2022-11-12 19:07:58,911:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:08:05,557:INFO:Calculating mean and std
2022-11-12 19:08:05,558:INFO:Creating metrics dataframe
2022-11-12 19:08:05,563:INFO:Uploading results into container
2022-11-12 19:08:05,563:INFO:Uploading model into container now
2022-11-12 19:08:05,563:INFO:create_model_container: 50
2022-11-12 19:08:05,564:INFO:master_model_container: 50
2022-11-12 19:08:05,564:INFO:display_container: 4
2022-11-12 19:08:05,564:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              device='gpu', importance_type='split', learning_rate=0.1,
              max_depth=-1, min_child_samples=20, min_child_weight=0.001,
              min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
              objective=None, random_state=8320, reg_alpha=0.0, reg_lambda=0.0,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0)
2022-11-12 19:08:05,564:INFO:create_model() succesfully completed......................................
2022-11-12 19:08:05,666:INFO:SubProcess create_model() end ==================================
2022-11-12 19:08:05,667:INFO:Creating metrics dataframe
2022-11-12 19:08:05,684:INFO:Initializing Dummy Regressor
2022-11-12 19:08:05,685:INFO:Total runtime is 0.8318872094154358 minutes
2022-11-12 19:08:05,691:INFO:SubProcess create_model() called ==================================
2022-11-12 19:08:05,691:INFO:Initializing create_model()
2022-11-12 19:08:05,691:INFO:create_model(estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F932177908>, return_train_score=False, kwargs={})
2022-11-12 19:08:05,691:INFO:Checking exceptions
2022-11-12 19:08:05,692:INFO:Importing libraries
2022-11-12 19:08:05,692:INFO:Copying training dataset
2022-11-12 19:08:05,693:INFO:Defining folds
2022-11-12 19:08:05,693:INFO:Declaring metric variables
2022-11-12 19:08:05,698:INFO:Importing untrained model
2022-11-12 19:08:05,704:INFO:Dummy Regressor Imported succesfully
2022-11-12 19:08:05,717:INFO:Starting cross validation
2022-11-12 19:08:05,717:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:08:05,753:INFO:Calculating mean and std
2022-11-12 19:08:05,754:INFO:Creating metrics dataframe
2022-11-12 19:08:05,758:INFO:Uploading results into container
2022-11-12 19:08:05,758:INFO:Uploading model into container now
2022-11-12 19:08:05,758:INFO:create_model_container: 51
2022-11-12 19:08:05,758:INFO:master_model_container: 51
2022-11-12 19:08:05,758:INFO:display_container: 4
2022-11-12 19:08:05,759:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2022-11-12 19:08:05,759:INFO:create_model() succesfully completed......................................
2022-11-12 19:08:05,853:INFO:SubProcess create_model() end ==================================
2022-11-12 19:08:05,853:INFO:Creating metrics dataframe
2022-11-12 19:08:05,882:INFO:Initializing create_model()
2022-11-12 19:08:05,882:INFO:create_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-11-12 19:08:05,882:INFO:Checking exceptions
2022-11-12 19:08:05,882:INFO:Importing libraries
2022-11-12 19:08:05,882:INFO:Copying training dataset
2022-11-12 19:08:05,883:INFO:Defining folds
2022-11-12 19:08:05,883:INFO:Declaring metric variables
2022-11-12 19:08:05,883:INFO:Importing untrained model
2022-11-12 19:08:05,883:INFO:Declaring custom model
2022-11-12 19:08:05,884:INFO:Gradient Boosting Regressor Imported succesfully
2022-11-12 19:08:05,884:INFO:Cross validation set to False
2022-11-12 19:08:05,884:INFO:Fitting Model
2022-11-12 19:08:06,577:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-12 19:08:06,577:INFO:create_models() succesfully completed......................................
2022-11-12 19:08:06,671:INFO:Initializing create_model()
2022-11-12 19:08:06,672:INFO:create_model(estimator=Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=8320, solver='auto', tol=0.001), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-11-12 19:08:06,672:INFO:Checking exceptions
2022-11-12 19:08:06,672:INFO:Importing libraries
2022-11-12 19:08:06,672:INFO:Copying training dataset
2022-11-12 19:08:06,672:INFO:Defining folds
2022-11-12 19:08:06,672:INFO:Declaring metric variables
2022-11-12 19:08:06,672:INFO:Importing untrained model
2022-11-12 19:08:06,672:INFO:Declaring custom model
2022-11-12 19:08:06,673:INFO:Ridge Regression Imported succesfully
2022-11-12 19:08:06,673:INFO:Cross validation set to False
2022-11-12 19:08:06,673:INFO:Fitting Model
2022-11-12 19:08:06,682:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=8320, solver='auto', tol=0.001)
2022-11-12 19:08:06,682:INFO:create_models() succesfully completed......................................
2022-11-12 19:08:06,781:INFO:Initializing create_model()
2022-11-12 19:08:06,781:INFO:create_model(estimator=OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-11-12 19:08:06,781:INFO:Checking exceptions
2022-11-12 19:08:06,781:INFO:Importing libraries
2022-11-12 19:08:06,781:INFO:Copying training dataset
2022-11-12 19:08:06,782:INFO:Defining folds
2022-11-12 19:08:06,782:INFO:Declaring metric variables
2022-11-12 19:08:06,782:INFO:Importing untrained model
2022-11-12 19:08:06,782:INFO:Declaring custom model
2022-11-12 19:08:06,782:INFO:Orthogonal Matching Pursuit Imported succesfully
2022-11-12 19:08:06,782:INFO:Cross validation set to False
2022-11-12 19:08:06,782:INFO:Fitting Model
2022-11-12 19:08:06,792:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None)
2022-11-12 19:08:06,792:INFO:create_models() succesfully completed......................................
2022-11-12 19:08:06,912:INFO:create_model_container: 51
2022-11-12 19:08:06,912:INFO:master_model_container: 51
2022-11-12 19:08:06,912:INFO:display_container: 4
2022-11-12 19:08:06,913:INFO:[GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=8320, solver='auto', tol=0.001), OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None)]
2022-11-12 19:08:06,913:INFO:compare_models() succesfully completed......................................
2022-11-12 19:08:46,660:INFO:Initializing tune_model()
2022-11-12 19:08:46,660:INFO:tune_model(estimator=Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=8320, solver='auto', tol=0.001), fold=10, round=4, n_iter=100, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, return_train_score=False, kwargs={})
2022-11-12 19:08:46,660:INFO:Checking exceptions
2022-11-12 19:08:46,660:INFO:Preparing display monitor
2022-11-12 19:08:46,675:INFO:Copying training dataset
2022-11-12 19:08:46,676:INFO:Checking base model
2022-11-12 19:08:46,676:INFO:Base model : Ridge Regression
2022-11-12 19:08:46,684:INFO:Declaring metric variables
2022-11-12 19:08:46,690:INFO:Defining Hyperparameters
2022-11-12 19:08:46,796:INFO:Tuning with n_jobs=-1
2022-11-12 19:08:46,797:INFO:Initializing RandomizedSearchCV
2022-11-12 19:08:54,086:INFO:best_params: {'actual_estimator__normalize': False, 'actual_estimator__fit_intercept': True, 'actual_estimator__alpha': 9.94}
2022-11-12 19:08:54,087:INFO:Hyperparameter search completed
2022-11-12 19:08:54,087:INFO:SubProcess create_model() called ==================================
2022-11-12 19:08:54,088:INFO:Initializing create_model()
2022-11-12 19:08:54,088:INFO:create_model(estimator=Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=8320, solver='auto', tol=0.001), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F93E97FE48>, return_train_score=False, kwargs={'normalize': False, 'fit_intercept': True, 'alpha': 9.94})
2022-11-12 19:08:54,088:INFO:Checking exceptions
2022-11-12 19:08:54,088:INFO:Importing libraries
2022-11-12 19:08:54,088:INFO:Copying training dataset
2022-11-12 19:08:54,089:INFO:Defining folds
2022-11-12 19:08:54,089:INFO:Declaring metric variables
2022-11-12 19:08:54,095:INFO:Importing untrained model
2022-11-12 19:08:54,095:INFO:Declaring custom model
2022-11-12 19:08:54,101:INFO:Ridge Regression Imported succesfully
2022-11-12 19:08:54,114:INFO:Starting cross validation
2022-11-12 19:08:54,115:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:08:54,790:INFO:Calculating mean and std
2022-11-12 19:08:54,791:INFO:Creating metrics dataframe
2022-11-12 19:08:54,798:INFO:Finalizing model
2022-11-12 19:08:54,810:INFO:Uploading results into container
2022-11-12 19:08:54,810:INFO:Uploading model into container now
2022-11-12 19:08:54,810:INFO:create_model_container: 52
2022-11-12 19:08:54,810:INFO:master_model_container: 52
2022-11-12 19:08:54,810:INFO:display_container: 5
2022-11-12 19:08:54,810:INFO:Ridge(alpha=9.94, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=8320, solver='auto', tol=0.001)
2022-11-12 19:08:54,810:INFO:create_model() succesfully completed......................................
2022-11-12 19:08:54,906:INFO:SubProcess create_model() end ==================================
2022-11-12 19:08:54,915:INFO:create_model_container: 52
2022-11-12 19:08:54,915:INFO:master_model_container: 52
2022-11-12 19:08:54,915:INFO:display_container: 5
2022-11-12 19:08:54,915:INFO:Ridge(alpha=9.94, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=8320, solver='auto', tol=0.001)
2022-11-12 19:08:54,916:INFO:tune_model() succesfully completed......................................
2022-11-12 19:10:30,041:INFO:Initializing tune_model()
2022-11-12 19:10:30,042:INFO:tune_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), fold=10, round=4, n_iter=20, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, return_train_score=False, kwargs={})
2022-11-12 19:10:30,042:INFO:Checking exceptions
2022-11-12 19:10:30,042:INFO:Preparing display monitor
2022-11-12 19:10:30,058:INFO:Copying training dataset
2022-11-12 19:10:30,059:INFO:Checking base model
2022-11-12 19:10:30,059:INFO:Base model : Gradient Boosting Regressor
2022-11-12 19:10:30,066:INFO:Declaring metric variables
2022-11-12 19:10:30,072:INFO:Defining Hyperparameters
2022-11-12 19:10:30,187:INFO:Tuning with n_jobs=-1
2022-11-12 19:10:30,187:INFO:Initializing RandomizedSearchCV
2022-11-12 19:10:40,887:INFO:best_params: {'actual_estimator__subsample': 0.75, 'actual_estimator__n_estimators': 250, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 1, 'actual_estimator__min_impurity_decrease': 0.3, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 4, 'actual_estimator__learning_rate': 0.05}
2022-11-12 19:10:40,888:INFO:Hyperparameter search completed
2022-11-12 19:10:40,888:INFO:SubProcess create_model() called ==================================
2022-11-12 19:10:40,888:INFO:Initializing create_model()
2022-11-12 19:10:40,888:INFO:create_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F93E8C2488>, return_train_score=False, kwargs={'subsample': 0.75, 'n_estimators': 250, 'min_samples_split': 5, 'min_samples_leaf': 1, 'min_impurity_decrease': 0.3, 'max_features': 'log2', 'max_depth': 4, 'learning_rate': 0.05})
2022-11-12 19:10:40,889:INFO:Checking exceptions
2022-11-12 19:10:40,889:INFO:Importing libraries
2022-11-12 19:10:40,889:INFO:Copying training dataset
2022-11-12 19:10:40,889:INFO:Defining folds
2022-11-12 19:10:40,890:INFO:Declaring metric variables
2022-11-12 19:10:40,895:INFO:Importing untrained model
2022-11-12 19:10:40,896:INFO:Declaring custom model
2022-11-12 19:10:40,902:INFO:Gradient Boosting Regressor Imported succesfully
2022-11-12 19:10:40,915:INFO:Starting cross validation
2022-11-12 19:10:40,915:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:10:42,123:INFO:Calculating mean and std
2022-11-12 19:10:42,124:INFO:Creating metrics dataframe
2022-11-12 19:10:42,132:INFO:Finalizing model
2022-11-12 19:10:42,255:INFO:Uploading results into container
2022-11-12 19:10:42,255:INFO:Uploading model into container now
2022-11-12 19:10:42,255:INFO:create_model_container: 53
2022-11-12 19:10:42,256:INFO:master_model_container: 53
2022-11-12 19:10:42,256:INFO:display_container: 6
2022-11-12 19:10:42,256:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.05, loss='ls', max_depth=4,
                          max_features='log2', max_leaf_nodes=None,
                          min_impurity_decrease=0.3, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=5,
                          min_weight_fraction_leaf=0.0, n_estimators=250,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=0.75, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-12 19:10:42,256:INFO:create_model() succesfully completed......................................
2022-11-12 19:10:42,344:INFO:SubProcess create_model() end ==================================
2022-11-12 19:10:42,352:INFO:create_model_container: 53
2022-11-12 19:10:42,352:INFO:master_model_container: 53
2022-11-12 19:10:42,352:INFO:display_container: 6
2022-11-12 19:10:42,353:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.05, loss='ls', max_depth=4,
                          max_features='log2', max_leaf_nodes=None,
                          min_impurity_decrease=0.3, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=5,
                          min_weight_fraction_leaf=0.0, n_estimators=250,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=0.75, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-12 19:10:42,353:INFO:tune_model() succesfully completed......................................
2022-11-12 19:11:42,145:INFO:Initializing tune_model()
2022-11-12 19:11:42,145:INFO:tune_model(estimator=OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None), fold=10, round=4, n_iter=100, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, return_train_score=False, kwargs={})
2022-11-12 19:11:42,145:INFO:Checking exceptions
2022-11-12 19:11:42,145:INFO:Preparing display monitor
2022-11-12 19:11:42,158:INFO:Copying training dataset
2022-11-12 19:11:42,159:INFO:Checking base model
2022-11-12 19:11:42,159:INFO:Base model : Orthogonal Matching Pursuit
2022-11-12 19:11:42,165:INFO:Declaring metric variables
2022-11-12 19:11:42,170:INFO:Defining Hyperparameters
2022-11-12 19:11:42,277:INFO:Tuning with n_jobs=-1
2022-11-12 19:11:42,277:INFO:Initializing RandomizedSearchCV
2022-11-12 19:11:45,292:INFO:best_params: {'actual_estimator__normalize': False, 'actual_estimator__n_nonzero_coefs': 100, 'actual_estimator__fit_intercept': True}
2022-11-12 19:11:45,293:INFO:Hyperparameter search completed
2022-11-12 19:11:45,293:INFO:SubProcess create_model() called ==================================
2022-11-12 19:11:45,294:INFO:Initializing create_model()
2022-11-12 19:11:45,294:INFO:create_model(estimator=OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F93EA69888>, return_train_score=False, kwargs={'normalize': False, 'n_nonzero_coefs': 100, 'fit_intercept': True})
2022-11-12 19:11:45,294:INFO:Checking exceptions
2022-11-12 19:11:45,294:INFO:Importing libraries
2022-11-12 19:11:45,294:INFO:Copying training dataset
2022-11-12 19:11:45,295:INFO:Defining folds
2022-11-12 19:11:45,295:INFO:Declaring metric variables
2022-11-12 19:11:45,301:INFO:Importing untrained model
2022-11-12 19:11:45,302:INFO:Declaring custom model
2022-11-12 19:11:45,307:INFO:Orthogonal Matching Pursuit Imported succesfully
2022-11-12 19:11:45,320:INFO:Starting cross validation
2022-11-12 19:11:45,320:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:11:45,535:INFO:Calculating mean and std
2022-11-12 19:11:45,537:INFO:Creating metrics dataframe
2022-11-12 19:11:45,544:INFO:Finalizing model
2022-11-12 19:11:45,562:INFO:Uploading results into container
2022-11-12 19:11:45,562:INFO:Uploading model into container now
2022-11-12 19:11:45,562:INFO:create_model_container: 54
2022-11-12 19:11:45,562:INFO:master_model_container: 54
2022-11-12 19:11:45,563:INFO:display_container: 7
2022-11-12 19:11:45,563:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=100,
                          normalize=False, precompute='auto', tol=None)
2022-11-12 19:11:45,563:INFO:create_model() succesfully completed......................................
2022-11-12 19:11:45,672:INFO:SubProcess create_model() end ==================================
2022-11-12 19:11:45,681:INFO:create_model_container: 54
2022-11-12 19:11:45,681:INFO:master_model_container: 54
2022-11-12 19:11:45,681:INFO:display_container: 7
2022-11-12 19:11:45,681:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=100,
                          normalize=False, precompute='auto', tol=None)
2022-11-12 19:11:45,682:INFO:tune_model() succesfully completed......................................
2022-11-12 19:12:25,390:INFO:Initializing tune_model()
2022-11-12 19:12:25,390:INFO:tune_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), fold=10, round=4, n_iter=20, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, return_train_score=False, kwargs={})
2022-11-12 19:12:25,391:INFO:Checking exceptions
2022-11-12 19:12:25,391:INFO:Preparing display monitor
2022-11-12 19:12:25,405:INFO:Copying training dataset
2022-11-12 19:12:25,406:INFO:Checking base model
2022-11-12 19:12:25,406:INFO:Base model : Gradient Boosting Regressor
2022-11-12 19:12:25,413:INFO:Declaring metric variables
2022-11-12 19:12:25,418:INFO:Defining Hyperparameters
2022-11-12 19:12:25,532:INFO:Tuning with n_jobs=-1
2022-11-12 19:12:25,533:INFO:Initializing RandomizedSearchCV
2022-11-12 19:12:36,426:INFO:best_params: {'actual_estimator__subsample': 0.75, 'actual_estimator__n_estimators': 250, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 1, 'actual_estimator__min_impurity_decrease': 0.3, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 4, 'actual_estimator__learning_rate': 0.05}
2022-11-12 19:12:36,427:INFO:Hyperparameter search completed
2022-11-12 19:12:36,427:INFO:SubProcess create_model() called ==================================
2022-11-12 19:12:36,427:INFO:Initializing create_model()
2022-11-12 19:12:36,427:INFO:create_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F93E65CE08>, return_train_score=False, kwargs={'subsample': 0.75, 'n_estimators': 250, 'min_samples_split': 5, 'min_samples_leaf': 1, 'min_impurity_decrease': 0.3, 'max_features': 'log2', 'max_depth': 4, 'learning_rate': 0.05})
2022-11-12 19:12:36,427:INFO:Checking exceptions
2022-11-12 19:12:36,428:INFO:Importing libraries
2022-11-12 19:12:36,428:INFO:Copying training dataset
2022-11-12 19:12:36,428:INFO:Defining folds
2022-11-12 19:12:36,429:INFO:Declaring metric variables
2022-11-12 19:12:36,434:INFO:Importing untrained model
2022-11-12 19:12:36,434:INFO:Declaring custom model
2022-11-12 19:12:36,440:INFO:Gradient Boosting Regressor Imported succesfully
2022-11-12 19:12:36,452:INFO:Starting cross validation
2022-11-12 19:12:36,452:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:12:37,639:INFO:Calculating mean and std
2022-11-12 19:12:37,640:INFO:Creating metrics dataframe
2022-11-12 19:12:37,647:INFO:Finalizing model
2022-11-12 19:12:37,769:INFO:Uploading results into container
2022-11-12 19:12:37,769:INFO:Uploading model into container now
2022-11-12 19:12:37,770:INFO:create_model_container: 55
2022-11-12 19:12:37,770:INFO:master_model_container: 55
2022-11-12 19:12:37,770:INFO:display_container: 8
2022-11-12 19:12:37,770:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.05, loss='ls', max_depth=4,
                          max_features='log2', max_leaf_nodes=None,
                          min_impurity_decrease=0.3, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=5,
                          min_weight_fraction_leaf=0.0, n_estimators=250,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=0.75, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-12 19:12:37,770:INFO:create_model() succesfully completed......................................
2022-11-12 19:12:37,859:INFO:SubProcess create_model() end ==================================
2022-11-12 19:12:37,867:INFO:create_model_container: 55
2022-11-12 19:12:37,867:INFO:master_model_container: 55
2022-11-12 19:12:37,867:INFO:display_container: 8
2022-11-12 19:12:37,868:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.05, loss='ls', max_depth=4,
                          max_features='log2', max_leaf_nodes=None,
                          min_impurity_decrease=0.3, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=5,
                          min_weight_fraction_leaf=0.0, n_estimators=250,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=0.75, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-12 19:12:37,868:INFO:tune_model() succesfully completed......................................
2022-11-12 19:13:00,932:INFO:Initializing blend_models()
2022-11-12 19:13:00,932:INFO:blend_models(estimator_list=[GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.05, loss='ls', max_depth=4,
                          max_features='log2', max_leaf_nodes=None,
                          min_impurity_decrease=0.3, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=5,
                          min_weight_fraction_leaf=0.0, n_estimators=250,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=0.75, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), Ridge(alpha=9.94, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=8320, solver='auto', tol=0.001), OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=100,
                          normalize=False, precompute='auto', tol=None)], fold=None, round=4, choose_better=False, optimize=RMSE, method=auto, weights=None, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, display=None, return_train_score=False)
2022-11-12 19:13:00,932:INFO:Checking exceptions
2022-11-12 19:13:00,932:INFO:Preparing display monitor
2022-11-12 19:13:00,946:INFO:Importing libraries
2022-11-12 19:13:00,946:INFO:Copying training dataset
2022-11-12 19:13:00,952:INFO:Getting model names
2022-11-12 19:13:00,958:INFO:SubProcess create_model() called ==================================
2022-11-12 19:13:00,961:INFO:Initializing create_model()
2022-11-12 19:13:00,961:INFO:create_model(estimator=VotingRegressor(estimators=[('gbr',
                             GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0,
                                                       criterion='friedman_mse',
                                                       init=None,
                                                       learning_rate=0.05,
                                                       loss='ls', max_depth=4,
                                                       max_features='log2',
                                                       max_leaf_nodes=None,
                                                       min_impurity_decrease=0.3,
                                                       min_impurity_split=None,
                                                       min_samples_leaf=1,
                                                       min_samples_split=5,
                                                       min_weight_fraction_leaf=0.0,
                                                       n_estimators=250,
                                                       n_iter_no_chan...
                                                       subsample=0.75,
                                                       tol=0.0001,
                                                       validation_fraction=0.1,
                                                       verbose=0,
                                                       warm_start=False)),
                            ('ridge',
                             Ridge(alpha=9.94, copy_X=True, fit_intercept=True,
                                   max_iter=None, normalize=False,
                                   random_state=8320, solver='auto',
                                   tol=0.001)),
                            ('omp',
                             OrthogonalMatchingPursuit(fit_intercept=True,
                                                       n_nonzero_coefs=100,
                                                       normalize=False,
                                                       precompute='auto',
                                                       tol=None))],
                n_jobs=1, verbose=False, weights=None), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F932AB24C8>, return_train_score=False, kwargs={})
2022-11-12 19:13:00,961:INFO:Checking exceptions
2022-11-12 19:13:00,961:INFO:Importing libraries
2022-11-12 19:13:00,961:INFO:Copying training dataset
2022-11-12 19:13:00,963:INFO:Defining folds
2022-11-12 19:13:00,963:INFO:Declaring metric variables
2022-11-12 19:13:00,971:INFO:Importing untrained model
2022-11-12 19:13:00,971:INFO:Declaring custom model
2022-11-12 19:13:00,978:INFO:Voting Regressor Imported succesfully
2022-11-12 19:13:00,990:INFO:Starting cross validation
2022-11-12 19:13:00,990:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:13:02,988:INFO:Calculating mean and std
2022-11-12 19:13:02,989:INFO:Creating metrics dataframe
2022-11-12 19:13:02,997:INFO:Finalizing model
2022-11-12 19:13:03,140:INFO:Uploading results into container
2022-11-12 19:13:03,140:INFO:Uploading model into container now
2022-11-12 19:13:03,140:INFO:create_model_container: 56
2022-11-12 19:13:03,140:INFO:master_model_container: 56
2022-11-12 19:13:03,140:INFO:display_container: 9
2022-11-12 19:13:03,143:INFO:VotingRegressor(estimators=[('gbr',
                             GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0,
                                                       criterion='friedman_mse',
                                                       init=None,
                                                       learning_rate=0.05,
                                                       loss='ls', max_depth=4,
                                                       max_features='log2',
                                                       max_leaf_nodes=None,
                                                       min_impurity_decrease=0.3,
                                                       min_impurity_split=None,
                                                       min_samples_leaf=1,
                                                       min_samples_split=5,
                                                       min_weight_fraction_leaf=0.0,
                                                       n_estimators=250,
                                                       n_iter_no_chan...
                                                       subsample=0.75,
                                                       tol=0.0001,
                                                       validation_fraction=0.1,
                                                       verbose=0,
                                                       warm_start=False)),
                            ('ridge',
                             Ridge(alpha=9.94, copy_X=True, fit_intercept=True,
                                   max_iter=None, normalize=False,
                                   random_state=8320, solver='auto',
                                   tol=0.001)),
                            ('omp',
                             OrthogonalMatchingPursuit(fit_intercept=True,
                                                       n_nonzero_coefs=100,
                                                       normalize=False,
                                                       precompute='auto',
                                                       tol=None))],
                n_jobs=1, verbose=False, weights=None)
2022-11-12 19:13:03,143:INFO:create_model() succesfully completed......................................
2022-11-12 19:13:03,239:INFO:SubProcess create_model() end ==================================
2022-11-12 19:13:03,248:INFO:create_model_container: 56
2022-11-12 19:13:03,248:INFO:master_model_container: 56
2022-11-12 19:13:03,248:INFO:display_container: 9
2022-11-12 19:13:03,251:INFO:VotingRegressor(estimators=[('gbr',
                             GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0,
                                                       criterion='friedman_mse',
                                                       init=None,
                                                       learning_rate=0.05,
                                                       loss='ls', max_depth=4,
                                                       max_features='log2',
                                                       max_leaf_nodes=None,
                                                       min_impurity_decrease=0.3,
                                                       min_impurity_split=None,
                                                       min_samples_leaf=1,
                                                       min_samples_split=5,
                                                       min_weight_fraction_leaf=0.0,
                                                       n_estimators=250,
                                                       n_iter_no_chan...
                                                       subsample=0.75,
                                                       tol=0.0001,
                                                       validation_fraction=0.1,
                                                       verbose=0,
                                                       warm_start=False)),
                            ('ridge',
                             Ridge(alpha=9.94, copy_X=True, fit_intercept=True,
                                   max_iter=None, normalize=False,
                                   random_state=8320, solver='auto',
                                   tol=0.001)),
                            ('omp',
                             OrthogonalMatchingPursuit(fit_intercept=True,
                                                       n_nonzero_coefs=100,
                                                       normalize=False,
                                                       precompute='auto',
                                                       tol=None))],
                n_jobs=1, verbose=False, weights=None)
2022-11-12 19:13:03,251:INFO:blend_models() succesfully completed......................................
2022-11-12 19:13:40,487:INFO:Initializing stack_models()
2022-11-12 19:13:40,487:INFO:stack_models(estimator_list=[GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.05, loss='ls', max_depth=4,
                          max_features='log2', max_leaf_nodes=None,
                          min_impurity_decrease=0.3, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=5,
                          min_weight_fraction_leaf=0.0, n_estimators=250,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=0.75, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), Ridge(alpha=9.94, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=8320, solver='auto', tol=0.001), OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=100,
                          normalize=False, precompute='auto', tol=None)], meta_model=None, meta_model_fold=5, fold=None, round=4, method=auto, restack=True, choose_better=False, optimize=RMSE, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, display=None, return_train_score=False)
2022-11-12 19:13:40,487:INFO:Checking exceptions
2022-11-12 19:13:40,487:INFO:Defining meta model
2022-11-12 19:13:40,488:INFO:Preparing display monitor
2022-11-12 19:13:40,500:INFO:Copying training dataset
2022-11-12 19:13:40,506:INFO:Getting model names
2022-11-12 19:13:40,506:INFO:[('gbr', GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.05, loss='ls', max_depth=4,
                          max_features='log2', max_leaf_nodes=None,
                          min_impurity_decrease=0.3, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=5,
                          min_weight_fraction_leaf=0.0, n_estimators=250,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=0.75, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)), ('ridge', Ridge(alpha=9.94, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=8320, solver='auto', tol=0.001)), ('omp', OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=100,
                          normalize=False, precompute='auto', tol=None))]
2022-11-12 19:13:40,514:INFO:SubProcess create_model() called ==================================
2022-11-12 19:13:40,518:INFO:Initializing create_model()
2022-11-12 19:13:40,518:INFO:create_model(estimator=StackingRegressor(cv=5,
                  estimators=[('gbr',
                               GradientBoostingRegressor(alpha=0.9,
                                                         ccp_alpha=0.0,
                                                         criterion='friedman_mse',
                                                         init=None,
                                                         learning_rate=0.05,
                                                         loss='ls', max_depth=4,
                                                         max_features='log2',
                                                         max_leaf_nodes=None,
                                                         min_impurity_decrease=0.3,
                                                         min_impurity_split=None,
                                                         min_samples_leaf=1,
                                                         min_samples_split=5,
                                                         min_weight_fraction_leaf=0.0,
                                                         n_estimators=250,
                                                         n_iter_...
                               Ridge(alpha=9.94, copy_X=True,
                                     fit_intercept=True, max_iter=None,
                                     normalize=False, random_state=8320,
                                     solver='auto', tol=0.001)),
                              ('omp',
                               OrthogonalMatchingPursuit(fit_intercept=True,
                                                         n_nonzero_coefs=100,
                                                         normalize=False,
                                                         precompute='auto',
                                                         tol=None))],
                  final_estimator=LinearRegression(copy_X=True,
                                                   fit_intercept=True,
                                                   n_jobs=-1, normalize=False),
                  n_jobs=1, passthrough=True, verbose=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000001F932166048>, return_train_score=False, kwargs={})
2022-11-12 19:13:40,518:INFO:Checking exceptions
2022-11-12 19:13:40,518:INFO:Importing libraries
2022-11-12 19:13:40,518:INFO:Copying training dataset
2022-11-12 19:13:40,520:INFO:Defining folds
2022-11-12 19:13:40,520:INFO:Declaring metric variables
2022-11-12 19:13:40,526:INFO:Importing untrained model
2022-11-12 19:13:40,526:INFO:Declaring custom model
2022-11-12 19:13:40,534:INFO:Stacking Regressor Imported succesfully
2022-11-12 19:13:40,545:INFO:Starting cross validation
2022-11-12 19:13:40,545:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:13:52,384:INFO:Calculating mean and std
2022-11-12 19:13:52,385:INFO:Creating metrics dataframe
2022-11-12 19:13:52,391:INFO:Finalizing model
2022-11-12 19:13:53,625:INFO:Uploading results into container
2022-11-12 19:13:53,625:INFO:Uploading model into container now
2022-11-12 19:13:53,625:INFO:create_model_container: 57
2022-11-12 19:13:53,625:INFO:master_model_container: 57
2022-11-12 19:13:53,625:INFO:display_container: 10
2022-11-12 19:13:53,628:INFO:StackingRegressor(cv=5,
                  estimators=[('gbr',
                               GradientBoostingRegressor(alpha=0.9,
                                                         ccp_alpha=0.0,
                                                         criterion='friedman_mse',
                                                         init=None,
                                                         learning_rate=0.05,
                                                         loss='ls', max_depth=4,
                                                         max_features='log2',
                                                         max_leaf_nodes=None,
                                                         min_impurity_decrease=0.3,
                                                         min_impurity_split=None,
                                                         min_samples_leaf=1,
                                                         min_samples_split=5,
                                                         min_weight_fraction_leaf=0.0,
                                                         n_estimators=250,
                                                         n_iter_...
                               Ridge(alpha=9.94, copy_X=True,
                                     fit_intercept=True, max_iter=None,
                                     normalize=False, random_state=8320,
                                     solver='auto', tol=0.001)),
                              ('omp',
                               OrthogonalMatchingPursuit(fit_intercept=True,
                                                         n_nonzero_coefs=100,
                                                         normalize=False,
                                                         precompute='auto',
                                                         tol=None))],
                  final_estimator=LinearRegression(copy_X=True,
                                                   fit_intercept=True,
                                                   n_jobs=-1, normalize=False),
                  n_jobs=1, passthrough=True, verbose=0)
2022-11-12 19:13:53,628:INFO:create_model() succesfully completed......................................
2022-11-12 19:13:53,713:INFO:SubProcess create_model() end ==================================
2022-11-12 19:13:53,722:INFO:create_model_container: 57
2022-11-12 19:13:53,722:INFO:master_model_container: 57
2022-11-12 19:13:53,722:INFO:display_container: 10
2022-11-12 19:13:53,725:INFO:StackingRegressor(cv=5,
                  estimators=[('gbr',
                               GradientBoostingRegressor(alpha=0.9,
                                                         ccp_alpha=0.0,
                                                         criterion='friedman_mse',
                                                         init=None,
                                                         learning_rate=0.05,
                                                         loss='ls', max_depth=4,
                                                         max_features='log2',
                                                         max_leaf_nodes=None,
                                                         min_impurity_decrease=0.3,
                                                         min_impurity_split=None,
                                                         min_samples_leaf=1,
                                                         min_samples_split=5,
                                                         min_weight_fraction_leaf=0.0,
                                                         n_estimators=250,
                                                         n_iter_...
                               Ridge(alpha=9.94, copy_X=True,
                                     fit_intercept=True, max_iter=None,
                                     normalize=False, random_state=8320,
                                     solver='auto', tol=0.001)),
                              ('omp',
                               OrthogonalMatchingPursuit(fit_intercept=True,
                                                         n_nonzero_coefs=100,
                                                         normalize=False,
                                                         precompute='auto',
                                                         tol=None))],
                  final_estimator=LinearRegression(copy_X=True,
                                                   fit_intercept=True,
                                                   n_jobs=-1, normalize=False),
                  n_jobs=1, passthrough=True, verbose=0)
2022-11-12 19:13:53,725:INFO:stack_models() succesfully completed......................................
2022-11-12 19:16:52,301:INFO:Initializing plot_model()
2022-11-12 19:16:52,301:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.05, loss='ls', max_depth=4,
                          max_features='log2', max_leaf_nodes=None,
                          min_impurity_decrease=0.3, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=5,
                          min_weight_fraction_leaf=0.0, n_estimators=250,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=8320, subsample=0.75, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=feature, plot_kwargs=None, save=False, scale=1, system=True)
2022-11-12 19:16:52,301:INFO:Checking exceptions
2022-11-12 19:16:52,303:INFO:Preparing display monitor
2022-11-12 19:16:52,309:INFO:Preloading libraries
2022-11-12 19:16:52,327:INFO:Copying training dataset
2022-11-12 19:16:52,328:INFO:Copying test dataset
2022-11-12 19:16:52,328:INFO:Plot type: feature
2022-11-12 19:16:52,333:WARNING:No coef_ found. Trying feature_importances_
2022-11-12 19:16:52,481:INFO:Visual Rendered Successfully
2022-11-12 19:16:52,572:INFO:plot_model() succesfully completed......................................
2022-11-12 19:17:40,136:INFO:Initializing plot_model()
2022-11-12 19:17:40,136:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=Ridge(alpha=9.94, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=8320, solver='auto', tol=0.001), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=feature, plot_kwargs=None, save=False, scale=1, system=True)
2022-11-12 19:17:40,137:INFO:Checking exceptions
2022-11-12 19:17:40,137:INFO:Preparing display monitor
2022-11-12 19:17:40,142:INFO:Preloading libraries
2022-11-12 19:17:40,143:INFO:Copying training dataset
2022-11-12 19:17:40,143:INFO:Copying test dataset
2022-11-12 19:17:40,144:INFO:Plot type: feature
2022-11-12 19:17:40,244:INFO:Visual Rendered Successfully
2022-11-12 19:17:40,341:INFO:plot_model() succesfully completed......................................
2022-11-12 19:17:55,675:INFO:Initializing plot_model()
2022-11-12 19:17:55,675:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=100,
                          normalize=False, precompute='auto', tol=None), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=feature, plot_kwargs=None, save=False, scale=1, system=True)
2022-11-12 19:17:55,675:INFO:Checking exceptions
2022-11-12 19:17:55,675:INFO:Preparing display monitor
2022-11-12 19:17:55,681:INFO:Preloading libraries
2022-11-12 19:17:55,681:INFO:Copying training dataset
2022-11-12 19:17:55,682:INFO:Copying test dataset
2022-11-12 19:17:55,682:INFO:Plot type: feature
2022-11-12 19:17:55,783:INFO:Visual Rendered Successfully
2022-11-12 19:17:55,876:INFO:plot_model() succesfully completed......................................
2022-11-12 19:18:55,769:INFO:Initializing predict_model()
2022-11-12 19:18:55,769:INFO:predict_model(estimator=VotingRegressor(estimators=[('gbr',
                             GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0,
                                                       criterion='friedman_mse',
                                                       init=None,
                                                       learning_rate=0.05,
                                                       loss='ls', max_depth=4,
                                                       max_features='log2',
                                                       max_leaf_nodes=None,
                                                       min_impurity_decrease=0.3,
                                                       min_impurity_split=None,
                                                       min_samples_leaf=1,
                                                       min_samples_split=5,
                                                       min_weight_fraction_leaf=0.0,
                                                       n_estimators=250,
                                                       n_iter_no_chan...
                                                       subsample=0.75,
                                                       tol=0.0001,
                                                       validation_fraction=0.1,
                                                       verbose=0,
                                                       warm_start=False)),
                            ('ridge',
                             Ridge(alpha=9.94, copy_X=True, fit_intercept=True,
                                   max_iter=None, normalize=False,
                                   random_state=8320, solver='auto',
                                   tol=0.001)),
                            ('omp',
                             OrthogonalMatchingPursuit(fit_intercept=True,
                                                       n_nonzero_coefs=100,
                                                       normalize=False,
                                                       precompute='auto',
                                                       tol=None))],
                n_jobs=1, verbose=False, weights=None), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-11-12 19:18:55,770:INFO:Checking exceptions
2022-11-12 19:18:55,770:INFO:Preloading libraries
2022-11-12 19:18:55,770:INFO:Preparing display monitor
2022-11-12 19:19:46,396:INFO:Initializing get_config()
2022-11-12 19:19:46,396:INFO:get_config(variable=data_before_preprocess)
2022-11-12 19:19:46,404:INFO:Global variable: data_before_preprocess returned as         Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \
0        1          60       RL         65.0     8450   Pave   NaN      Reg   
1        2          20       RL         80.0     9600   Pave   NaN      Reg   
2        3          60       RL         68.0    11250   Pave   NaN      IR1   
3        4          70       RL         60.0     9550   Pave   NaN      IR1   
4        5          60       RL         84.0    14260   Pave   NaN      IR1   
...    ...         ...      ...          ...      ...    ...   ...      ...   
1455  1456          60       RL         62.0     7917   Pave   NaN      Reg   
1456  1457          20       RL         85.0    13175   Pave   NaN      Reg   
1457  1458          70       RL         66.0     9042   Pave   NaN      Reg   
1458  1459          20       RL         68.0     9717   Pave   NaN      Reg   
1459  1460          20       RL         75.0     9937   Pave   NaN      Reg   

     LandContour Utilities  ... PoolArea PoolQC  Fence MiscFeature MiscVal  \
0            Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
1            Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
2            Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
3            Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
4            Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
...          ...       ...  ...      ...    ...    ...         ...     ...   
1455         Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
1456         Lvl    AllPub  ...        0    NaN  MnPrv         NaN       0   
1457         Lvl    AllPub  ...        0    NaN  GdPrv        Shed    2500   
1458         Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
1459         Lvl    AllPub  ...        0    NaN    NaN         NaN       0   

     MoSold YrSold  SaleType  SaleCondition  SalePrice  
0         2   2008        WD         Normal     208500  
1         5   2007        WD         Normal     181500  
2         9   2008        WD         Normal     223500  
3         2   2006        WD        Abnorml     140000  
4        12   2008        WD         Normal     250000  
...     ...    ...       ...            ...        ...  
1455      8   2007        WD         Normal     175000  
1456      2   2010        WD         Normal     210000  
1457      5   2010        WD         Normal     266500  
1458      4   2010        WD         Normal     142125  
1459      6   2008        WD         Normal     147500  

[1460 rows x 81 columns]
2022-11-12 19:19:46,404:INFO:get_config() succesfully completed......................................
2022-11-12 19:19:46,405:INFO:Initializing get_config()
2022-11-12 19:19:46,405:INFO:get_config(variable=prep_pipe)
2022-11-12 19:19:46,408:INFO:Global variable: prep_pipe returned as Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=['Id'],
                                      ml_usecase='regression',
                                      numerical_features=[], target='SalePrice',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_st...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='SalePrice')),
                ('fix_perfect', Remove_100(target='SalePrice')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-11-12 19:19:46,408:INFO:get_config() succesfully completed......................................
2022-11-12 19:19:46,408:INFO:Initializing get_config()
2022-11-12 19:19:46,408:INFO:get_config(variable=prep_pipe)
2022-11-12 19:19:46,411:INFO:Global variable: prep_pipe returned as Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=['Id'],
                                      ml_usecase='regression',
                                      numerical_features=[], target='SalePrice',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_st...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='SalePrice')),
                ('fix_perfect', Remove_100(target='SalePrice')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-11-12 19:19:46,411:INFO:get_config() succesfully completed......................................
2022-11-12 19:19:46,411:INFO:Initializing get_config()
2022-11-12 19:19:46,412:INFO:get_config(variable=prep_pipe)
2022-11-12 19:19:46,415:INFO:Global variable: prep_pipe returned as Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=['Id'],
                                      ml_usecase='regression',
                                      numerical_features=[], target='SalePrice',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_st...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='SalePrice')),
                ('fix_perfect', Remove_100(target='SalePrice')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-11-12 19:19:46,415:INFO:get_config() succesfully completed......................................
2022-11-12 19:20:03,073:INFO:Initializing finalize_model()
2022-11-12 19:20:03,074:INFO:finalize_model(estimator=VotingRegressor(estimators=[('gbr',
                             GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0,
                                                       criterion='friedman_mse',
                                                       init=None,
                                                       learning_rate=0.05,
                                                       loss='ls', max_depth=4,
                                                       max_features='log2',
                                                       max_leaf_nodes=None,
                                                       min_impurity_decrease=0.3,
                                                       min_impurity_split=None,
                                                       min_samples_leaf=1,
                                                       min_samples_split=5,
                                                       min_weight_fraction_leaf=0.0,
                                                       n_estimators=250,
                                                       n_iter_no_chan...
                                                       subsample=0.75,
                                                       tol=0.0001,
                                                       validation_fraction=0.1,
                                                       verbose=0,
                                                       warm_start=False)),
                            ('ridge',
                             Ridge(alpha=9.94, copy_X=True, fit_intercept=True,
                                   max_iter=None, normalize=False,
                                   random_state=8320, solver='auto',
                                   tol=0.001)),
                            ('omp',
                             OrthogonalMatchingPursuit(fit_intercept=True,
                                                       n_nonzero_coefs=100,
                                                       normalize=False,
                                                       precompute='auto',
                                                       tol=None))],
                n_jobs=1, verbose=False, weights=None), fit_kwargs=None, groups=None, model_only=True, display=None, experiment_custom_tags=None, return_train_score=False)
2022-11-12 19:20:03,077:INFO:Finalizing VotingRegressor(estimators=[('gbr',
                             GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0,
                                                       criterion='friedman_mse',
                                                       init=None,
                                                       learning_rate=0.05,
                                                       loss='ls', max_depth=4,
                                                       max_features='log2',
                                                       max_leaf_nodes=None,
                                                       min_impurity_decrease=0.3,
                                                       min_impurity_split=None,
                                                       min_samples_leaf=1,
                                                       min_samples_split=5,
                                                       min_weight_fraction_leaf=0.0,
                                                       n_estimators=250,
                                                       n_iter_no_chan...
                                                       subsample=0.75,
                                                       tol=0.0001,
                                                       validation_fraction=0.1,
                                                       verbose=0,
                                                       warm_start=False)),
                            ('ridge',
                             Ridge(alpha=9.94, copy_X=True, fit_intercept=True,
                                   max_iter=None, normalize=False,
                                   random_state=8320, solver='auto',
                                   tol=0.001)),
                            ('omp',
                             OrthogonalMatchingPursuit(fit_intercept=True,
                                                       n_nonzero_coefs=100,
                                                       normalize=False,
                                                       precompute='auto',
                                                       tol=None))],
                n_jobs=1, verbose=False, weights=None)
2022-11-12 19:20:03,080:INFO:Initializing create_model()
2022-11-12 19:20:03,080:INFO:create_model(estimator=VotingRegressor(estimators=[('gbr',
                             GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0,
                                                       criterion='friedman_mse',
                                                       init=None,
                                                       learning_rate=0.05,
                                                       loss='ls', max_depth=4,
                                                       max_features='log2',
                                                       max_leaf_nodes=None,
                                                       min_impurity_decrease=0.3,
                                                       min_impurity_split=None,
                                                       min_samples_leaf=1,
                                                       min_samples_split=5,
                                                       min_weight_fraction_leaf=0.0,
                                                       n_estimators=250,
                                                       n_iter_no_chan...
                                                       subsample=0.75,
                                                       tol=0.0001,
                                                       validation_fraction=0.1,
                                                       verbose=0,
                                                       warm_start=False)),
                            ('ridge',
                             Ridge(alpha=9.94, copy_X=True, fit_intercept=True,
                                   max_iter=None, normalize=False,
                                   random_state=8320, solver='auto',
                                   tol=0.001)),
                            ('omp',
                             OrthogonalMatchingPursuit(fit_intercept=True,
                                                       n_nonzero_coefs=100,
                                                       normalize=False,
                                                       precompute='auto',
                                                       tol=None))],
                n_jobs=1, verbose=False, weights=None), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=False, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-11-12 19:20:03,080:INFO:Checking exceptions
2022-11-12 19:20:03,080:INFO:Importing libraries
2022-11-12 19:20:03,080:INFO:Copying training dataset
2022-11-12 19:20:03,081:INFO:Defining folds
2022-11-12 19:20:03,081:INFO:Declaring metric variables
2022-11-12 19:20:03,081:INFO:Importing untrained model
2022-11-12 19:20:03,081:INFO:Declaring custom model
2022-11-12 19:20:03,082:INFO:Voting Regressor Imported succesfully
2022-11-12 19:20:03,083:INFO:Starting cross validation
2022-11-12 19:20:03,083:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 19:20:05,347:INFO:Calculating mean and std
2022-11-12 19:20:05,347:INFO:Creating metrics dataframe
2022-11-12 19:20:05,349:INFO:Finalizing model
2022-11-12 19:20:05,630:INFO:create_model_container: 57
2022-11-12 19:20:05,630:INFO:master_model_container: 57
2022-11-12 19:20:05,630:INFO:display_container: 11
2022-11-12 19:20:05,633:INFO:VotingRegressor(estimators=[('gbr',
                             GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0,
                                                       criterion='friedman_mse',
                                                       init=None,
                                                       learning_rate=0.05,
                                                       loss='ls', max_depth=4,
                                                       max_features='log2',
                                                       max_leaf_nodes=None,
                                                       min_impurity_decrease=0.3,
                                                       min_impurity_split=None,
                                                       min_samples_leaf=1,
                                                       min_samples_split=5,
                                                       min_weight_fraction_leaf=0.0,
                                                       n_estimators=250,
                                                       n_iter_no_chan...
                                                       subsample=0.75,
                                                       tol=0.0001,
                                                       validation_fraction=0.1,
                                                       verbose=0,
                                                       warm_start=False)),
                            ('ridge',
                             Ridge(alpha=9.94, copy_X=True, fit_intercept=True,
                                   max_iter=None, normalize=False,
                                   random_state=8320, solver='auto',
                                   tol=0.001)),
                            ('omp',
                             OrthogonalMatchingPursuit(fit_intercept=True,
                                                       n_nonzero_coefs=100,
                                                       normalize=False,
                                                       precompute='auto',
                                                       tol=None))],
                n_jobs=1, verbose=False, weights=None)
2022-11-12 19:20:05,633:INFO:create_model() succesfully completed......................................
2022-11-12 19:20:05,722:INFO:create_model_container: 57
2022-11-12 19:20:05,722:INFO:master_model_container: 57
2022-11-12 19:20:05,722:INFO:display_container: 10
2022-11-12 19:20:05,725:INFO:VotingRegressor(estimators=[('gbr',
                             GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0,
                                                       criterion='friedman_mse',
                                                       init=None,
                                                       learning_rate=0.05,
                                                       loss='ls', max_depth=4,
                                                       max_features='log2',
                                                       max_leaf_nodes=None,
                                                       min_impurity_decrease=0.3,
                                                       min_impurity_split=None,
                                                       min_samples_leaf=1,
                                                       min_samples_split=5,
                                                       min_weight_fraction_leaf=0.0,
                                                       n_estimators=250,
                                                       n_iter_no_chan...
                                                       subsample=0.75,
                                                       tol=0.0001,
                                                       validation_fraction=0.1,
                                                       verbose=0,
                                                       warm_start=False)),
                            ('ridge',
                             Ridge(alpha=9.94, copy_X=True, fit_intercept=True,
                                   max_iter=None, normalize=False,
                                   random_state=8320, solver='auto',
                                   tol=0.001)),
                            ('omp',
                             OrthogonalMatchingPursuit(fit_intercept=True,
                                                       n_nonzero_coefs=100,
                                                       normalize=False,
                                                       precompute='auto',
                                                       tol=None))],
                n_jobs=1, verbose=False, weights=None)
2022-11-12 19:20:05,725:INFO:finalize_model() succesfully completed......................................
2022-11-12 19:20:11,991:INFO:Initializing get_config()
2022-11-12 19:20:11,991:INFO:get_config(variable=data_before_preprocess)
2022-11-12 19:20:11,998:INFO:Global variable: data_before_preprocess returned as         Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \
0        1          60       RL         65.0     8450   Pave   NaN      Reg   
1        2          20       RL         80.0     9600   Pave   NaN      Reg   
2        3          60       RL         68.0    11250   Pave   NaN      IR1   
3        4          70       RL         60.0     9550   Pave   NaN      IR1   
4        5          60       RL         84.0    14260   Pave   NaN      IR1   
...    ...         ...      ...          ...      ...    ...   ...      ...   
1455  1456          60       RL         62.0     7917   Pave   NaN      Reg   
1456  1457          20       RL         85.0    13175   Pave   NaN      Reg   
1457  1458          70       RL         66.0     9042   Pave   NaN      Reg   
1458  1459          20       RL         68.0     9717   Pave   NaN      Reg   
1459  1460          20       RL         75.0     9937   Pave   NaN      Reg   

     LandContour Utilities  ... PoolArea PoolQC  Fence MiscFeature MiscVal  \
0            Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
1            Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
2            Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
3            Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
4            Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
...          ...       ...  ...      ...    ...    ...         ...     ...   
1455         Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
1456         Lvl    AllPub  ...        0    NaN  MnPrv         NaN       0   
1457         Lvl    AllPub  ...        0    NaN  GdPrv        Shed    2500   
1458         Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
1459         Lvl    AllPub  ...        0    NaN    NaN         NaN       0   

     MoSold YrSold  SaleType  SaleCondition  SalePrice  
0         2   2008        WD         Normal     208500  
1         5   2007        WD         Normal     181500  
2         9   2008        WD         Normal     223500  
3         2   2006        WD        Abnorml     140000  
4        12   2008        WD         Normal     250000  
...     ...    ...       ...            ...        ...  
1455      8   2007        WD         Normal     175000  
1456      2   2010        WD         Normal     210000  
1457      5   2010        WD         Normal     266500  
1458      4   2010        WD         Normal     142125  
1459      6   2008        WD         Normal     147500  

[1460 rows x 81 columns]
2022-11-12 19:20:11,998:INFO:get_config() succesfully completed......................................
2022-11-12 19:20:11,999:INFO:Initializing get_config()
2022-11-12 19:20:11,999:INFO:get_config(variable=prep_pipe)
2022-11-12 19:20:12,002:INFO:Global variable: prep_pipe returned as Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=['Id'],
                                      ml_usecase='regression',
                                      numerical_features=[], target='SalePrice',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_st...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='SalePrice')),
                ('fix_perfect', Remove_100(target='SalePrice')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-11-12 19:20:12,002:INFO:get_config() succesfully completed......................................
2022-11-12 19:20:12,002:INFO:Initializing get_config()
2022-11-12 19:20:12,002:INFO:get_config(variable=prep_pipe)
2022-11-12 19:20:12,006:INFO:Global variable: prep_pipe returned as Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=['Id'],
                                      ml_usecase='regression',
                                      numerical_features=[], target='SalePrice',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_st...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='SalePrice')),
                ('fix_perfect', Remove_100(target='SalePrice')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-11-12 19:20:12,006:INFO:get_config() succesfully completed......................................
2022-11-12 19:20:12,006:INFO:Initializing get_config()
2022-11-12 19:20:12,006:INFO:get_config(variable=prep_pipe)
2022-11-12 19:20:12,009:INFO:Global variable: prep_pipe returned as Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=['Id'],
                                      ml_usecase='regression',
                                      numerical_features=[], target='SalePrice',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_st...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='SalePrice')),
                ('fix_perfect', Remove_100(target='SalePrice')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-11-12 19:20:12,009:INFO:get_config() succesfully completed......................................
2022-11-12 19:46:52,482:INFO:PyCaret Supervised Module
2022-11-12 19:46:52,482:INFO:ML Usecase: regression
2022-11-12 19:46:52,482:INFO:version 2.3.10
2022-11-12 19:46:52,482:INFO:Initializing setup()
2022-11-12 19:46:52,482:INFO:setup(target=SalePrice, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=True, custom_pipeline=None, html=True, session_id=1, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-11-12 19:46:52,482:INFO:Checking environment
2022-11-12 19:46:52,482:INFO:python_version: 3.7.8
2022-11-12 19:46:52,482:INFO:python_build: ('tags/v3.7.8:4b47a5b6ba', 'Jun 28 2020 08:53:46')
2022-11-12 19:46:52,482:INFO:machine: AMD64
2022-11-12 19:46:52,482:INFO:platform: Windows-10-10.0.19041-SP0
2022-11-12 19:46:52,487:INFO:Memory: svmem(total=17090736128, available=4456361984, percent=73.9, used=12634374144, free=4456361984)
2022-11-12 19:46:52,487:INFO:Physical Core: 8
2022-11-12 19:46:52,488:INFO:Logical Core: 16
2022-11-12 19:46:52,488:INFO:Checking libraries
2022-11-12 19:46:52,488:INFO:pd==1.3.5
2022-11-12 19:46:52,488:INFO:numpy==1.19.5
2022-11-12 19:46:52,488:INFO:sklearn==0.23.2
2022-11-12 19:46:52,488:INFO:lightgbm==3.3.3
2022-11-12 19:46:52,488:WARNING:catboost not found
2022-11-12 19:46:52,489:WARNING:xgboost not found
2022-11-12 19:46:52,489:INFO:mlflow==1.30.0
2022-11-12 19:46:52,489:INFO:Checking Exceptions
2022-11-12 19:46:52,489:INFO:Declaring global variables
2022-11-12 19:46:52,489:INFO:USI: f37d
2022-11-12 19:46:52,489:INFO:pycaret_globals: {'fold_param', '_all_metrics', 'fix_imbalance_param', 'target_param', 'USI', 'fold_shuffle_param', 'fold_groups_param_full', '_ml_usecase', 'stratify_param', 'X_train', 'iterative_imputation_iters_param', 'X', 'display_container', 'X_test', '_all_models', 'seed', 'create_model_container', 'transform_target_method_param', '_internal_pipeline', 'dashboard_logger', 'fix_imbalance_method_param', 'fold_generator', '_available_plots', 'fold_groups_param', 'exp_name_log', 'pycaret_globals', 'n_jobs_param', 'y_test', '_gpu_n_jobs_param', 'gpu_param', 'experiment__', '_all_models_internal', 'imputation_regressor', 'y', 'logging_param', 'data_before_preprocess', 'y_train', 'prep_pipe', 'log_plots_param', 'html_param', 'master_model_container', 'imputation_classifier', 'transform_target_param'}
2022-11-12 19:46:52,489:INFO:Preparing display monitor
2022-11-12 19:46:52,489:INFO:Preparing display monitor
2022-11-12 19:46:52,500:INFO:Importing libraries
2022-11-12 19:46:52,500:INFO:Copying data for preprocessing
2022-11-12 19:46:52,507:INFO:Declaring preprocessing parameters
2022-11-12 19:46:52,507:WARNING:cuML not found
2022-11-12 19:46:52,507:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.3.3
2022-11-12 19:46:52,509:INFO:Creating preprocessing pipeline
2022-11-12 19:46:52,533:INFO:Preprocessing pipeline created successfully
2022-11-12 19:46:52,533:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-11-12 19:46:52,533:INFO:Creating global containers
2022-11-12 19:46:52,534:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-11-12 19:59:32,117:INFO:PyCaret Supervised Module
2022-11-12 19:59:32,118:INFO:ML Usecase: regression
2022-11-12 19:59:32,118:INFO:version 2.3.10
2022-11-12 19:59:32,118:INFO:Initializing setup()
2022-11-12 19:59:32,118:INFO:setup(target=SalePrice, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=True, custom_pipeline=None, html=True, session_id=42, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-11-12 19:59:32,118:INFO:Checking environment
2022-11-12 19:59:32,118:INFO:python_version: 3.7.8
2022-11-12 19:59:32,118:INFO:python_build: ('tags/v3.7.8:4b47a5b6ba', 'Jun 28 2020 08:53:46')
2022-11-12 19:59:32,118:INFO:machine: AMD64
2022-11-12 19:59:32,118:INFO:platform: Windows-10-10.0.19041-SP0
2022-11-12 19:59:32,124:INFO:Memory: svmem(total=17090736128, available=3826262016, percent=77.6, used=13264474112, free=3826262016)
2022-11-12 19:59:32,124:INFO:Physical Core: 8
2022-11-12 19:59:32,124:INFO:Logical Core: 16
2022-11-12 19:59:32,124:INFO:Checking libraries
2022-11-12 19:59:32,124:INFO:pd==1.3.5
2022-11-12 19:59:32,124:INFO:numpy==1.19.5
2022-11-12 19:59:32,124:INFO:sklearn==0.23.2
2022-11-12 19:59:32,124:INFO:lightgbm==3.3.3
2022-11-12 19:59:32,125:WARNING:catboost not found
2022-11-12 19:59:32,125:WARNING:xgboost not found
2022-11-12 19:59:32,125:INFO:mlflow==1.30.0
2022-11-12 19:59:32,125:INFO:Checking Exceptions
2022-11-12 19:59:32,125:INFO:Declaring global variables
2022-11-12 19:59:32,125:INFO:USI: b809
2022-11-12 19:59:32,125:INFO:pycaret_globals: {'y_test', '_ml_usecase', 'fold_groups_param_full', '_internal_pipeline', 'imputation_classifier', 'seed', 'X', 'logging_param', 'html_param', 'log_plots_param', '_all_models_internal', 'USI', 'fix_imbalance_method_param', 'n_jobs_param', 'X_test', 'create_model_container', 'gpu_param', '_gpu_n_jobs_param', 'data_before_preprocess', 'fold_generator', 'fold_groups_param', 'prep_pipe', '_all_metrics', 'stratify_param', 'transform_target_param', 'fix_imbalance_param', 'X_train', 'y_train', 'display_container', 'fold_param', 'transform_target_method_param', 'master_model_container', 'experiment__', '_all_models', 'target_param', '_available_plots', 'fold_shuffle_param', 'y', 'exp_name_log', 'imputation_regressor', 'iterative_imputation_iters_param', 'dashboard_logger', 'pycaret_globals'}
2022-11-12 19:59:32,125:INFO:Preparing display monitor
2022-11-12 19:59:32,125:INFO:Preparing display monitor
2022-11-12 19:59:32,136:INFO:Importing libraries
2022-11-12 19:59:32,136:INFO:Copying data for preprocessing
2022-11-12 19:59:32,142:INFO:Declaring preprocessing parameters
2022-11-12 19:59:32,143:WARNING:cuML not found
2022-11-12 19:59:32,143:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.3.3
2022-11-12 19:59:32,145:INFO:Creating preprocessing pipeline
2022-11-12 19:59:32,169:INFO:Preprocessing pipeline created successfully
2022-11-12 19:59:32,170:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-11-12 19:59:32,170:INFO:Creating global containers
2022-11-12 19:59:32,171:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-11-12 19:59:32,835:WARNING:Couldn't import cuml.linear_model.LinearRegression
2022-11-12 19:59:32,836:WARNING:Couldn't import cuml.linear_model.Lasso
2022-11-12 19:59:32,841:WARNING:Couldn't import cuml.linear_model.Ridge
2022-11-12 19:59:32,845:WARNING:Couldn't import cuml.linear_model.ElasticNet
2022-11-12 19:59:32,898:WARNING:Couldn't import cuml.svm.SVR
2022-11-12 19:59:32,940:WARNING:Couldn't import cuml.neighbors.KNeighborsRegressor
2022-11-12 19:59:32,941:WARNING:Couldn't import cuml.ensemble
2022-11-12 19:59:32,942:WARNING:Couldn't import xgboost.XGBRegressor
2022-11-12 19:59:33,189:WARNING:Couldn't import catboost.CatBoostRegressor
2022-11-12 19:59:33,190:WARNING:Couldn't import cuml.linear_model.LinearRegression
2022-11-12 19:59:33,191:WARNING:Couldn't import cuml.linear_model.Lasso
2022-11-12 19:59:33,197:WARNING:Couldn't import cuml.linear_model.Ridge
2022-11-12 19:59:33,203:WARNING:Couldn't import cuml.linear_model.ElasticNet
2022-11-12 19:59:33,272:WARNING:Couldn't import cuml.svm.SVR
2022-11-12 19:59:33,319:WARNING:Couldn't import cuml.neighbors.KNeighborsRegressor
2022-11-12 19:59:33,320:WARNING:Couldn't import cuml.ensemble
2022-11-12 19:59:33,320:WARNING:Couldn't import xgboost.XGBRegressor
2022-11-12 19:59:33,441:WARNING:Couldn't import catboost.CatBoostRegressor
2022-11-12 19:59:33,441:INFO:Creating grid variables
2022-11-12 19:59:33,455:INFO:create_model_container: 0
2022-11-12 19:59:33,455:INFO:master_model_container: 0
2022-11-12 19:59:33,456:INFO:display_container: 1
2022-11-12 19:59:33,461:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=['Id'],
                                      ml_usecase='regression',
                                      numerical_features=[], target='SalePrice',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_st...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='SalePrice')),
                ('fix_perfect', Remove_100(target='SalePrice')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-11-12 19:59:33,461:INFO:setup() succesfully completed......................................
2022-11-12 20:04:58,933:INFO:PyCaret Supervised Module
2022-11-12 20:04:58,934:INFO:ML Usecase: regression
2022-11-12 20:04:58,934:INFO:version 2.3.10
2022-11-12 20:04:58,934:INFO:Initializing setup()
2022-11-12 20:04:58,934:INFO:setup(target=SalePrice, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=True, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-11-12 20:04:58,934:INFO:Checking environment
2022-11-12 20:04:58,934:INFO:python_version: 3.7.8
2022-11-12 20:04:58,934:INFO:python_build: ('tags/v3.7.8:4b47a5b6ba', 'Jun 28 2020 08:53:46')
2022-11-12 20:04:58,934:INFO:machine: AMD64
2022-11-12 20:04:58,934:INFO:platform: Windows-10-10.0.19041-SP0
2022-11-12 20:04:58,939:INFO:Memory: svmem(total=17090736128, available=3872751616, percent=77.3, used=13217984512, free=3872751616)
2022-11-12 20:04:58,939:INFO:Physical Core: 8
2022-11-12 20:04:58,939:INFO:Logical Core: 16
2022-11-12 20:04:58,939:INFO:Checking libraries
2022-11-12 20:04:58,939:INFO:pd==1.3.5
2022-11-12 20:04:58,939:INFO:numpy==1.19.5
2022-11-12 20:04:58,939:INFO:sklearn==0.23.2
2022-11-12 20:04:58,940:INFO:lightgbm==3.3.3
2022-11-12 20:04:58,940:WARNING:catboost not found
2022-11-12 20:04:58,941:WARNING:xgboost not found
2022-11-12 20:04:58,941:INFO:mlflow==1.30.0
2022-11-12 20:04:58,941:INFO:Checking Exceptions
2022-11-12 20:04:58,941:INFO:Declaring global variables
2022-11-12 20:04:58,941:INFO:USI: 316a
2022-11-12 20:04:58,941:INFO:pycaret_globals: {'transform_target_method_param', 'data_before_preprocess', 'iterative_imputation_iters_param', 'fix_imbalance_param', 'y_test', 'master_model_container', 'exp_name_log', 'experiment__', 'fix_imbalance_method_param', 'gpu_param', 'stratify_param', 'y', 'USI', '_available_plots', 'fold_generator', 'X', 'y_train', 'pycaret_globals', 'transform_target_param', '_all_metrics', 'fold_param', 'create_model_container', 'X_test', 'prep_pipe', '_all_models_internal', 'log_plots_param', 'dashboard_logger', 'fold_groups_param_full', 'X_train', 'seed', '_ml_usecase', '_all_models', 'html_param', 'imputation_regressor', '_internal_pipeline', 'logging_param', 'fold_shuffle_param', 'target_param', 'n_jobs_param', '_gpu_n_jobs_param', 'imputation_classifier', 'fold_groups_param', 'display_container'}
2022-11-12 20:04:58,941:INFO:Preparing display monitor
2022-11-12 20:04:58,941:INFO:Preparing display monitor
2022-11-12 20:04:58,951:INFO:Importing libraries
2022-11-12 20:04:58,951:INFO:Copying data for preprocessing
2022-11-12 20:04:58,958:INFO:Declaring preprocessing parameters
2022-11-12 20:04:58,959:WARNING:cuML not found
2022-11-12 20:04:58,959:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.3.3
2022-11-12 20:04:58,960:INFO:Creating preprocessing pipeline
2022-11-12 20:04:58,985:INFO:Preprocessing pipeline created successfully
2022-11-12 20:04:58,986:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-11-12 20:04:58,986:INFO:Creating global containers
2022-11-12 20:04:58,987:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-11-12 20:04:59,603:WARNING:Couldn't import cuml.linear_model.LinearRegression
2022-11-12 20:04:59,603:WARNING:Couldn't import cuml.linear_model.Lasso
2022-11-12 20:04:59,608:WARNING:Couldn't import cuml.linear_model.Ridge
2022-11-12 20:04:59,613:WARNING:Couldn't import cuml.linear_model.ElasticNet
2022-11-12 20:04:59,665:WARNING:Couldn't import cuml.svm.SVR
2022-11-12 20:04:59,707:WARNING:Couldn't import cuml.neighbors.KNeighborsRegressor
2022-11-12 20:04:59,707:WARNING:Couldn't import cuml.ensemble
2022-11-12 20:04:59,708:WARNING:Couldn't import xgboost.XGBRegressor
2022-11-12 20:04:59,972:WARNING:Couldn't import catboost.CatBoostRegressor
2022-11-12 20:04:59,973:WARNING:Couldn't import cuml.linear_model.LinearRegression
2022-11-12 20:04:59,974:WARNING:Couldn't import cuml.linear_model.Lasso
2022-11-12 20:04:59,981:WARNING:Couldn't import cuml.linear_model.Ridge
2022-11-12 20:04:59,987:WARNING:Couldn't import cuml.linear_model.ElasticNet
2022-11-12 20:05:00,061:WARNING:Couldn't import cuml.svm.SVR
2022-11-12 20:05:00,106:WARNING:Couldn't import cuml.neighbors.KNeighborsRegressor
2022-11-12 20:05:00,107:WARNING:Couldn't import cuml.ensemble
2022-11-12 20:05:00,108:WARNING:Couldn't import xgboost.XGBRegressor
2022-11-12 20:05:00,227:WARNING:Couldn't import catboost.CatBoostRegressor
2022-11-12 20:05:00,227:INFO:Creating grid variables
2022-11-12 20:05:00,242:INFO:create_model_container: 0
2022-11-12 20:05:00,242:INFO:master_model_container: 0
2022-11-12 20:05:00,242:INFO:display_container: 1
2022-11-12 20:05:00,247:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=['Id'],
                                      ml_usecase='regression',
                                      numerical_features=[], target='SalePrice',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_st...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='SalePrice')),
                ('fix_perfect', Remove_100(target='SalePrice')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-11-12 20:05:00,247:INFO:setup() succesfully completed......................................
2022-11-12 20:07:45,958:INFO:PyCaret Supervised Module
2022-11-12 20:07:45,958:INFO:ML Usecase: regression
2022-11-12 20:07:45,958:INFO:version 2.3.10
2022-11-12 20:07:45,958:INFO:Initializing setup()
2022-11-12 20:07:45,958:INFO:setup(target=SalePrice, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=True, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-11-12 20:07:45,958:INFO:Checking environment
2022-11-12 20:07:45,958:INFO:python_version: 3.7.8
2022-11-12 20:07:45,958:INFO:python_build: ('tags/v3.7.8:4b47a5b6ba', 'Jun 28 2020 08:53:46')
2022-11-12 20:07:45,958:INFO:machine: AMD64
2022-11-12 20:07:45,958:INFO:platform: Windows-10-10.0.19041-SP0
2022-11-12 20:07:45,965:INFO:Memory: svmem(total=17090736128, available=3882950656, percent=77.3, used=13207785472, free=3882950656)
2022-11-12 20:07:45,965:INFO:Physical Core: 8
2022-11-12 20:07:45,965:INFO:Logical Core: 16
2022-11-12 20:07:45,965:INFO:Checking libraries
2022-11-12 20:07:45,965:INFO:pd==1.3.5
2022-11-12 20:07:45,965:INFO:numpy==1.19.5
2022-11-12 20:07:45,965:INFO:sklearn==0.23.2
2022-11-12 20:07:45,965:INFO:lightgbm==3.3.3
2022-11-12 20:07:45,966:WARNING:catboost not found
2022-11-12 20:07:45,966:WARNING:xgboost not found
2022-11-12 20:07:45,966:INFO:mlflow==1.30.0
2022-11-12 20:07:45,966:INFO:Checking Exceptions
2022-11-12 20:07:45,967:INFO:Declaring global variables
2022-11-12 20:07:45,967:INFO:USI: 9bb9
2022-11-12 20:07:45,967:INFO:pycaret_globals: {'seed', '_all_models', '_all_models_internal', 'target_param', 'fold_param', 'create_model_container', '_gpu_n_jobs_param', 'y_test', 'master_model_container', 'data_before_preprocess', 'fold_shuffle_param', 'pycaret_globals', 'dashboard_logger', 'fix_imbalance_method_param', '_all_metrics', 'stratify_param', 'X_train', 'fold_groups_param', 'display_container', 'n_jobs_param', 'fold_groups_param_full', 'USI', 'html_param', 'log_plots_param', 'transform_target_method_param', 'logging_param', 'y', 'X', 'transform_target_param', 'imputation_classifier', 'y_train', 'fold_generator', '_available_plots', 'gpu_param', 'iterative_imputation_iters_param', 'prep_pipe', 'exp_name_log', 'experiment__', '_internal_pipeline', 'imputation_regressor', '_ml_usecase', 'X_test', 'fix_imbalance_param'}
2022-11-12 20:07:45,967:INFO:Preparing display monitor
2022-11-12 20:07:45,967:INFO:Preparing display monitor
2022-11-12 20:07:45,976:INFO:Importing libraries
2022-11-12 20:07:45,976:INFO:Copying data for preprocessing
2022-11-12 20:07:45,982:INFO:Declaring preprocessing parameters
2022-11-12 20:07:45,983:WARNING:cuML not found
2022-11-12 20:07:45,983:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.3.3
2022-11-12 20:07:45,984:INFO:Creating preprocessing pipeline
2022-11-12 20:07:46,013:INFO:Preprocessing pipeline created successfully
2022-11-12 20:07:46,013:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-11-12 20:07:46,013:INFO:Creating global containers
2022-11-12 20:07:46,015:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-11-12 20:07:46,655:WARNING:Couldn't import cuml.linear_model.LinearRegression
2022-11-12 20:07:46,655:WARNING:Couldn't import cuml.linear_model.Lasso
2022-11-12 20:07:46,660:WARNING:Couldn't import cuml.linear_model.Ridge
2022-11-12 20:07:46,665:WARNING:Couldn't import cuml.linear_model.ElasticNet
2022-11-12 20:07:46,718:WARNING:Couldn't import cuml.svm.SVR
2022-11-12 20:07:46,761:WARNING:Couldn't import cuml.neighbors.KNeighborsRegressor
2022-11-12 20:07:46,762:WARNING:Couldn't import cuml.ensemble
2022-11-12 20:07:46,762:WARNING:Couldn't import xgboost.XGBRegressor
2022-11-12 20:07:46,933:WARNING:Couldn't import catboost.CatBoostRegressor
2022-11-12 20:07:46,933:WARNING:Couldn't import cuml.linear_model.LinearRegression
2022-11-12 20:07:46,934:WARNING:Couldn't import cuml.linear_model.Lasso
2022-11-12 20:07:46,940:WARNING:Couldn't import cuml.linear_model.Ridge
2022-11-12 20:07:46,947:WARNING:Couldn't import cuml.linear_model.ElasticNet
2022-11-12 20:07:47,017:WARNING:Couldn't import cuml.svm.SVR
2022-11-12 20:07:47,066:WARNING:Couldn't import cuml.neighbors.KNeighborsRegressor
2022-11-12 20:07:47,066:WARNING:Couldn't import cuml.ensemble
2022-11-12 20:07:47,067:WARNING:Couldn't import xgboost.XGBRegressor
2022-11-12 20:07:47,187:WARNING:Couldn't import catboost.CatBoostRegressor
2022-11-12 20:07:47,187:INFO:Creating grid variables
2022-11-12 20:07:47,202:INFO:create_model_container: 0
2022-11-12 20:07:47,202:INFO:master_model_container: 0
2022-11-12 20:07:47,202:INFO:display_container: 1
2022-11-12 20:07:47,207:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=['Id'],
                                      ml_usecase='regression',
                                      numerical_features=[], target='SalePrice',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_st...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='SalePrice')),
                ('fix_perfect', Remove_100(target='SalePrice')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-11-12 20:07:47,207:INFO:setup() succesfully completed......................................
2022-11-12 20:12:20,041:INFO:PyCaret Supervised Module
2022-11-12 20:12:20,041:INFO:ML Usecase: regression
2022-11-12 20:12:20,041:INFO:version 2.3.10
2022-11-12 20:12:20,042:INFO:Initializing setup()
2022-11-12 20:12:20,042:INFO:setup(target=SalePrice, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=True, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-11-12 20:12:20,042:INFO:Checking environment
2022-11-12 20:12:20,042:INFO:python_version: 3.7.8
2022-11-12 20:12:20,042:INFO:python_build: ('tags/v3.7.8:4b47a5b6ba', 'Jun 28 2020 08:53:46')
2022-11-12 20:12:20,042:INFO:machine: AMD64
2022-11-12 20:12:20,042:INFO:platform: Windows-10-10.0.19041-SP0
2022-11-12 20:12:20,049:INFO:Memory: svmem(total=17090736128, available=3653206016, percent=78.6, used=13437530112, free=3653206016)
2022-11-12 20:12:20,049:INFO:Physical Core: 8
2022-11-12 20:12:20,049:INFO:Logical Core: 16
2022-11-12 20:12:20,049:INFO:Checking libraries
2022-11-12 20:12:20,049:INFO:pd==1.3.5
2022-11-12 20:12:20,049:INFO:numpy==1.19.5
2022-11-12 20:12:20,049:INFO:sklearn==0.23.2
2022-11-12 20:12:20,049:INFO:lightgbm==3.3.3
2022-11-12 20:12:20,050:WARNING:catboost not found
2022-11-12 20:12:20,050:WARNING:xgboost not found
2022-11-12 20:12:20,050:INFO:mlflow==1.30.0
2022-11-12 20:12:20,050:INFO:Checking Exceptions
2022-11-12 20:12:20,051:INFO:Declaring global variables
2022-11-12 20:12:20,051:INFO:USI: 0344
2022-11-12 20:12:20,051:INFO:pycaret_globals: {'prep_pipe', 'logging_param', 'dashboard_logger', '_all_models_internal', 'fold_groups_param', 'seed', 'fold_param', 'fix_imbalance_method_param', 'experiment__', 'y_test', 'master_model_container', 'X', 'data_before_preprocess', 'X_train', 'fold_shuffle_param', 'create_model_container', 'n_jobs_param', '_internal_pipeline', '_gpu_n_jobs_param', 'USI', 'fix_imbalance_param', 'target_param', 'display_container', 'html_param', 'transform_target_param', 'stratify_param', 'X_test', 'exp_name_log', 'pycaret_globals', 'y', 'transform_target_method_param', '_available_plots', '_ml_usecase', 'fold_generator', 'y_train', 'log_plots_param', 'imputation_regressor', '_all_models', '_all_metrics', 'imputation_classifier', 'fold_groups_param_full', 'gpu_param', 'iterative_imputation_iters_param'}
2022-11-12 20:12:20,051:INFO:Preparing display monitor
2022-11-12 20:12:20,051:INFO:Preparing display monitor
2022-11-12 20:12:20,061:INFO:Importing libraries
2022-11-12 20:12:20,061:INFO:Copying data for preprocessing
2022-11-12 20:12:20,067:INFO:Declaring preprocessing parameters
2022-11-12 20:12:20,068:WARNING:cuML not found
2022-11-12 20:12:20,068:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.3.3
2022-11-12 20:12:20,070:INFO:Creating preprocessing pipeline
2022-11-12 20:12:20,099:INFO:Preprocessing pipeline created successfully
2022-11-12 20:12:20,099:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-11-12 20:12:20,099:INFO:Creating global containers
2022-11-12 20:12:20,101:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-11-12 20:12:20,730:WARNING:Couldn't import cuml.linear_model.LinearRegression
2022-11-12 20:12:20,731:WARNING:Couldn't import cuml.linear_model.Lasso
2022-11-12 20:12:20,736:WARNING:Couldn't import cuml.linear_model.Ridge
2022-11-12 20:12:20,740:WARNING:Couldn't import cuml.linear_model.ElasticNet
2022-11-12 20:12:20,793:WARNING:Couldn't import cuml.svm.SVR
2022-11-12 20:12:20,836:WARNING:Couldn't import cuml.neighbors.KNeighborsRegressor
2022-11-12 20:12:20,836:WARNING:Couldn't import cuml.ensemble
2022-11-12 20:12:20,837:WARNING:Couldn't import xgboost.XGBRegressor
2022-11-12 20:12:21,001:WARNING:Couldn't import catboost.CatBoostRegressor
2022-11-12 20:12:21,002:WARNING:Couldn't import cuml.linear_model.LinearRegression
2022-11-12 20:12:21,003:WARNING:Couldn't import cuml.linear_model.Lasso
2022-11-12 20:12:21,010:WARNING:Couldn't import cuml.linear_model.Ridge
2022-11-12 20:12:21,017:WARNING:Couldn't import cuml.linear_model.ElasticNet
2022-11-12 20:12:21,086:WARNING:Couldn't import cuml.svm.SVR
2022-11-12 20:12:21,132:WARNING:Couldn't import cuml.neighbors.KNeighborsRegressor
2022-11-12 20:12:21,133:WARNING:Couldn't import cuml.ensemble
2022-11-12 20:12:21,134:WARNING:Couldn't import xgboost.XGBRegressor
2022-11-12 20:12:21,259:WARNING:Couldn't import catboost.CatBoostRegressor
2022-11-12 20:12:21,259:INFO:Creating grid variables
2022-11-12 20:12:21,274:INFO:create_model_container: 0
2022-11-12 20:12:21,274:INFO:master_model_container: 0
2022-11-12 20:12:21,274:INFO:display_container: 1
2022-11-12 20:12:21,279:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=['Id'],
                                      ml_usecase='regression',
                                      numerical_features=[], target='SalePrice',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_st...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='SalePrice')),
                ('fix_perfect', Remove_100(target='SalePrice')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-11-12 20:12:21,279:INFO:setup() succesfully completed......................................
2022-11-12 20:14:48,214:INFO:PyCaret Supervised Module
2022-11-12 20:14:48,214:INFO:ML Usecase: regression
2022-11-12 20:14:48,214:INFO:version 2.3.10
2022-11-12 20:14:48,214:INFO:Initializing setup()
2022-11-12 20:14:48,214:INFO:setup(target=SalePrice, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=True, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-11-12 20:14:48,215:INFO:Checking environment
2022-11-12 20:14:48,215:INFO:python_version: 3.7.8
2022-11-12 20:14:48,215:INFO:python_build: ('tags/v3.7.8:4b47a5b6ba', 'Jun 28 2020 08:53:46')
2022-11-12 20:14:48,215:INFO:machine: AMD64
2022-11-12 20:14:48,215:INFO:platform: Windows-10-10.0.19041-SP0
2022-11-12 20:14:48,220:INFO:Memory: svmem(total=17090736128, available=3787513856, percent=77.8, used=13303222272, free=3787513856)
2022-11-12 20:14:48,221:INFO:Physical Core: 8
2022-11-12 20:14:48,221:INFO:Logical Core: 16
2022-11-12 20:14:48,221:INFO:Checking libraries
2022-11-12 20:14:48,221:INFO:pd==1.3.5
2022-11-12 20:14:48,221:INFO:numpy==1.19.5
2022-11-12 20:14:48,221:INFO:sklearn==0.23.2
2022-11-12 20:14:48,221:INFO:lightgbm==3.3.3
2022-11-12 20:14:48,222:WARNING:catboost not found
2022-11-12 20:14:48,222:WARNING:xgboost not found
2022-11-12 20:14:48,222:INFO:mlflow==1.30.0
2022-11-12 20:14:48,222:INFO:Checking Exceptions
2022-11-12 20:14:48,222:INFO:Declaring global variables
2022-11-12 20:14:48,222:INFO:USI: a981
2022-11-12 20:14:48,223:INFO:pycaret_globals: {'_gpu_n_jobs_param', '_all_metrics', 'log_plots_param', 'fold_groups_param', 'imputation_classifier', '_all_models_internal', 'y_train', 'X_test', 'display_container', 'create_model_container', 'transform_target_param', 'X', 'prep_pipe', '_ml_usecase', 'imputation_regressor', 'exp_name_log', 'fold_shuffle_param', 'fix_imbalance_param', 'fold_param', 'master_model_container', '_internal_pipeline', 'n_jobs_param', '_all_models', 'fold_generator', 'html_param', 'experiment__', 'logging_param', '_available_plots', 'seed', 'y_test', 'pycaret_globals', 'USI', 'stratify_param', 'fold_groups_param_full', 'dashboard_logger', 'fix_imbalance_method_param', 'X_train', 'gpu_param', 'transform_target_method_param', 'y', 'target_param', 'iterative_imputation_iters_param', 'data_before_preprocess'}
2022-11-12 20:14:48,223:INFO:Preparing display monitor
2022-11-12 20:14:48,223:INFO:Preparing display monitor
2022-11-12 20:14:48,233:INFO:Importing libraries
2022-11-12 20:14:48,233:INFO:Copying data for preprocessing
2022-11-12 20:14:48,239:INFO:Declaring preprocessing parameters
2022-11-12 20:14:48,240:WARNING:cuML not found
2022-11-12 20:14:48,240:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.3.3
2022-11-12 20:14:48,241:INFO:Creating preprocessing pipeline
2022-11-12 20:14:48,268:INFO:Preprocessing pipeline created successfully
2022-11-12 20:14:48,269:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-11-12 20:14:48,269:INFO:Creating global containers
2022-11-12 20:14:48,270:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-11-12 20:22:44,247:WARNING:Couldn't import cuml.linear_model.LinearRegression
2022-11-12 20:22:44,247:WARNING:Couldn't import cuml.linear_model.Lasso
2022-11-12 20:22:44,252:WARNING:Couldn't import cuml.linear_model.Ridge
2022-11-12 20:22:44,257:WARNING:Couldn't import cuml.linear_model.ElasticNet
2022-11-12 20:22:44,309:WARNING:Couldn't import cuml.svm.SVR
2022-11-12 20:22:44,350:WARNING:Couldn't import cuml.neighbors.KNeighborsRegressor
2022-11-12 20:22:44,351:WARNING:Couldn't import cuml.ensemble
2022-11-12 20:22:44,351:WARNING:Couldn't import xgboost.XGBRegressor
2022-11-12 20:22:44,520:WARNING:Couldn't import catboost.CatBoostRegressor
2022-11-12 20:22:44,521:WARNING:Couldn't import cuml.linear_model.LinearRegression
2022-11-12 20:22:44,521:WARNING:Couldn't import cuml.linear_model.Lasso
2022-11-12 20:22:44,528:WARNING:Couldn't import cuml.linear_model.Ridge
2022-11-12 20:22:44,534:WARNING:Couldn't import cuml.linear_model.ElasticNet
2022-11-12 20:22:44,605:WARNING:Couldn't import cuml.svm.SVR
2022-11-12 20:22:44,650:WARNING:Couldn't import cuml.neighbors.KNeighborsRegressor
2022-11-12 20:22:44,651:WARNING:Couldn't import cuml.ensemble
2022-11-12 20:22:44,651:WARNING:Couldn't import xgboost.XGBRegressor
2022-11-12 20:22:44,771:WARNING:Couldn't import catboost.CatBoostRegressor
2022-11-12 20:22:44,772:INFO:Creating grid variables
2022-11-12 20:22:44,787:INFO:create_model_container: 0
2022-11-12 20:22:44,787:INFO:master_model_container: 0
2022-11-12 20:22:44,788:INFO:display_container: 1
2022-11-12 20:22:44,793:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=['Id'],
                                      ml_usecase='regression',
                                      numerical_features=[], target='SalePrice',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_st...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='SalePrice')),
                ('fix_perfect', Remove_100(target='SalePrice')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-11-12 20:22:44,793:INFO:setup() succesfully completed......................................
2022-11-12 20:22:44,992:INFO:Initializing compare_models()
2022-11-12 20:22:44,992:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=RMSE, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2022-11-12 20:22:44,992:INFO:Checking exceptions
2022-11-12 20:22:44,992:INFO:Preparing display monitor
2022-11-12 20:22:44,993:INFO:Preparing display monitor
2022-11-12 20:22:45,013:INFO:Initializing Linear Regression
2022-11-12 20:22:45,013:INFO:Total runtime is 0.0 minutes
2022-11-12 20:22:45,020:INFO:SubProcess create_model() called ==================================
2022-11-12 20:22:45,020:INFO:Initializing create_model()
2022-11-12 20:22:45,020:INFO:create_model(estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002402BA0CE88>, return_train_score=False, kwargs={})
2022-11-12 20:22:45,020:INFO:Checking exceptions
2022-11-12 20:22:45,020:INFO:Importing libraries
2022-11-12 20:22:45,020:INFO:Copying training dataset
2022-11-12 20:22:45,021:INFO:Defining folds
2022-11-12 20:22:45,021:INFO:Declaring metric variables
2022-11-12 20:22:45,027:INFO:Importing untrained model
2022-11-12 20:22:45,032:INFO:Linear Regression Imported succesfully
2022-11-12 20:22:45,044:INFO:Starting cross validation
2022-11-12 20:22:45,049:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 20:22:46,060:INFO:Calculating mean and std
2022-11-12 20:22:46,061:INFO:Creating metrics dataframe
2022-11-12 20:22:46,064:INFO:Uploading results into container
2022-11-12 20:22:46,064:INFO:Uploading model into container now
2022-11-12 20:22:46,065:INFO:create_model_container: 1
2022-11-12 20:22:46,065:INFO:master_model_container: 1
2022-11-12 20:22:46,065:INFO:display_container: 2
2022-11-12 20:22:46,065:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, normalize=False)
2022-11-12 20:22:46,065:INFO:create_model() succesfully completed......................................
2022-11-12 20:22:46,140:INFO:SubProcess create_model() end ==================================
2022-11-12 20:22:46,140:INFO:Creating metrics dataframe
2022-11-12 20:22:46,150:INFO:Initializing Lasso Regression
2022-11-12 20:22:46,150:INFO:Total runtime is 0.018961902459462485 minutes
2022-11-12 20:22:46,156:INFO:SubProcess create_model() called ==================================
2022-11-12 20:22:46,157:INFO:Initializing create_model()
2022-11-12 20:22:46,157:INFO:create_model(estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002402BA0CE88>, return_train_score=False, kwargs={})
2022-11-12 20:22:46,157:INFO:Checking exceptions
2022-11-12 20:22:46,157:INFO:Importing libraries
2022-11-12 20:22:46,157:INFO:Copying training dataset
2022-11-12 20:22:46,158:INFO:Defining folds
2022-11-12 20:22:46,158:INFO:Declaring metric variables
2022-11-12 20:22:46,165:INFO:Importing untrained model
2022-11-12 20:22:46,173:INFO:Lasso Regression Imported succesfully
2022-11-12 20:22:46,186:INFO:Starting cross validation
2022-11-12 20:22:46,186:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 20:22:47,687:INFO:Calculating mean and std
2022-11-12 20:22:47,688:INFO:Creating metrics dataframe
2022-11-12 20:22:47,691:INFO:Uploading results into container
2022-11-12 20:22:47,691:INFO:Uploading model into container now
2022-11-12 20:22:47,691:INFO:create_model_container: 2
2022-11-12 20:22:47,691:INFO:master_model_container: 2
2022-11-12 20:22:47,691:INFO:display_container: 2
2022-11-12 20:22:47,693:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,
      normalize=False, positive=False, precompute=False, random_state=7210,
      selection='cyclic', tol=0.0001, warm_start=False)
2022-11-12 20:22:47,693:INFO:create_model() succesfully completed......................................
2022-11-12 20:22:47,764:INFO:SubProcess create_model() end ==================================
2022-11-12 20:22:47,764:INFO:Creating metrics dataframe
2022-11-12 20:22:47,775:INFO:Initializing Ridge Regression
2022-11-12 20:22:47,775:INFO:Total runtime is 0.0460452397664388 minutes
2022-11-12 20:22:47,780:INFO:SubProcess create_model() called ==================================
2022-11-12 20:22:47,781:INFO:Initializing create_model()
2022-11-12 20:22:47,781:INFO:create_model(estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002402BA0CE88>, return_train_score=False, kwargs={})
2022-11-12 20:22:47,781:INFO:Checking exceptions
2022-11-12 20:22:47,781:INFO:Importing libraries
2022-11-12 20:22:47,781:INFO:Copying training dataset
2022-11-12 20:22:47,782:INFO:Defining folds
2022-11-12 20:22:47,782:INFO:Declaring metric variables
2022-11-12 20:22:47,788:INFO:Importing untrained model
2022-11-12 20:22:47,794:INFO:Ridge Regression Imported succesfully
2022-11-12 20:22:47,806:INFO:Starting cross validation
2022-11-12 20:22:47,807:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 20:22:48,907:INFO:Calculating mean and std
2022-11-12 20:22:48,908:INFO:Creating metrics dataframe
2022-11-12 20:22:48,912:INFO:Uploading results into container
2022-11-12 20:22:48,912:INFO:Uploading model into container now
2022-11-12 20:22:48,912:INFO:create_model_container: 3
2022-11-12 20:22:48,912:INFO:master_model_container: 3
2022-11-12 20:22:48,912:INFO:display_container: 2
2022-11-12 20:22:48,912:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
      normalize=False, random_state=7210, solver='auto', tol=0.001)
2022-11-12 20:22:48,912:INFO:create_model() succesfully completed......................................
2022-11-12 20:22:48,985:INFO:SubProcess create_model() end ==================================
2022-11-12 20:22:48,985:INFO:Creating metrics dataframe
2022-11-12 20:22:48,996:INFO:Initializing Elastic Net
2022-11-12 20:22:48,996:INFO:Total runtime is 0.06639551321665446 minutes
2022-11-12 20:22:49,005:INFO:SubProcess create_model() called ==================================
2022-11-12 20:22:49,005:INFO:Initializing create_model()
2022-11-12 20:22:49,005:INFO:create_model(estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002402BA0CE88>, return_train_score=False, kwargs={})
2022-11-12 20:22:49,005:INFO:Checking exceptions
2022-11-12 20:22:49,005:INFO:Importing libraries
2022-11-12 20:22:49,005:INFO:Copying training dataset
2022-11-12 20:22:49,006:INFO:Defining folds
2022-11-12 20:22:49,006:INFO:Declaring metric variables
2022-11-12 20:22:49,011:INFO:Importing untrained model
2022-11-12 20:22:49,018:INFO:Elastic Net Imported succesfully
2022-11-12 20:22:49,030:INFO:Starting cross validation
2022-11-12 20:22:49,031:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 20:22:50,530:INFO:Calculating mean and std
2022-11-12 20:22:50,531:INFO:Creating metrics dataframe
2022-11-12 20:22:50,535:INFO:Uploading results into container
2022-11-12 20:22:50,535:INFO:Uploading model into container now
2022-11-12 20:22:50,535:INFO:create_model_container: 4
2022-11-12 20:22:50,535:INFO:master_model_container: 4
2022-11-12 20:22:50,535:INFO:display_container: 2
2022-11-12 20:22:50,535:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, normalize=False, positive=False, precompute=False,
           random_state=7210, selection='cyclic', tol=0.0001, warm_start=False)
2022-11-12 20:22:50,535:INFO:create_model() succesfully completed......................................
2022-11-12 20:22:50,605:INFO:SubProcess create_model() end ==================================
2022-11-12 20:22:50,605:INFO:Creating metrics dataframe
2022-11-12 20:22:50,617:INFO:Initializing Least Angle Regression
2022-11-12 20:22:50,617:INFO:Total runtime is 0.09341182708740234 minutes
2022-11-12 20:22:50,623:INFO:SubProcess create_model() called ==================================
2022-11-12 20:22:50,624:INFO:Initializing create_model()
2022-11-12 20:22:50,624:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002402BA0CE88>, return_train_score=False, kwargs={})
2022-11-12 20:22:50,624:INFO:Checking exceptions
2022-11-12 20:22:50,624:INFO:Importing libraries
2022-11-12 20:22:50,624:INFO:Copying training dataset
2022-11-12 20:22:50,625:INFO:Defining folds
2022-11-12 20:22:50,625:INFO:Declaring metric variables
2022-11-12 20:22:50,630:INFO:Importing untrained model
2022-11-12 20:22:50,637:INFO:Least Angle Regression Imported succesfully
2022-11-12 20:22:50,648:INFO:Starting cross validation
2022-11-12 20:22:50,649:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 20:22:51,044:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2022-11-12 20:22:51,048:WARNING:Traceback (most recent call last):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 3210, in create_model_supervised
    error_score=0,
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 248, in cross_validate
    for train, test in cv.split(X, y, groups))
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 1088, in __call__
    while self.dispatch_one_batch(iterator):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 901, in dispatch_one_batch
    self._dispatch(tasks)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 819, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 597, in __init__
    self.results = batch()
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in __call__
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in <listcomp>
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 88, in __call__
    *args, **kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 213, in _score
    **self._kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 179, in mean_absolute_error
    y_true, y_pred, multioutput)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 645, in check_array
    allow_nan=force_all_finite == 'allow-nan')
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 99, in _assert_all_finite
    msg_dtype if msg_dtype is not None else X.dtype)
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2022-11-12 20:22:51,048:INFO:Initializing create_model()
2022-11-12 20:22:51,048:INFO:create_model(estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002402BA0CE88>, return_train_score=False, kwargs={})
2022-11-12 20:22:51,048:INFO:Checking exceptions
2022-11-12 20:22:51,048:INFO:Importing libraries
2022-11-12 20:22:51,048:INFO:Copying training dataset
2022-11-12 20:22:51,049:INFO:Defining folds
2022-11-12 20:22:51,049:INFO:Declaring metric variables
2022-11-12 20:22:51,056:INFO:Importing untrained model
2022-11-12 20:22:51,061:INFO:Least Angle Regression Imported succesfully
2022-11-12 20:22:51,074:INFO:Starting cross validation
2022-11-12 20:22:51,074:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 20:22:51,455:ERROR:create_model() for lar raised an exception or returned all 0.0:
2022-11-12 20:22:51,456:ERROR:Traceback (most recent call last):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 2203, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 3210, in create_model_supervised
    error_score=0,
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 248, in cross_validate
    for train, test in cv.split(X, y, groups))
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 1088, in __call__
    while self.dispatch_one_batch(iterator):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 901, in dispatch_one_batch
    self._dispatch(tasks)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 819, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 597, in __init__
    self.results = batch()
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in __call__
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in <listcomp>
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 88, in __call__
    *args, **kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 213, in _score
    **self._kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 179, in mean_absolute_error
    y_true, y_pred, multioutput)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 645, in check_array
    allow_nan=force_all_finite == 'allow-nan')
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 99, in _assert_all_finite
    msg_dtype if msg_dtype is not None else X.dtype)
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 2212, in compare_models
    model, model_fit_time = create_model_supervised(**create_model_args)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\pycaret\internal\tabular.py", line 3210, in create_model_supervised
    error_score=0,
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 248, in cross_validate
    for train, test in cv.split(X, y, groups))
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 1088, in __call__
    while self.dispatch_one_batch(iterator):
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 901, in dispatch_one_batch
    self._dispatch(tasks)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 819, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\_parallel_backends.py", line 597, in __init__
    self.results = batch()
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in __call__
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\joblib\parallel.py", line 289, in <listcomp>
    for func, args, kwargs in self.items]
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 88, in __call__
    *args, **kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_scorer.py", line 213, in _score
    **self._kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 179, in mean_absolute_error
    y_true, y_pred, multioutput)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 645, in check_array
    allow_nan=force_all_finite == 'allow-nan')
  File "c:\Users\Tommy\notebook\.venv\lib\site-packages\sklearn\utils\validation.py", line 99, in _assert_all_finite
    msg_dtype if msg_dtype is not None else X.dtype)
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2022-11-12 20:22:51,457:INFO:Initializing Lasso Least Angle Regression
2022-11-12 20:22:51,457:INFO:Total runtime is 0.10741120179494221 minutes
2022-11-12 20:22:51,463:INFO:SubProcess create_model() called ==================================
2022-11-12 20:22:51,463:INFO:Initializing create_model()
2022-11-12 20:22:51,463:INFO:create_model(estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002402BA0CE88>, return_train_score=False, kwargs={})
2022-11-12 20:22:51,463:INFO:Checking exceptions
2022-11-12 20:22:51,463:INFO:Importing libraries
2022-11-12 20:22:51,464:INFO:Copying training dataset
2022-11-12 20:22:51,465:INFO:Defining folds
2022-11-12 20:22:51,465:INFO:Declaring metric variables
2022-11-12 20:22:51,471:INFO:Importing untrained model
2022-11-12 20:22:51,478:INFO:Lasso Least Angle Regression Imported succesfully
2022-11-12 20:22:51,490:INFO:Starting cross validation
2022-11-12 20:22:51,490:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 20:22:52,914:INFO:Calculating mean and std
2022-11-12 20:22:52,914:INFO:Creating metrics dataframe
2022-11-12 20:22:52,918:INFO:Uploading results into container
2022-11-12 20:22:52,918:INFO:Uploading model into container now
2022-11-12 20:22:52,918:INFO:create_model_container: 5
2022-11-12 20:22:52,918:INFO:master_model_container: 5
2022-11-12 20:22:52,918:INFO:display_container: 2
2022-11-12 20:22:52,918:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize=True,
          positive=False, precompute='auto', random_state=7210, verbose=False)
2022-11-12 20:22:52,918:INFO:create_model() succesfully completed......................................
2022-11-12 20:22:52,988:INFO:SubProcess create_model() end ==================================
2022-11-12 20:22:52,988:INFO:Creating metrics dataframe
2022-11-12 20:22:52,999:INFO:Initializing Orthogonal Matching Pursuit
2022-11-12 20:22:52,999:INFO:Total runtime is 0.13311198155085244 minutes
2022-11-12 20:22:53,005:INFO:SubProcess create_model() called ==================================
2022-11-12 20:22:53,005:INFO:Initializing create_model()
2022-11-12 20:22:53,005:INFO:create_model(estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002402BA0CE88>, return_train_score=False, kwargs={})
2022-11-12 20:22:53,005:INFO:Checking exceptions
2022-11-12 20:22:53,006:INFO:Importing libraries
2022-11-12 20:22:53,006:INFO:Copying training dataset
2022-11-12 20:22:53,007:INFO:Defining folds
2022-11-12 20:22:53,007:INFO:Declaring metric variables
2022-11-12 20:22:53,012:INFO:Importing untrained model
2022-11-12 20:22:53,018:INFO:Orthogonal Matching Pursuit Imported succesfully
2022-11-12 20:22:53,029:INFO:Starting cross validation
2022-11-12 20:22:53,030:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 20:22:53,172:INFO:Calculating mean and std
2022-11-12 20:22:53,173:INFO:Creating metrics dataframe
2022-11-12 20:22:53,176:INFO:Uploading results into container
2022-11-12 20:22:53,176:INFO:Uploading model into container now
2022-11-12 20:22:53,176:INFO:create_model_container: 6
2022-11-12 20:22:53,176:INFO:master_model_container: 6
2022-11-12 20:22:53,176:INFO:display_container: 2
2022-11-12 20:22:53,176:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize=True, precompute='auto', tol=None)
2022-11-12 20:22:53,176:INFO:create_model() succesfully completed......................................
2022-11-12 20:22:53,257:INFO:SubProcess create_model() end ==================================
2022-11-12 20:22:53,258:INFO:Creating metrics dataframe
2022-11-12 20:22:53,269:INFO:Initializing Bayesian Ridge
2022-11-12 20:22:53,269:INFO:Total runtime is 0.13761192162831623 minutes
2022-11-12 20:22:53,276:INFO:SubProcess create_model() called ==================================
2022-11-12 20:22:53,276:INFO:Initializing create_model()
2022-11-12 20:22:53,276:INFO:create_model(estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002402BA0CE88>, return_train_score=False, kwargs={})
2022-11-12 20:22:53,276:INFO:Checking exceptions
2022-11-12 20:22:53,276:INFO:Importing libraries
2022-11-12 20:22:53,276:INFO:Copying training dataset
2022-11-12 20:22:53,277:INFO:Defining folds
2022-11-12 20:22:53,277:INFO:Declaring metric variables
2022-11-12 20:22:53,283:INFO:Importing untrained model
2022-11-12 20:22:53,289:INFO:Bayesian Ridge Imported succesfully
2022-11-12 20:22:53,301:INFO:Starting cross validation
2022-11-12 20:22:53,302:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 20:22:55,411:INFO:Calculating mean and std
2022-11-12 20:22:55,412:INFO:Creating metrics dataframe
2022-11-12 20:22:55,416:INFO:Uploading results into container
2022-11-12 20:22:55,416:INFO:Uploading model into container now
2022-11-12 20:22:55,416:INFO:create_model_container: 7
2022-11-12 20:22:55,416:INFO:master_model_container: 7
2022-11-12 20:22:55,416:INFO:display_container: 2
2022-11-12 20:22:55,416:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              normalize=False, tol=0.001, verbose=False)
2022-11-12 20:22:55,417:INFO:create_model() succesfully completed......................................
2022-11-12 20:22:55,489:INFO:SubProcess create_model() end ==================================
2022-11-12 20:22:55,489:INFO:Creating metrics dataframe
2022-11-12 20:22:55,500:INFO:Initializing Passive Aggressive Regressor
2022-11-12 20:22:55,500:INFO:Total runtime is 0.17479176918665568 minutes
2022-11-12 20:22:55,507:INFO:SubProcess create_model() called ==================================
2022-11-12 20:22:55,507:INFO:Initializing create_model()
2022-11-12 20:22:55,507:INFO:create_model(estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002402BA0CE88>, return_train_score=False, kwargs={})
2022-11-12 20:22:55,507:INFO:Checking exceptions
2022-11-12 20:22:55,507:INFO:Importing libraries
2022-11-12 20:22:55,507:INFO:Copying training dataset
2022-11-12 20:22:55,509:INFO:Defining folds
2022-11-12 20:22:55,509:INFO:Declaring metric variables
2022-11-12 20:22:55,514:INFO:Importing untrained model
2022-11-12 20:22:55,522:INFO:Passive Aggressive Regressor Imported succesfully
2022-11-12 20:22:55,533:INFO:Starting cross validation
2022-11-12 20:22:55,534:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 20:22:55,769:INFO:Calculating mean and std
2022-11-12 20:22:55,770:INFO:Creating metrics dataframe
2022-11-12 20:22:55,773:INFO:Uploading results into container
2022-11-12 20:22:55,773:INFO:Uploading model into container now
2022-11-12 20:22:55,773:INFO:create_model_container: 8
2022-11-12 20:22:55,773:INFO:master_model_container: 8
2022-11-12 20:22:55,773:INFO:display_container: 2
2022-11-12 20:22:55,773:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=7210, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-11-12 20:22:55,773:INFO:create_model() succesfully completed......................................
2022-11-12 20:22:55,846:INFO:SubProcess create_model() end ==================================
2022-11-12 20:22:55,846:INFO:Creating metrics dataframe
2022-11-12 20:22:55,858:INFO:Initializing Huber Regressor
2022-11-12 20:22:55,858:INFO:Total runtime is 0.18076192537943522 minutes
2022-11-12 20:22:55,864:INFO:SubProcess create_model() called ==================================
2022-11-12 20:22:55,864:INFO:Initializing create_model()
2022-11-12 20:22:55,864:INFO:create_model(estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002402BA0CE88>, return_train_score=False, kwargs={})
2022-11-12 20:22:55,865:INFO:Checking exceptions
2022-11-12 20:22:55,865:INFO:Importing libraries
2022-11-12 20:22:55,865:INFO:Copying training dataset
2022-11-12 20:22:55,866:INFO:Defining folds
2022-11-12 20:22:55,866:INFO:Declaring metric variables
2022-11-12 20:22:55,873:INFO:Importing untrained model
2022-11-12 20:22:55,878:INFO:Huber Regressor Imported succesfully
2022-11-12 20:22:55,890:INFO:Starting cross validation
2022-11-12 20:22:55,891:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 20:22:59,700:INFO:Calculating mean and std
2022-11-12 20:22:59,701:INFO:Creating metrics dataframe
2022-11-12 20:22:59,704:INFO:Uploading results into container
2022-11-12 20:22:59,704:INFO:Uploading model into container now
2022-11-12 20:22:59,705:INFO:create_model_container: 9
2022-11-12 20:22:59,705:INFO:master_model_container: 9
2022-11-12 20:22:59,705:INFO:display_container: 2
2022-11-12 20:22:59,705:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2022-11-12 20:22:59,705:INFO:create_model() succesfully completed......................................
2022-11-12 20:22:59,777:INFO:SubProcess create_model() end ==================================
2022-11-12 20:22:59,777:INFO:Creating metrics dataframe
2022-11-12 20:22:59,789:INFO:Initializing K Neighbors Regressor
2022-11-12 20:22:59,789:INFO:Total runtime is 0.24627610842386882 minutes
2022-11-12 20:22:59,795:INFO:SubProcess create_model() called ==================================
2022-11-12 20:22:59,796:INFO:Initializing create_model()
2022-11-12 20:22:59,796:INFO:create_model(estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002402BA0CE88>, return_train_score=False, kwargs={})
2022-11-12 20:22:59,796:INFO:Checking exceptions
2022-11-12 20:22:59,796:INFO:Importing libraries
2022-11-12 20:22:59,796:INFO:Copying training dataset
2022-11-12 20:22:59,797:INFO:Defining folds
2022-11-12 20:22:59,797:INFO:Declaring metric variables
2022-11-12 20:22:59,804:INFO:Importing untrained model
2022-11-12 20:22:59,809:INFO:K Neighbors Regressor Imported succesfully
2022-11-12 20:22:59,820:INFO:Starting cross validation
2022-11-12 20:22:59,821:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 20:23:03,303:INFO:Calculating mean and std
2022-11-12 20:23:03,304:INFO:Creating metrics dataframe
2022-11-12 20:23:03,308:INFO:Uploading results into container
2022-11-12 20:23:03,308:INFO:Uploading model into container now
2022-11-12 20:23:03,308:INFO:create_model_container: 10
2022-11-12 20:23:03,308:INFO:master_model_container: 10
2022-11-12 20:23:03,308:INFO:display_container: 2
2022-11-12 20:23:03,309:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2022-11-12 20:23:03,309:INFO:create_model() succesfully completed......................................
2022-11-12 20:23:03,382:INFO:SubProcess create_model() end ==================================
2022-11-12 20:23:03,382:INFO:Creating metrics dataframe
2022-11-12 20:23:03,394:INFO:Initializing Decision Tree Regressor
2022-11-12 20:23:03,394:INFO:Total runtime is 0.3063619295756022 minutes
2022-11-12 20:23:03,399:INFO:SubProcess create_model() called ==================================
2022-11-12 20:23:03,400:INFO:Initializing create_model()
2022-11-12 20:23:03,400:INFO:create_model(estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002402BA0CE88>, return_train_score=False, kwargs={})
2022-11-12 20:23:03,400:INFO:Checking exceptions
2022-11-12 20:23:03,400:INFO:Importing libraries
2022-11-12 20:23:03,400:INFO:Copying training dataset
2022-11-12 20:23:03,402:INFO:Defining folds
2022-11-12 20:23:03,402:INFO:Declaring metric variables
2022-11-12 20:23:03,408:INFO:Importing untrained model
2022-11-12 20:23:03,414:INFO:Decision Tree Regressor Imported succesfully
2022-11-12 20:23:03,425:INFO:Starting cross validation
2022-11-12 20:23:03,426:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 20:23:03,771:INFO:Calculating mean and std
2022-11-12 20:23:03,771:INFO:Creating metrics dataframe
2022-11-12 20:23:03,775:INFO:Uploading results into container
2022-11-12 20:23:03,775:INFO:Uploading model into container now
2022-11-12 20:23:03,775:INFO:create_model_container: 11
2022-11-12 20:23:03,775:INFO:master_model_container: 11
2022-11-12 20:23:03,775:INFO:display_container: 2
2022-11-12 20:23:03,775:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_impurity_split=None,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, presort='deprecated',
                      random_state=7210, splitter='best')
2022-11-12 20:23:03,775:INFO:create_model() succesfully completed......................................
2022-11-12 20:23:03,849:INFO:SubProcess create_model() end ==================================
2022-11-12 20:23:03,849:INFO:Creating metrics dataframe
2022-11-12 20:23:03,861:INFO:Initializing Random Forest Regressor
2022-11-12 20:23:03,861:INFO:Total runtime is 0.31414117813110354 minutes
2022-11-12 20:23:03,867:INFO:SubProcess create_model() called ==================================
2022-11-12 20:23:03,867:INFO:Initializing create_model()
2022-11-12 20:23:03,867:INFO:create_model(estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002402BA0CE88>, return_train_score=False, kwargs={})
2022-11-12 20:23:03,868:INFO:Checking exceptions
2022-11-12 20:23:03,868:INFO:Importing libraries
2022-11-12 20:23:03,868:INFO:Copying training dataset
2022-11-12 20:23:03,869:INFO:Defining folds
2022-11-12 20:23:03,869:INFO:Declaring metric variables
2022-11-12 20:23:03,875:INFO:Importing untrained model
2022-11-12 20:23:03,881:INFO:Random Forest Regressor Imported succesfully
2022-11-12 20:23:03,892:INFO:Starting cross validation
2022-11-12 20:23:03,892:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 20:23:11,628:INFO:Calculating mean and std
2022-11-12 20:23:11,629:INFO:Creating metrics dataframe
2022-11-12 20:23:11,632:INFO:Uploading results into container
2022-11-12 20:23:11,632:INFO:Uploading model into container now
2022-11-12 20:23:11,632:INFO:create_model_container: 12
2022-11-12 20:23:11,632:INFO:master_model_container: 12
2022-11-12 20:23:11,632:INFO:display_container: 2
2022-11-12 20:23:11,632:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=7210, verbose=0, warm_start=False)
2022-11-12 20:23:11,633:INFO:create_model() succesfully completed......................................
2022-11-12 20:23:11,710:INFO:SubProcess create_model() end ==================================
2022-11-12 20:23:11,710:INFO:Creating metrics dataframe
2022-11-12 20:23:11,723:INFO:Initializing Extra Trees Regressor
2022-11-12 20:23:11,724:INFO:Total runtime is 0.4451855500539144 minutes
2022-11-12 20:23:11,730:INFO:SubProcess create_model() called ==================================
2022-11-12 20:23:11,730:INFO:Initializing create_model()
2022-11-12 20:23:11,730:INFO:create_model(estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002402BA0CE88>, return_train_score=False, kwargs={})
2022-11-12 20:23:11,730:INFO:Checking exceptions
2022-11-12 20:23:11,730:INFO:Importing libraries
2022-11-12 20:23:11,730:INFO:Copying training dataset
2022-11-12 20:23:11,731:INFO:Defining folds
2022-11-12 20:23:11,731:INFO:Declaring metric variables
2022-11-12 20:23:11,739:INFO:Importing untrained model
2022-11-12 20:23:11,748:INFO:Extra Trees Regressor Imported succesfully
2022-11-12 20:23:11,770:INFO:Starting cross validation
2022-11-12 20:23:11,771:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 20:23:19,994:INFO:Calculating mean and std
2022-11-12 20:23:19,995:INFO:Creating metrics dataframe
2022-11-12 20:23:19,999:INFO:Uploading results into container
2022-11-12 20:23:19,999:INFO:Uploading model into container now
2022-11-12 20:23:19,999:INFO:create_model_container: 13
2022-11-12 20:23:19,999:INFO:master_model_container: 13
2022-11-12 20:23:19,999:INFO:display_container: 2
2022-11-12 20:23:19,999:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                    max_depth=None, max_features='auto', max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_impurity_split=None, min_samples_leaf=1,
                    min_samples_split=2, min_weight_fraction_leaf=0.0,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=7210, verbose=0, warm_start=False)
2022-11-12 20:23:19,999:INFO:create_model() succesfully completed......................................
2022-11-12 20:23:20,080:INFO:SubProcess create_model() end ==================================
2022-11-12 20:23:20,080:INFO:Creating metrics dataframe
2022-11-12 20:23:20,093:INFO:Initializing AdaBoost Regressor
2022-11-12 20:23:20,093:INFO:Total runtime is 0.58466743628184 minutes
2022-11-12 20:23:20,099:INFO:SubProcess create_model() called ==================================
2022-11-12 20:23:20,100:INFO:Initializing create_model()
2022-11-12 20:23:20,100:INFO:create_model(estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002402BA0CE88>, return_train_score=False, kwargs={})
2022-11-12 20:23:20,100:INFO:Checking exceptions
2022-11-12 20:23:20,100:INFO:Importing libraries
2022-11-12 20:23:20,100:INFO:Copying training dataset
2022-11-12 20:23:20,101:INFO:Defining folds
2022-11-12 20:23:20,102:INFO:Declaring metric variables
2022-11-12 20:23:20,108:INFO:Importing untrained model
2022-11-12 20:23:20,114:INFO:AdaBoost Regressor Imported succesfully
2022-11-12 20:23:20,127:INFO:Starting cross validation
2022-11-12 20:23:20,128:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 20:23:23,870:INFO:Calculating mean and std
2022-11-12 20:23:23,871:INFO:Creating metrics dataframe
2022-11-12 20:23:23,875:INFO:Uploading results into container
2022-11-12 20:23:23,875:INFO:Uploading model into container now
2022-11-12 20:23:23,875:INFO:create_model_container: 14
2022-11-12 20:23:23,875:INFO:master_model_container: 14
2022-11-12 20:23:23,875:INFO:display_container: 2
2022-11-12 20:23:23,875:INFO:AdaBoostRegressor(base_estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=7210)
2022-11-12 20:23:23,875:INFO:create_model() succesfully completed......................................
2022-11-12 20:23:23,951:INFO:SubProcess create_model() end ==================================
2022-11-12 20:23:23,951:INFO:Creating metrics dataframe
2022-11-12 20:23:23,964:INFO:Initializing Gradient Boosting Regressor
2022-11-12 20:23:23,964:INFO:Total runtime is 0.6491986552874247 minutes
2022-11-12 20:23:23,971:INFO:SubProcess create_model() called ==================================
2022-11-12 20:23:23,971:INFO:Initializing create_model()
2022-11-12 20:23:23,971:INFO:create_model(estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002402BA0CE88>, return_train_score=False, kwargs={})
2022-11-12 20:23:23,971:INFO:Checking exceptions
2022-11-12 20:23:23,971:INFO:Importing libraries
2022-11-12 20:23:23,971:INFO:Copying training dataset
2022-11-12 20:23:23,972:INFO:Defining folds
2022-11-12 20:23:23,972:INFO:Declaring metric variables
2022-11-12 20:23:23,979:INFO:Importing untrained model
2022-11-12 20:23:23,985:INFO:Gradient Boosting Regressor Imported succesfully
2022-11-12 20:23:23,997:INFO:Starting cross validation
2022-11-12 20:23:23,998:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 20:23:30,423:INFO:Calculating mean and std
2022-11-12 20:23:30,423:INFO:Creating metrics dataframe
2022-11-12 20:23:30,427:INFO:Uploading results into container
2022-11-12 20:23:30,427:INFO:Uploading model into container now
2022-11-12 20:23:30,427:INFO:create_model_container: 15
2022-11-12 20:23:30,427:INFO:master_model_container: 15
2022-11-12 20:23:30,427:INFO:display_container: 2
2022-11-12 20:23:30,428:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=7210, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-12 20:23:30,428:INFO:create_model() succesfully completed......................................
2022-11-12 20:23:30,513:INFO:SubProcess create_model() end ==================================
2022-11-12 20:23:30,513:INFO:Creating metrics dataframe
2022-11-12 20:23:30,527:INFO:Initializing Light Gradient Boosting Machine
2022-11-12 20:23:30,527:INFO:Total runtime is 0.7585662921269735 minutes
2022-11-12 20:23:30,534:INFO:SubProcess create_model() called ==================================
2022-11-12 20:23:30,534:INFO:Initializing create_model()
2022-11-12 20:23:30,534:INFO:create_model(estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002402BA0CE88>, return_train_score=False, kwargs={})
2022-11-12 20:23:30,534:INFO:Checking exceptions
2022-11-12 20:23:30,534:INFO:Importing libraries
2022-11-12 20:23:30,534:INFO:Copying training dataset
2022-11-12 20:23:30,535:INFO:Defining folds
2022-11-12 20:23:30,536:INFO:Declaring metric variables
2022-11-12 20:23:30,542:INFO:Importing untrained model
2022-11-12 20:23:30,548:INFO:Light Gradient Boosting Machine Imported succesfully
2022-11-12 20:23:30,562:INFO:Starting cross validation
2022-11-12 20:23:30,562:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 20:23:37,773:INFO:Calculating mean and std
2022-11-12 20:23:37,775:INFO:Creating metrics dataframe
2022-11-12 20:23:37,780:INFO:Uploading results into container
2022-11-12 20:23:37,780:INFO:Uploading model into container now
2022-11-12 20:23:37,780:INFO:create_model_container: 16
2022-11-12 20:23:37,780:INFO:master_model_container: 16
2022-11-12 20:23:37,780:INFO:display_container: 2
2022-11-12 20:23:37,781:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              device='gpu', importance_type='split', learning_rate=0.1,
              max_depth=-1, min_child_samples=20, min_child_weight=0.001,
              min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
              objective=None, random_state=7210, reg_alpha=0.0, reg_lambda=0.0,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0)
2022-11-12 20:23:37,781:INFO:create_model() succesfully completed......................................
2022-11-12 20:23:37,879:INFO:SubProcess create_model() end ==================================
2022-11-12 20:23:37,879:INFO:Creating metrics dataframe
2022-11-12 20:23:37,894:INFO:Initializing Dummy Regressor
2022-11-12 20:23:37,894:INFO:Total runtime is 0.8813612540562947 minutes
2022-11-12 20:23:37,902:INFO:SubProcess create_model() called ==================================
2022-11-12 20:23:37,902:INFO:Initializing create_model()
2022-11-12 20:23:37,902:INFO:create_model(estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002402BA0CE88>, return_train_score=False, kwargs={})
2022-11-12 20:23:37,902:INFO:Checking exceptions
2022-11-12 20:23:37,902:INFO:Importing libraries
2022-11-12 20:23:37,902:INFO:Copying training dataset
2022-11-12 20:23:37,904:INFO:Defining folds
2022-11-12 20:23:37,904:INFO:Declaring metric variables
2022-11-12 20:23:37,911:INFO:Importing untrained model
2022-11-12 20:23:37,919:INFO:Dummy Regressor Imported succesfully
2022-11-12 20:23:37,935:INFO:Starting cross validation
2022-11-12 20:23:37,936:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 20:23:37,973:INFO:Calculating mean and std
2022-11-12 20:23:37,974:INFO:Creating metrics dataframe
2022-11-12 20:23:37,978:INFO:Uploading results into container
2022-11-12 20:23:37,978:INFO:Uploading model into container now
2022-11-12 20:23:37,978:INFO:create_model_container: 17
2022-11-12 20:23:37,979:INFO:master_model_container: 17
2022-11-12 20:23:37,979:INFO:display_container: 2
2022-11-12 20:23:37,979:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2022-11-12 20:23:37,979:INFO:create_model() succesfully completed......................................
2022-11-12 20:23:38,069:INFO:SubProcess create_model() end ==================================
2022-11-12 20:23:38,069:INFO:Creating metrics dataframe
2022-11-12 20:23:38,101:INFO:Initializing create_model()
2022-11-12 20:23:38,101:INFO:create_model(estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              device='gpu', importance_type='split', learning_rate=0.1,
              max_depth=-1, min_child_samples=20, min_child_weight=0.001,
              min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
              objective=None, random_state=7210, reg_alpha=0.0, reg_lambda=0.0,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-11-12 20:23:38,101:INFO:Checking exceptions
2022-11-12 20:23:38,101:INFO:Importing libraries
2022-11-12 20:23:38,102:INFO:Copying training dataset
2022-11-12 20:23:38,103:INFO:Defining folds
2022-11-12 20:23:38,103:INFO:Declaring metric variables
2022-11-12 20:23:38,103:INFO:Importing untrained model
2022-11-12 20:23:38,103:INFO:Declaring custom model
2022-11-12 20:23:38,104:INFO:Light Gradient Boosting Machine Imported succesfully
2022-11-12 20:23:38,104:INFO:Cross validation set to False
2022-11-12 20:23:38,104:INFO:Fitting Model
2022-11-12 20:23:38,907:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              device='gpu', importance_type='split', learning_rate=0.1,
              max_depth=-1, min_child_samples=20, min_child_weight=0.001,
              min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
              objective=None, random_state=7210, reg_alpha=0.0, reg_lambda=0.0,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0)
2022-11-12 20:23:38,907:INFO:create_models() succesfully completed......................................
2022-11-12 20:23:39,009:INFO:Initializing create_model()
2022-11-12 20:23:39,009:INFO:create_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=7210, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-11-12 20:23:39,010:INFO:Checking exceptions
2022-11-12 20:23:39,010:INFO:Importing libraries
2022-11-12 20:23:39,010:INFO:Copying training dataset
2022-11-12 20:23:39,011:INFO:Defining folds
2022-11-12 20:23:39,011:INFO:Declaring metric variables
2022-11-12 20:23:39,011:INFO:Importing untrained model
2022-11-12 20:23:39,011:INFO:Declaring custom model
2022-11-12 20:23:39,012:INFO:Gradient Boosting Regressor Imported succesfully
2022-11-12 20:23:39,012:INFO:Cross validation set to False
2022-11-12 20:23:39,012:INFO:Fitting Model
2022-11-12 20:23:39,749:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=7210, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-12 20:23:39,749:INFO:create_models() succesfully completed......................................
2022-11-12 20:23:39,836:INFO:Initializing create_model()
2022-11-12 20:23:39,837:INFO:create_model(estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=7210, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-11-12 20:23:39,837:INFO:Checking exceptions
2022-11-12 20:23:39,837:INFO:Importing libraries
2022-11-12 20:23:39,837:INFO:Copying training dataset
2022-11-12 20:23:39,838:INFO:Defining folds
2022-11-12 20:23:39,838:INFO:Declaring metric variables
2022-11-12 20:23:39,838:INFO:Importing untrained model
2022-11-12 20:23:39,838:INFO:Declaring custom model
2022-11-12 20:23:39,839:INFO:Random Forest Regressor Imported succesfully
2022-11-12 20:23:39,839:INFO:Cross validation set to False
2022-11-12 20:23:39,839:INFO:Fitting Model
2022-11-12 20:23:40,653:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=7210, verbose=0, warm_start=False)
2022-11-12 20:23:40,654:INFO:create_models() succesfully completed......................................
2022-11-12 20:23:40,758:INFO:create_model_container: 17
2022-11-12 20:23:40,758:INFO:master_model_container: 17
2022-11-12 20:23:40,758:INFO:display_container: 2
2022-11-12 20:23:40,759:INFO:[LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              device='gpu', importance_type='split', learning_rate=0.1,
              max_depth=-1, min_child_samples=20, min_child_weight=0.001,
              min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
              objective=None, random_state=7210, reg_alpha=0.0, reg_lambda=0.0,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0), GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=7210, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=7210, verbose=0, warm_start=False)]
2022-11-12 20:23:40,759:INFO:compare_models() succesfully completed......................................
2022-11-12 20:23:40,841:INFO:Initializing tune_model()
2022-11-12 20:23:40,842:INFO:tune_model(estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              device='gpu', importance_type='split', learning_rate=0.1,
              max_depth=-1, min_child_samples=20, min_child_weight=0.001,
              min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
              objective=None, random_state=7210, reg_alpha=0.0, reg_lambda=0.0,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0), fold=10, round=4, n_iter=20, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, return_train_score=False, kwargs={})
2022-11-12 20:23:40,842:INFO:Checking exceptions
2022-11-12 20:23:40,842:INFO:Preparing display monitor
2022-11-12 20:23:40,856:INFO:Copying training dataset
2022-11-12 20:23:40,857:INFO:Checking base model
2022-11-12 20:23:40,858:INFO:Base model : Light Gradient Boosting Machine
2022-11-12 20:23:40,866:INFO:Declaring metric variables
2022-11-12 20:23:40,873:INFO:Defining Hyperparameters
2022-11-12 20:23:40,965:INFO:Tuning with n_jobs=1
2022-11-12 20:23:40,965:INFO:Initializing RandomizedSearchCV
2022-11-12 20:25:42,758:INFO:best_params: {'actual_estimator__reg_lambda': 0.4, 'actual_estimator__reg_alpha': 2, 'actual_estimator__num_leaves': 256, 'actual_estimator__n_estimators': 70, 'actual_estimator__min_split_gain': 0.6, 'actual_estimator__min_child_samples': 31, 'actual_estimator__learning_rate': 0.05, 'actual_estimator__feature_fraction': 0.4, 'actual_estimator__bagging_freq': 0, 'actual_estimator__bagging_fraction': 0.8}
2022-11-12 20:25:42,759:INFO:Hyperparameter search completed
2022-11-12 20:25:42,759:INFO:SubProcess create_model() called ==================================
2022-11-12 20:25:42,760:INFO:Initializing create_model()
2022-11-12 20:25:42,760:INFO:create_model(estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              device='gpu', importance_type='split', learning_rate=0.1,
              max_depth=-1, min_child_samples=20, min_child_weight=0.001,
              min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
              objective=None, random_state=7210, reg_alpha=0.0, reg_lambda=0.0,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002402EF90A88>, return_train_score=False, kwargs={'reg_lambda': 0.4, 'reg_alpha': 2, 'num_leaves': 256, 'n_estimators': 70, 'min_split_gain': 0.6, 'min_child_samples': 31, 'learning_rate': 0.05, 'feature_fraction': 0.4, 'bagging_freq': 0, 'bagging_fraction': 0.8})
2022-11-12 20:25:42,760:INFO:Checking exceptions
2022-11-12 20:25:42,760:INFO:Importing libraries
2022-11-12 20:25:42,760:INFO:Copying training dataset
2022-11-12 20:25:42,761:INFO:Defining folds
2022-11-12 20:25:42,761:INFO:Declaring metric variables
2022-11-12 20:25:42,772:INFO:Importing untrained model
2022-11-12 20:25:42,772:INFO:Declaring custom model
2022-11-12 20:25:42,781:INFO:Light Gradient Boosting Machine Imported succesfully
2022-11-12 20:25:42,801:INFO:Starting cross validation
2022-11-12 20:25:42,802:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 20:25:47,364:INFO:Calculating mean and std
2022-11-12 20:25:47,365:INFO:Creating metrics dataframe
2022-11-12 20:25:47,376:INFO:Finalizing model
2022-11-12 20:25:47,877:INFO:Uploading results into container
2022-11-12 20:25:47,877:INFO:Uploading model into container now
2022-11-12 20:25:47,877:INFO:create_model_container: 18
2022-11-12 20:25:47,877:INFO:master_model_container: 18
2022-11-12 20:25:47,877:INFO:display_container: 3
2022-11-12 20:25:47,878:INFO:LGBMRegressor(bagging_fraction=0.8, bagging_freq=0, boosting_type='gbdt',
              class_weight=None, colsample_bytree=1.0, device='gpu',
              feature_fraction=0.4, importance_type='split', learning_rate=0.05,
              max_depth=-1, min_child_samples=31, min_child_weight=0.001,
              min_split_gain=0.6, n_estimators=70, n_jobs=-1, num_leaves=256,
              objective=None, random_state=7210, reg_alpha=2, reg_lambda=0.4,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0)
2022-11-12 20:25:47,878:INFO:create_model() succesfully completed......................................
2022-11-12 20:25:47,973:INFO:SubProcess create_model() end ==================================
2022-11-12 20:25:47,982:INFO:create_model_container: 18
2022-11-12 20:25:47,982:INFO:master_model_container: 18
2022-11-12 20:25:47,983:INFO:display_container: 3
2022-11-12 20:25:47,983:INFO:LGBMRegressor(bagging_fraction=0.8, bagging_freq=0, boosting_type='gbdt',
              class_weight=None, colsample_bytree=1.0, device='gpu',
              feature_fraction=0.4, importance_type='split', learning_rate=0.05,
              max_depth=-1, min_child_samples=31, min_child_weight=0.001,
              min_split_gain=0.6, n_estimators=70, n_jobs=-1, num_leaves=256,
              objective=None, random_state=7210, reg_alpha=2, reg_lambda=0.4,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0)
2022-11-12 20:25:47,983:INFO:tune_model() succesfully completed......................................
2022-11-12 20:25:48,149:INFO:Initializing tune_model()
2022-11-12 20:25:48,149:INFO:tune_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=7210, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), fold=10, round=4, n_iter=100, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, return_train_score=False, kwargs={})
2022-11-12 20:25:48,149:INFO:Checking exceptions
2022-11-12 20:25:48,149:INFO:Preparing display monitor
2022-11-12 20:25:48,164:INFO:Copying training dataset
2022-11-12 20:25:48,165:INFO:Checking base model
2022-11-12 20:25:48,165:INFO:Base model : Gradient Boosting Regressor
2022-11-12 20:25:48,172:INFO:Declaring metric variables
2022-11-12 20:25:48,178:INFO:Defining Hyperparameters
2022-11-12 20:25:48,268:INFO:Tuning with n_jobs=-1
2022-11-12 20:25:48,268:INFO:Initializing RandomizedSearchCV
2022-11-12 20:26:38,940:INFO:best_params: {'actual_estimator__subsample': 0.2, 'actual_estimator__n_estimators': 260, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.3, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 4, 'actual_estimator__learning_rate': 0.05}
2022-11-12 20:26:38,941:INFO:Hyperparameter search completed
2022-11-12 20:26:38,941:INFO:SubProcess create_model() called ==================================
2022-11-12 20:26:38,942:INFO:Initializing create_model()
2022-11-12 20:26:38,942:INFO:create_model(estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=7210, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002400AA48548>, return_train_score=False, kwargs={'subsample': 0.2, 'n_estimators': 260, 'min_samples_split': 2, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.3, 'max_features': 1.0, 'max_depth': 4, 'learning_rate': 0.05})
2022-11-12 20:26:38,942:INFO:Checking exceptions
2022-11-12 20:26:38,942:INFO:Importing libraries
2022-11-12 20:26:38,942:INFO:Copying training dataset
2022-11-12 20:26:38,943:INFO:Defining folds
2022-11-12 20:26:38,943:INFO:Declaring metric variables
2022-11-12 20:26:38,950:INFO:Importing untrained model
2022-11-12 20:26:38,950:INFO:Declaring custom model
2022-11-12 20:26:38,956:INFO:Gradient Boosting Regressor Imported succesfully
2022-11-12 20:26:38,968:INFO:Starting cross validation
2022-11-12 20:26:38,969:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 20:26:43,740:INFO:Calculating mean and std
2022-11-12 20:26:43,741:INFO:Creating metrics dataframe
2022-11-12 20:26:43,748:INFO:Finalizing model
2022-11-12 20:26:44,267:INFO:Uploading results into container
2022-11-12 20:26:44,267:INFO:Uploading model into container now
2022-11-12 20:26:44,267:INFO:create_model_container: 19
2022-11-12 20:26:44,267:INFO:master_model_container: 19
2022-11-12 20:26:44,267:INFO:display_container: 4
2022-11-12 20:26:44,267:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.05, loss='ls', max_depth=4,
                          max_features=1.0, max_leaf_nodes=None,
                          min_impurity_decrease=0.3, min_impurity_split=None,
                          min_samples_leaf=5, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=260,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=7210, subsample=0.2, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-12 20:26:44,267:INFO:create_model() succesfully completed......................................
2022-11-12 20:26:44,347:INFO:SubProcess create_model() end ==================================
2022-11-12 20:26:44,356:INFO:create_model_container: 19
2022-11-12 20:26:44,356:INFO:master_model_container: 19
2022-11-12 20:26:44,356:INFO:display_container: 4
2022-11-12 20:26:44,356:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.05, loss='ls', max_depth=4,
                          max_features=1.0, max_leaf_nodes=None,
                          min_impurity_decrease=0.3, min_impurity_split=None,
                          min_samples_leaf=5, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=260,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=7210, subsample=0.2, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-12 20:26:44,356:INFO:tune_model() succesfully completed......................................
2022-11-12 20:26:44,478:INFO:Initializing tune_model()
2022-11-12 20:26:44,478:INFO:tune_model(estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=7210, verbose=0, warm_start=False), fold=10, round=4, n_iter=100, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, return_train_score=False, kwargs={})
2022-11-12 20:26:44,479:INFO:Checking exceptions
2022-11-12 20:26:44,479:INFO:Preparing display monitor
2022-11-12 20:26:44,493:INFO:Copying training dataset
2022-11-12 20:26:44,494:INFO:Checking base model
2022-11-12 20:26:44,494:INFO:Base model : Random Forest Regressor
2022-11-12 20:26:44,501:INFO:Declaring metric variables
2022-11-12 20:26:44,507:INFO:Defining Hyperparameters
2022-11-12 20:26:44,584:INFO:Tuning with n_jobs=-1
2022-11-12 20:26:44,584:INFO:Initializing RandomizedSearchCV
2022-11-12 20:38:57,826:INFO:best_params: {'actual_estimator__n_estimators': 200, 'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.05, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'mse', 'actual_estimator__bootstrap': True}
2022-11-12 20:38:57,827:INFO:Hyperparameter search completed
2022-11-12 20:38:57,827:INFO:SubProcess create_model() called ==================================
2022-11-12 20:38:57,828:INFO:Initializing create_model()
2022-11-12 20:38:57,828:INFO:create_model(estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=7210, verbose=0, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002402EDCA708>, return_train_score=False, kwargs={'n_estimators': 200, 'min_samples_split': 9, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.05, 'max_features': 1.0, 'max_depth': 10, 'criterion': 'mse', 'bootstrap': True})
2022-11-12 20:38:57,828:INFO:Checking exceptions
2022-11-12 20:38:57,828:INFO:Importing libraries
2022-11-12 20:38:57,828:INFO:Copying training dataset
2022-11-12 20:38:57,829:INFO:Defining folds
2022-11-12 20:38:57,829:INFO:Declaring metric variables
2022-11-12 20:38:57,835:INFO:Importing untrained model
2022-11-12 20:38:57,835:INFO:Declaring custom model
2022-11-12 20:38:57,841:INFO:Random Forest Regressor Imported succesfully
2022-11-12 20:38:57,854:INFO:Starting cross validation
2022-11-12 20:38:57,855:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 20:39:09,037:INFO:Calculating mean and std
2022-11-12 20:39:09,037:INFO:Creating metrics dataframe
2022-11-12 20:39:09,044:INFO:Finalizing model
2022-11-12 20:39:09,879:INFO:Uploading results into container
2022-11-12 20:39:09,880:INFO:Uploading model into container now
2022-11-12 20:39:09,880:INFO:create_model_container: 20
2022-11-12 20:39:09,880:INFO:master_model_container: 20
2022-11-12 20:39:09,880:INFO:display_container: 5
2022-11-12 20:39:09,880:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=10, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.05,
                      min_impurity_split=None, min_samples_leaf=2,
                      min_samples_split=9, min_weight_fraction_leaf=0.0,
                      n_estimators=200, n_jobs=-1, oob_score=False,
                      random_state=7210, verbose=0, warm_start=False)
2022-11-12 20:39:09,880:INFO:create_model() succesfully completed......................................
2022-11-12 20:39:09,957:INFO:SubProcess create_model() end ==================================
2022-11-12 20:39:09,967:INFO:create_model_container: 20
2022-11-12 20:39:09,967:INFO:master_model_container: 20
2022-11-12 20:39:09,967:INFO:display_container: 5
2022-11-12 20:39:09,967:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=10, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.05,
                      min_impurity_split=None, min_samples_leaf=2,
                      min_samples_split=9, min_weight_fraction_leaf=0.0,
                      n_estimators=200, n_jobs=-1, oob_score=False,
                      random_state=7210, verbose=0, warm_start=False)
2022-11-12 20:39:09,967:INFO:tune_model() succesfully completed......................................
2022-11-12 20:39:10,118:INFO:Initializing blend_models()
2022-11-12 20:39:10,118:INFO:blend_models(estimator_list=[LGBMRegressor(bagging_fraction=0.8, bagging_freq=0, boosting_type='gbdt',
              class_weight=None, colsample_bytree=1.0, device='gpu',
              feature_fraction=0.4, importance_type='split', learning_rate=0.05,
              max_depth=-1, min_child_samples=31, min_child_weight=0.001,
              min_split_gain=0.6, n_estimators=70, n_jobs=-1, num_leaves=256,
              objective=None, random_state=7210, reg_alpha=2, reg_lambda=0.4,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0), GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.05, loss='ls', max_depth=4,
                          max_features=1.0, max_leaf_nodes=None,
                          min_impurity_decrease=0.3, min_impurity_split=None,
                          min_samples_leaf=5, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=260,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=7210, subsample=0.2, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=10, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.05,
                      min_impurity_split=None, min_samples_leaf=2,
                      min_samples_split=9, min_weight_fraction_leaf=0.0,
                      n_estimators=200, n_jobs=-1, oob_score=False,
                      random_state=7210, verbose=0, warm_start=False)], fold=None, round=4, choose_better=False, optimize=RMSE, method=auto, weights=None, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, display=None, return_train_score=False)
2022-11-12 20:39:10,118:INFO:Checking exceptions
2022-11-12 20:39:10,119:INFO:Preparing display monitor
2022-11-12 20:39:10,132:INFO:Importing libraries
2022-11-12 20:39:10,132:INFO:Copying training dataset
2022-11-12 20:39:10,139:INFO:Getting model names
2022-11-12 20:39:10,145:INFO:SubProcess create_model() called ==================================
2022-11-12 20:39:10,150:INFO:Initializing create_model()
2022-11-12 20:39:10,150:INFO:create_model(estimator=VotingRegressor(estimators=[('lightgbm',
                             LGBMRegressor(bagging_fraction=0.8, bagging_freq=0,
                                           boosting_type='gbdt',
                                           class_weight=None,
                                           colsample_bytree=1.0, device='gpu',
                                           feature_fraction=0.4,
                                           importance_type='split',
                                           learning_rate=0.05, max_depth=-1,
                                           min_child_samples=31,
                                           min_child_weight=0.001,
                                           min_split_gain=0.6, n_estimators=70,
                                           n_jobs=-1, num_leaves=256,
                                           object...
                             RandomForestRegressor(bootstrap=True,
                                                   ccp_alpha=0.0,
                                                   criterion='mse',
                                                   max_depth=10,
                                                   max_features=1.0,
                                                   max_leaf_nodes=None,
                                                   max_samples=None,
                                                   min_impurity_decrease=0.05,
                                                   min_impurity_split=None,
                                                   min_samples_leaf=2,
                                                   min_samples_split=9,
                                                   min_weight_fraction_leaf=0.0,
                                                   n_estimators=200, n_jobs=-1,
                                                   oob_score=False,
                                                   random_state=7210, verbose=0,
                                                   warm_start=False))],
                n_jobs=1, verbose=False, weights=None), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002402E89E3C8>, return_train_score=False, kwargs={})
2022-11-12 20:39:10,150:INFO:Checking exceptions
2022-11-12 20:39:10,150:INFO:Importing libraries
2022-11-12 20:39:10,150:INFO:Copying training dataset
2022-11-12 20:39:10,151:INFO:Defining folds
2022-11-12 20:39:10,151:INFO:Declaring metric variables
2022-11-12 20:39:10,157:INFO:Importing untrained model
2022-11-12 20:39:10,158:INFO:Declaring custom model
2022-11-12 20:39:10,165:INFO:Voting Regressor Imported succesfully
2022-11-12 20:39:10,177:INFO:Starting cross validation
2022-11-12 20:39:10,177:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 20:39:24,411:INFO:Calculating mean and std
2022-11-12 20:39:24,412:INFO:Creating metrics dataframe
2022-11-12 20:39:24,418:INFO:Finalizing model
2022-11-12 20:39:25,773:INFO:Uploading results into container
2022-11-12 20:39:25,773:INFO:Uploading model into container now
2022-11-12 20:39:25,773:INFO:create_model_container: 21
2022-11-12 20:39:25,773:INFO:master_model_container: 21
2022-11-12 20:39:25,773:INFO:display_container: 6
2022-11-12 20:39:25,777:INFO:VotingRegressor(estimators=[('lightgbm',
                             LGBMRegressor(bagging_fraction=0.8, bagging_freq=0,
                                           boosting_type='gbdt',
                                           class_weight=None,
                                           colsample_bytree=1.0, device='gpu',
                                           feature_fraction=0.4,
                                           importance_type='split',
                                           learning_rate=0.05, max_depth=-1,
                                           min_child_samples=31,
                                           min_child_weight=0.001,
                                           min_split_gain=0.6, n_estimators=70,
                                           n_jobs=-1, num_leaves=256,
                                           object...
                             RandomForestRegressor(bootstrap=True,
                                                   ccp_alpha=0.0,
                                                   criterion='mse',
                                                   max_depth=10,
                                                   max_features=1.0,
                                                   max_leaf_nodes=None,
                                                   max_samples=None,
                                                   min_impurity_decrease=0.05,
                                                   min_impurity_split=None,
                                                   min_samples_leaf=2,
                                                   min_samples_split=9,
                                                   min_weight_fraction_leaf=0.0,
                                                   n_estimators=200, n_jobs=-1,
                                                   oob_score=False,
                                                   random_state=7210, verbose=0,
                                                   warm_start=False))],
                n_jobs=1, verbose=False, weights=None)
2022-11-12 20:39:25,777:INFO:create_model() succesfully completed......................................
2022-11-12 20:39:25,848:INFO:SubProcess create_model() end ==================================
2022-11-12 20:39:25,856:INFO:create_model_container: 21
2022-11-12 20:39:25,857:INFO:master_model_container: 21
2022-11-12 20:39:25,857:INFO:display_container: 6
2022-11-12 20:39:25,861:INFO:VotingRegressor(estimators=[('lightgbm',
                             LGBMRegressor(bagging_fraction=0.8, bagging_freq=0,
                                           boosting_type='gbdt',
                                           class_weight=None,
                                           colsample_bytree=1.0, device='gpu',
                                           feature_fraction=0.4,
                                           importance_type='split',
                                           learning_rate=0.05, max_depth=-1,
                                           min_child_samples=31,
                                           min_child_weight=0.001,
                                           min_split_gain=0.6, n_estimators=70,
                                           n_jobs=-1, num_leaves=256,
                                           object...
                             RandomForestRegressor(bootstrap=True,
                                                   ccp_alpha=0.0,
                                                   criterion='mse',
                                                   max_depth=10,
                                                   max_features=1.0,
                                                   max_leaf_nodes=None,
                                                   max_samples=None,
                                                   min_impurity_decrease=0.05,
                                                   min_impurity_split=None,
                                                   min_samples_leaf=2,
                                                   min_samples_split=9,
                                                   min_weight_fraction_leaf=0.0,
                                                   n_estimators=200, n_jobs=-1,
                                                   oob_score=False,
                                                   random_state=7210, verbose=0,
                                                   warm_start=False))],
                n_jobs=1, verbose=False, weights=None)
2022-11-12 20:39:25,861:INFO:blend_models() succesfully completed......................................
2022-11-12 20:39:25,968:INFO:Initializing stack_models()
2022-11-12 20:39:25,969:INFO:stack_models(estimator_list=[LGBMRegressor(bagging_fraction=0.8, bagging_freq=0, boosting_type='gbdt',
              class_weight=None, colsample_bytree=1.0, device='gpu',
              feature_fraction=0.4, importance_type='split', learning_rate=0.05,
              max_depth=-1, min_child_samples=31, min_child_weight=0.001,
              min_split_gain=0.6, n_estimators=70, n_jobs=-1, num_leaves=256,
              objective=None, random_state=7210, reg_alpha=2, reg_lambda=0.4,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0), GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.05, loss='ls', max_depth=4,
                          max_features=1.0, max_leaf_nodes=None,
                          min_impurity_decrease=0.3, min_impurity_split=None,
                          min_samples_leaf=5, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=260,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=7210, subsample=0.2, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=10, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.05,
                      min_impurity_split=None, min_samples_leaf=2,
                      min_samples_split=9, min_weight_fraction_leaf=0.0,
                      n_estimators=200, n_jobs=-1, oob_score=False,
                      random_state=7210, verbose=0, warm_start=False)], meta_model=None, meta_model_fold=5, fold=None, round=4, method=auto, restack=True, choose_better=False, optimize=RMSE, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, display=None, return_train_score=False)
2022-11-12 20:39:25,969:INFO:Checking exceptions
2022-11-12 20:39:25,969:INFO:Defining meta model
2022-11-12 20:39:25,969:INFO:Preparing display monitor
2022-11-12 20:39:25,982:INFO:Copying training dataset
2022-11-12 20:39:25,988:INFO:Getting model names
2022-11-12 20:39:25,988:INFO:[('lightgbm', LGBMRegressor(bagging_fraction=0.8, bagging_freq=0, boosting_type='gbdt',
              class_weight=None, colsample_bytree=1.0, device='gpu',
              feature_fraction=0.4, importance_type='split', learning_rate=0.05,
              max_depth=-1, min_child_samples=31, min_child_weight=0.001,
              min_split_gain=0.6, n_estimators=70, n_jobs=-1, num_leaves=256,
              objective=None, random_state=7210, reg_alpha=2, reg_lambda=0.4,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0)), ('gbr', GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.05, loss='ls', max_depth=4,
                          max_features=1.0, max_leaf_nodes=None,
                          min_impurity_decrease=0.3, min_impurity_split=None,
                          min_samples_leaf=5, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=260,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=7210, subsample=0.2, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)), ('rf', RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=10, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.05,
                      min_impurity_split=None, min_samples_leaf=2,
                      min_samples_split=9, min_weight_fraction_leaf=0.0,
                      n_estimators=200, n_jobs=-1, oob_score=False,
                      random_state=7210, verbose=0, warm_start=False))]
2022-11-12 20:39:25,995:INFO:SubProcess create_model() called ==================================
2022-11-12 20:39:26,000:INFO:Initializing create_model()
2022-11-12 20:39:26,000:INFO:create_model(estimator=StackingRegressor(cv=5,
                  estimators=[('lightgbm',
                               LGBMRegressor(bagging_fraction=0.8,
                                             bagging_freq=0,
                                             boosting_type='gbdt',
                                             class_weight=None,
                                             colsample_bytree=1.0, device='gpu',
                                             feature_fraction=0.4,
                                             importance_type='split',
                                             learning_rate=0.05, max_depth=-1,
                                             min_child_samples=31,
                                             min_child_weight=0.001,
                                             min_split_gain=0.6,
                                             n_estimators=70, n_jobs=-1,
                                             num_leaves=256...
                                                     max_samples=None,
                                                     min_impurity_decrease=0.05,
                                                     min_impurity_split=None,
                                                     min_samples_leaf=2,
                                                     min_samples_split=9,
                                                     min_weight_fraction_leaf=0.0,
                                                     n_estimators=200,
                                                     n_jobs=-1, oob_score=False,
                                                     random_state=7210,
                                                     verbose=0,
                                                     warm_start=False))],
                  final_estimator=LinearRegression(copy_X=True,
                                                   fit_intercept=True,
                                                   n_jobs=-1, normalize=False),
                  n_jobs=1, passthrough=True, verbose=0), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x000002402BA9F608>, return_train_score=False, kwargs={})
2022-11-12 20:39:26,000:INFO:Checking exceptions
2022-11-12 20:39:26,000:INFO:Importing libraries
2022-11-12 20:39:26,000:INFO:Copying training dataset
2022-11-12 20:39:26,001:INFO:Defining folds
2022-11-12 20:39:26,001:INFO:Declaring metric variables
2022-11-12 20:39:26,007:INFO:Importing untrained model
2022-11-12 20:39:26,007:INFO:Declaring custom model
2022-11-12 20:39:26,014:INFO:Stacking Regressor Imported succesfully
2022-11-12 20:39:26,025:INFO:Starting cross validation
2022-11-12 20:39:26,026:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 20:40:41,772:INFO:Calculating mean and std
2022-11-12 20:40:41,773:INFO:Creating metrics dataframe
2022-11-12 20:40:41,780:INFO:Finalizing model
2022-11-12 20:40:49,728:INFO:Uploading results into container
2022-11-12 20:40:49,728:INFO:Uploading model into container now
2022-11-12 20:40:49,728:INFO:create_model_container: 22
2022-11-12 20:40:49,728:INFO:master_model_container: 22
2022-11-12 20:40:49,728:INFO:display_container: 7
2022-11-12 20:40:49,733:INFO:StackingRegressor(cv=5,
                  estimators=[('lightgbm',
                               LGBMRegressor(bagging_fraction=0.8,
                                             bagging_freq=0,
                                             boosting_type='gbdt',
                                             class_weight=None,
                                             colsample_bytree=1.0, device='gpu',
                                             feature_fraction=0.4,
                                             importance_type='split',
                                             learning_rate=0.05, max_depth=-1,
                                             min_child_samples=31,
                                             min_child_weight=0.001,
                                             min_split_gain=0.6,
                                             n_estimators=70, n_jobs=-1,
                                             num_leaves=256...
                                                     max_samples=None,
                                                     min_impurity_decrease=0.05,
                                                     min_impurity_split=None,
                                                     min_samples_leaf=2,
                                                     min_samples_split=9,
                                                     min_weight_fraction_leaf=0.0,
                                                     n_estimators=200,
                                                     n_jobs=-1, oob_score=False,
                                                     random_state=7210,
                                                     verbose=0,
                                                     warm_start=False))],
                  final_estimator=LinearRegression(copy_X=True,
                                                   fit_intercept=True,
                                                   n_jobs=-1, normalize=False),
                  n_jobs=1, passthrough=True, verbose=0)
2022-11-12 20:40:49,733:INFO:create_model() succesfully completed......................................
2022-11-12 20:40:49,807:INFO:SubProcess create_model() end ==================================
2022-11-12 20:40:49,816:INFO:create_model_container: 22
2022-11-12 20:40:49,816:INFO:master_model_container: 22
2022-11-12 20:40:49,816:INFO:display_container: 7
2022-11-12 20:40:49,822:INFO:StackingRegressor(cv=5,
                  estimators=[('lightgbm',
                               LGBMRegressor(bagging_fraction=0.8,
                                             bagging_freq=0,
                                             boosting_type='gbdt',
                                             class_weight=None,
                                             colsample_bytree=1.0, device='gpu',
                                             feature_fraction=0.4,
                                             importance_type='split',
                                             learning_rate=0.05, max_depth=-1,
                                             min_child_samples=31,
                                             min_child_weight=0.001,
                                             min_split_gain=0.6,
                                             n_estimators=70, n_jobs=-1,
                                             num_leaves=256...
                                                     max_samples=None,
                                                     min_impurity_decrease=0.05,
                                                     min_impurity_split=None,
                                                     min_samples_leaf=2,
                                                     min_samples_split=9,
                                                     min_weight_fraction_leaf=0.0,
                                                     n_estimators=200,
                                                     n_jobs=-1, oob_score=False,
                                                     random_state=7210,
                                                     verbose=0,
                                                     warm_start=False))],
                  final_estimator=LinearRegression(copy_X=True,
                                                   fit_intercept=True,
                                                   n_jobs=-1, normalize=False),
                  n_jobs=1, passthrough=True, verbose=0)
2022-11-12 20:40:49,822:INFO:stack_models() succesfully completed......................................
2022-11-12 20:40:49,970:INFO:Initializing plot_model()
2022-11-12 20:40:49,971:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=LGBMRegressor(bagging_fraction=0.8, bagging_freq=0, boosting_type='gbdt',
              class_weight=None, colsample_bytree=1.0, device='gpu',
              feature_fraction=0.4, importance_type='split', learning_rate=0.05,
              max_depth=-1, min_child_samples=31, min_child_weight=0.001,
              min_split_gain=0.6, n_estimators=70, n_jobs=-1, num_leaves=256,
              objective=None, random_state=7210, reg_alpha=2, reg_lambda=0.4,
              silent='warn', subsample=1.0, subsample_for_bin=200000,
              subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=feature, plot_kwargs=None, save=False, scale=1, system=True)
2022-11-12 20:40:49,971:INFO:Checking exceptions
2022-11-12 20:40:49,971:INFO:Preparing display monitor
2022-11-12 20:40:49,977:INFO:Preloading libraries
2022-11-12 20:40:49,981:INFO:Copying training dataset
2022-11-12 20:40:49,982:INFO:Copying test dataset
2022-11-12 20:40:49,982:INFO:Plot type: feature
2022-11-12 20:40:49,985:WARNING:No coef_ found. Trying feature_importances_
2022-11-12 20:40:50,146:INFO:Visual Rendered Successfully
2022-11-12 20:40:50,223:INFO:plot_model() succesfully completed......................................
2022-11-12 20:40:50,271:INFO:Initializing plot_model()
2022-11-12 20:40:50,271:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.05, loss='ls', max_depth=4,
                          max_features=1.0, max_leaf_nodes=None,
                          min_impurity_decrease=0.3, min_impurity_split=None,
                          min_samples_leaf=5, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=260,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=7210, subsample=0.2, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=feature, plot_kwargs=None, save=False, scale=1, system=True)
2022-11-12 20:40:50,271:INFO:Checking exceptions
2022-11-12 20:40:50,273:INFO:Preparing display monitor
2022-11-12 20:40:50,279:INFO:Preloading libraries
2022-11-12 20:40:50,298:INFO:Copying training dataset
2022-11-12 20:40:50,299:INFO:Copying test dataset
2022-11-12 20:40:50,299:INFO:Plot type: feature
2022-11-12 20:40:50,303:WARNING:No coef_ found. Trying feature_importances_
2022-11-12 20:40:50,408:INFO:Visual Rendered Successfully
2022-11-12 20:40:50,484:INFO:plot_model() succesfully completed......................................
2022-11-12 20:40:50,510:INFO:Initializing plot_model()
2022-11-12 20:40:50,510:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=10, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.05,
                      min_impurity_split=None, min_samples_leaf=2,
                      min_samples_split=9, min_weight_fraction_leaf=0.0,
                      n_estimators=200, n_jobs=-1, oob_score=False,
                      random_state=7210, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=feature, plot_kwargs=None, save=False, scale=1, system=True)
2022-11-12 20:40:50,511:INFO:Checking exceptions
2022-11-12 20:40:50,617:INFO:Preparing display monitor
2022-11-12 20:40:50,623:INFO:Preloading libraries
2022-11-12 20:40:50,637:INFO:Copying training dataset
2022-11-12 20:40:50,637:INFO:Copying test dataset
2022-11-12 20:40:50,638:INFO:Plot type: feature
2022-11-12 20:40:50,856:WARNING:No coef_ found. Trying feature_importances_
2022-11-12 20:40:51,065:INFO:Visual Rendered Successfully
2022-11-12 20:40:51,140:INFO:plot_model() succesfully completed......................................
2022-11-12 20:40:51,184:INFO:Initializing predict_model()
2022-11-12 20:40:51,184:INFO:predict_model(estimator=VotingRegressor(estimators=[('lightgbm',
                             LGBMRegressor(bagging_fraction=0.8, bagging_freq=0,
                                           boosting_type='gbdt',
                                           class_weight=None,
                                           colsample_bytree=1.0, device='gpu',
                                           feature_fraction=0.4,
                                           importance_type='split',
                                           learning_rate=0.05, max_depth=-1,
                                           min_child_samples=31,
                                           min_child_weight=0.001,
                                           min_split_gain=0.6, n_estimators=70,
                                           n_jobs=-1, num_leaves=256,
                                           object...
                             RandomForestRegressor(bootstrap=True,
                                                   ccp_alpha=0.0,
                                                   criterion='mse',
                                                   max_depth=10,
                                                   max_features=1.0,
                                                   max_leaf_nodes=None,
                                                   max_samples=None,
                                                   min_impurity_decrease=0.05,
                                                   min_impurity_split=None,
                                                   min_samples_leaf=2,
                                                   min_samples_split=9,
                                                   min_weight_fraction_leaf=0.0,
                                                   n_estimators=200, n_jobs=-1,
                                                   oob_score=False,
                                                   random_state=7210, verbose=0,
                                                   warm_start=False))],
                n_jobs=1, verbose=False, weights=None), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2022-11-12 20:40:51,185:INFO:Checking exceptions
2022-11-12 20:40:51,185:INFO:Preloading libraries
2022-11-12 20:40:51,185:INFO:Preparing display monitor
2022-11-12 20:40:51,664:INFO:Initializing finalize_model()
2022-11-12 20:40:51,664:INFO:finalize_model(estimator=VotingRegressor(estimators=[('lightgbm',
                             LGBMRegressor(bagging_fraction=0.8, bagging_freq=0,
                                           boosting_type='gbdt',
                                           class_weight=None,
                                           colsample_bytree=1.0, device='gpu',
                                           feature_fraction=0.4,
                                           importance_type='split',
                                           learning_rate=0.05, max_depth=-1,
                                           min_child_samples=31,
                                           min_child_weight=0.001,
                                           min_split_gain=0.6, n_estimators=70,
                                           n_jobs=-1, num_leaves=256,
                                           object...
                             RandomForestRegressor(bootstrap=True,
                                                   ccp_alpha=0.0,
                                                   criterion='mse',
                                                   max_depth=10,
                                                   max_features=1.0,
                                                   max_leaf_nodes=None,
                                                   max_samples=None,
                                                   min_impurity_decrease=0.05,
                                                   min_impurity_split=None,
                                                   min_samples_leaf=2,
                                                   min_samples_split=9,
                                                   min_weight_fraction_leaf=0.0,
                                                   n_estimators=200, n_jobs=-1,
                                                   oob_score=False,
                                                   random_state=7210, verbose=0,
                                                   warm_start=False))],
                n_jobs=1, verbose=False, weights=None), fit_kwargs=None, groups=None, model_only=True, display=None, experiment_custom_tags=None, return_train_score=False)
2022-11-12 20:40:51,668:INFO:Finalizing VotingRegressor(estimators=[('lightgbm',
                             LGBMRegressor(bagging_fraction=0.8, bagging_freq=0,
                                           boosting_type='gbdt',
                                           class_weight=None,
                                           colsample_bytree=1.0, device='gpu',
                                           feature_fraction=0.4,
                                           importance_type='split',
                                           learning_rate=0.05, max_depth=-1,
                                           min_child_samples=31,
                                           min_child_weight=0.001,
                                           min_split_gain=0.6, n_estimators=70,
                                           n_jobs=-1, num_leaves=256,
                                           object...
                             RandomForestRegressor(bootstrap=True,
                                                   ccp_alpha=0.0,
                                                   criterion='mse',
                                                   max_depth=10,
                                                   max_features=1.0,
                                                   max_leaf_nodes=None,
                                                   max_samples=None,
                                                   min_impurity_decrease=0.05,
                                                   min_impurity_split=None,
                                                   min_samples_leaf=2,
                                                   min_samples_split=9,
                                                   min_weight_fraction_leaf=0.0,
                                                   n_estimators=200, n_jobs=-1,
                                                   oob_score=False,
                                                   random_state=7210, verbose=0,
                                                   warm_start=False))],
                n_jobs=1, verbose=False, weights=None)
2022-11-12 20:40:51,672:INFO:Initializing create_model()
2022-11-12 20:40:51,672:INFO:create_model(estimator=VotingRegressor(estimators=[('lightgbm',
                             LGBMRegressor(bagging_fraction=0.8, bagging_freq=0,
                                           boosting_type='gbdt',
                                           class_weight=None,
                                           colsample_bytree=1.0, device='gpu',
                                           feature_fraction=0.4,
                                           importance_type='split',
                                           learning_rate=0.05, max_depth=-1,
                                           min_child_samples=31,
                                           min_child_weight=0.001,
                                           min_split_gain=0.6, n_estimators=70,
                                           n_jobs=-1, num_leaves=256,
                                           object...
                             RandomForestRegressor(bootstrap=True,
                                                   ccp_alpha=0.0,
                                                   criterion='mse',
                                                   max_depth=10,
                                                   max_features=1.0,
                                                   max_leaf_nodes=None,
                                                   max_samples=None,
                                                   min_impurity_decrease=0.05,
                                                   min_impurity_split=None,
                                                   min_samples_leaf=2,
                                                   min_samples_split=9,
                                                   min_weight_fraction_leaf=0.0,
                                                   n_estimators=200, n_jobs=-1,
                                                   oob_score=False,
                                                   random_state=7210, verbose=0,
                                                   warm_start=False))],
                n_jobs=1, verbose=False, weights=None), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=False, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2022-11-12 20:40:51,672:INFO:Checking exceptions
2022-11-12 20:40:51,672:INFO:Importing libraries
2022-11-12 20:40:51,672:INFO:Copying training dataset
2022-11-12 20:40:51,673:INFO:Defining folds
2022-11-12 20:40:51,673:INFO:Declaring metric variables
2022-11-12 20:40:51,673:INFO:Importing untrained model
2022-11-12 20:40:51,673:INFO:Declaring custom model
2022-11-12 20:40:51,675:INFO:Voting Regressor Imported succesfully
2022-11-12 20:40:51,675:INFO:Starting cross validation
2022-11-12 20:40:51,675:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=1
2022-11-12 20:41:09,492:INFO:Calculating mean and std
2022-11-12 20:41:09,492:INFO:Creating metrics dataframe
2022-11-12 20:41:09,494:INFO:Finalizing model
2022-11-12 20:41:11,258:INFO:create_model_container: 22
2022-11-12 20:41:11,258:INFO:master_model_container: 22
2022-11-12 20:41:11,258:INFO:display_container: 8
2022-11-12 20:41:11,262:INFO:VotingRegressor(estimators=[('lightgbm',
                             LGBMRegressor(bagging_fraction=0.8, bagging_freq=0,
                                           boosting_type='gbdt',
                                           class_weight=None,
                                           colsample_bytree=1.0, device='gpu',
                                           feature_fraction=0.4,
                                           importance_type='split',
                                           learning_rate=0.05, max_depth=-1,
                                           min_child_samples=31,
                                           min_child_weight=0.001,
                                           min_split_gain=0.6, n_estimators=70,
                                           n_jobs=-1, num_leaves=256,
                                           object...
                             RandomForestRegressor(bootstrap=True,
                                                   ccp_alpha=0.0,
                                                   criterion='mse',
                                                   max_depth=10,
                                                   max_features=1.0,
                                                   max_leaf_nodes=None,
                                                   max_samples=None,
                                                   min_impurity_decrease=0.05,
                                                   min_impurity_split=None,
                                                   min_samples_leaf=2,
                                                   min_samples_split=9,
                                                   min_weight_fraction_leaf=0.0,
                                                   n_estimators=200, n_jobs=-1,
                                                   oob_score=False,
                                                   random_state=7210, verbose=0,
                                                   warm_start=False))],
                n_jobs=1, verbose=False, weights=None)
2022-11-12 20:41:11,262:INFO:create_model() succesfully completed......................................
2022-11-12 20:41:11,333:INFO:create_model_container: 22
2022-11-12 20:41:11,333:INFO:master_model_container: 22
2022-11-12 20:41:11,333:INFO:display_container: 7
2022-11-12 20:41:11,337:INFO:VotingRegressor(estimators=[('lightgbm',
                             LGBMRegressor(bagging_fraction=0.8, bagging_freq=0,
                                           boosting_type='gbdt',
                                           class_weight=None,
                                           colsample_bytree=1.0, device='gpu',
                                           feature_fraction=0.4,
                                           importance_type='split',
                                           learning_rate=0.05, max_depth=-1,
                                           min_child_samples=31,
                                           min_child_weight=0.001,
                                           min_split_gain=0.6, n_estimators=70,
                                           n_jobs=-1, num_leaves=256,
                                           object...
                             RandomForestRegressor(bootstrap=True,
                                                   ccp_alpha=0.0,
                                                   criterion='mse',
                                                   max_depth=10,
                                                   max_features=1.0,
                                                   max_leaf_nodes=None,
                                                   max_samples=None,
                                                   min_impurity_decrease=0.05,
                                                   min_impurity_split=None,
                                                   min_samples_leaf=2,
                                                   min_samples_split=9,
                                                   min_weight_fraction_leaf=0.0,
                                                   n_estimators=200, n_jobs=-1,
                                                   oob_score=False,
                                                   random_state=7210, verbose=0,
                                                   warm_start=False))],
                n_jobs=1, verbose=False, weights=None)
2022-11-12 20:41:11,337:INFO:finalize_model() succesfully completed......................................
2022-11-12 20:41:13,257:INFO:Initializing get_config()
2022-11-12 20:41:13,257:INFO:get_config(variable=data_before_preprocess)
2022-11-12 20:41:13,264:INFO:Global variable: data_before_preprocess returned as         Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \
0        1          60       RL         65.0     8450   Pave   NaN      Reg   
1        2          20       RL         80.0     9600   Pave   NaN      Reg   
2        3          60       RL         68.0    11250   Pave   NaN      IR1   
3        4          70       RL         60.0     9550   Pave   NaN      IR1   
4        5          60       RL         84.0    14260   Pave   NaN      IR1   
...    ...         ...      ...          ...      ...    ...   ...      ...   
1455  1456          60       RL         62.0     7917   Pave   NaN      Reg   
1456  1457          20       RL         85.0    13175   Pave   NaN      Reg   
1457  1458          70       RL         66.0     9042   Pave   NaN      Reg   
1458  1459          20       RL         68.0     9717   Pave   NaN      Reg   
1459  1460          20       RL         75.0     9937   Pave   NaN      Reg   

     LandContour Utilities  ... PoolArea PoolQC  Fence MiscFeature MiscVal  \
0            Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
1            Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
2            Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
3            Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
4            Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
...          ...       ...  ...      ...    ...    ...         ...     ...   
1455         Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
1456         Lvl    AllPub  ...        0    NaN  MnPrv         NaN       0   
1457         Lvl    AllPub  ...        0    NaN  GdPrv        Shed    2500   
1458         Lvl    AllPub  ...        0    NaN    NaN         NaN       0   
1459         Lvl    AllPub  ...        0    NaN    NaN         NaN       0   

     MoSold YrSold  SaleType  SaleCondition  SalePrice  
0         2   2008        WD         Normal     208500  
1         5   2007        WD         Normal     181500  
2         9   2008        WD         Normal     223500  
3         2   2006        WD        Abnorml     140000  
4        12   2008        WD         Normal     250000  
...     ...    ...       ...            ...        ...  
1455      8   2007        WD         Normal     175000  
1456      2   2010        WD         Normal     210000  
1457      5   2010        WD         Normal     266500  
1458      4   2010        WD         Normal     142125  
1459      6   2008        WD         Normal     147500  

[1460 rows x 81 columns]
2022-11-12 20:41:13,264:INFO:get_config() succesfully completed......................................
2022-11-12 20:41:13,265:INFO:Initializing get_config()
2022-11-12 20:41:13,265:INFO:get_config(variable=prep_pipe)
2022-11-12 20:41:13,268:INFO:Global variable: prep_pipe returned as Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=['Id'],
                                      ml_usecase='regression',
                                      numerical_features=[], target='SalePrice',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_st...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='SalePrice')),
                ('fix_perfect', Remove_100(target='SalePrice')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-11-12 20:41:13,268:INFO:get_config() succesfully completed......................................
2022-11-12 20:41:13,268:INFO:Initializing get_config()
2022-11-12 20:41:13,268:INFO:get_config(variable=prep_pipe)
2022-11-12 20:41:13,271:INFO:Global variable: prep_pipe returned as Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=['Id'],
                                      ml_usecase='regression',
                                      numerical_features=[], target='SalePrice',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_st...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='SalePrice')),
                ('fix_perfect', Remove_100(target='SalePrice')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-11-12 20:41:13,271:INFO:get_config() succesfully completed......................................
2022-11-12 20:41:13,271:INFO:Initializing get_config()
2022-11-12 20:41:13,271:INFO:get_config(variable=prep_pipe)
2022-11-12 20:41:13,274:INFO:Global variable: prep_pipe returned as Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=['Id'],
                                      ml_usecase='regression',
                                      numerical_features=[], target='SalePrice',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_st...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='SalePrice')),
                ('fix_perfect', Remove_100(target='SalePrice')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-11-12 20:41:13,274:INFO:get_config() succesfully completed......................................
2022-11-12 20:42:45,329:INFO:PyCaret Supervised Module
2022-11-12 20:42:45,330:INFO:ML Usecase: regression
2022-11-12 20:42:45,330:INFO:version 2.3.10
2022-11-12 20:42:45,330:INFO:Initializing setup()
2022-11-12 20:42:45,330:INFO:setup(target=SalePrice, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=True, custom_pipeline=None, html=True, session_id=1, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-11-12 20:42:45,330:INFO:Checking environment
2022-11-12 20:42:45,330:INFO:python_version: 3.7.8
2022-11-12 20:42:45,330:INFO:python_build: ('tags/v3.7.8:4b47a5b6ba', 'Jun 28 2020 08:53:46')
2022-11-12 20:42:45,330:INFO:machine: AMD64
2022-11-12 20:42:45,330:INFO:platform: Windows-10-10.0.19041-SP0
2022-11-12 20:42:45,336:INFO:Memory: svmem(total=17090736128, available=5256237056, percent=69.2, used=11834499072, free=5256237056)
2022-11-12 20:42:45,336:INFO:Physical Core: 8
2022-11-12 20:42:45,336:INFO:Logical Core: 16
2022-11-12 20:42:45,336:INFO:Checking libraries
2022-11-12 20:42:45,336:INFO:pd==1.3.5
2022-11-12 20:42:45,336:INFO:numpy==1.19.5
2022-11-12 20:42:45,336:INFO:sklearn==0.23.2
2022-11-12 20:42:45,337:INFO:lightgbm==3.3.3
2022-11-12 20:42:45,337:WARNING:catboost not found
2022-11-12 20:42:45,338:WARNING:xgboost not found
2022-11-12 20:42:45,338:INFO:mlflow==1.30.0
2022-11-12 20:42:45,338:INFO:Checking Exceptions
2022-11-12 20:42:45,338:INFO:Declaring global variables
2022-11-12 20:42:45,338:INFO:USI: bd67
2022-11-12 20:42:45,338:INFO:pycaret_globals: {'_gpu_n_jobs_param', '_all_metrics', 'log_plots_param', 'fold_groups_param', 'imputation_classifier', '_all_models_internal', 'y_train', 'X_test', 'display_container', 'create_model_container', 'transform_target_param', 'X', 'prep_pipe', '_ml_usecase', 'imputation_regressor', 'exp_name_log', 'fold_shuffle_param', 'fix_imbalance_param', 'fold_param', 'master_model_container', '_internal_pipeline', 'n_jobs_param', '_all_models', 'fold_generator', 'html_param', 'experiment__', 'logging_param', '_available_plots', 'seed', 'y_test', 'pycaret_globals', 'USI', 'stratify_param', 'fold_groups_param_full', 'dashboard_logger', 'fix_imbalance_method_param', 'X_train', 'gpu_param', 'transform_target_method_param', 'y', 'target_param', 'iterative_imputation_iters_param', 'data_before_preprocess'}
2022-11-12 20:42:45,338:INFO:Preparing display monitor
2022-11-12 20:42:45,338:INFO:Preparing display monitor
2022-11-12 20:42:45,348:INFO:Importing libraries
2022-11-12 20:42:45,348:INFO:Copying data for preprocessing
2022-11-12 20:42:45,355:INFO:Declaring preprocessing parameters
2022-11-12 20:42:45,356:WARNING:cuML not found
2022-11-12 20:42:45,356:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.3.3
2022-11-12 20:42:45,358:INFO:Creating preprocessing pipeline
2022-11-12 20:42:45,384:INFO:Preprocessing pipeline created successfully
2022-11-12 20:42:45,384:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-11-12 20:42:45,385:INFO:Creating global containers
2022-11-12 20:42:45,385:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-11-12 20:45:47,427:INFO:PyCaret Supervised Module
2022-11-12 20:45:47,427:INFO:ML Usecase: regression
2022-11-12 20:45:47,427:INFO:version 2.3.10
2022-11-12 20:45:47,427:INFO:Initializing setup()
2022-11-12 20:45:47,427:INFO:setup(target=SalePrice, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=True, custom_pipeline=None, html=True, session_id=1, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-11-12 20:45:47,427:INFO:Checking environment
2022-11-12 20:45:47,427:INFO:python_version: 3.7.8
2022-11-12 20:45:47,427:INFO:python_build: ('tags/v3.7.8:4b47a5b6ba', 'Jun 28 2020 08:53:46')
2022-11-12 20:45:47,427:INFO:machine: AMD64
2022-11-12 20:45:47,427:INFO:platform: Windows-10-10.0.19041-SP0
2022-11-12 20:45:47,431:INFO:Memory: svmem(total=17090736128, available=7680790528, percent=55.1, used=9409945600, free=7680790528)
2022-11-12 20:45:47,432:INFO:Physical Core: 8
2022-11-12 20:45:47,432:INFO:Logical Core: 16
2022-11-12 20:45:47,432:INFO:Checking libraries
2022-11-12 20:45:47,432:INFO:pd==1.3.5
2022-11-12 20:45:47,432:INFO:numpy==1.19.5
2022-11-12 20:45:47,432:INFO:sklearn==0.23.2
2022-11-12 20:45:47,432:INFO:lightgbm==3.3.3
2022-11-12 20:45:47,432:WARNING:catboost not found
2022-11-12 20:45:47,433:WARNING:xgboost not found
2022-11-12 20:45:47,433:INFO:mlflow==1.30.0
2022-11-12 20:45:47,433:INFO:Checking Exceptions
2022-11-12 20:45:47,433:INFO:Declaring global variables
2022-11-12 20:45:47,433:INFO:USI: 11e9
2022-11-12 20:45:47,433:INFO:pycaret_globals: {'gpu_param', 'fix_imbalance_method_param', 'dashboard_logger', '_available_plots', 'logging_param', 'fold_shuffle_param', 'html_param', 'data_before_preprocess', 'master_model_container', 'n_jobs_param', 'fix_imbalance_param', 'seed', 'imputation_regressor', '_all_metrics', 'y_train', 'fold_groups_param', 'y_test', 'X_test', 'fold_param', '_all_models', '_internal_pipeline', '_all_models_internal', 'imputation_classifier', 'fold_groups_param_full', 'stratify_param', 'iterative_imputation_iters_param', 'X', 'X_train', 'target_param', 'log_plots_param', 'display_container', 'experiment__', 'fold_generator', '_ml_usecase', 'transform_target_method_param', 'USI', '_gpu_n_jobs_param', 'y', 'pycaret_globals', 'create_model_container', 'exp_name_log', 'transform_target_param', 'prep_pipe'}
2022-11-12 20:45:47,433:INFO:Preparing display monitor
2022-11-12 20:45:47,433:INFO:Preparing display monitor
2022-11-12 20:45:47,443:INFO:Importing libraries
2022-11-12 20:45:47,443:INFO:Copying data for preprocessing
2022-11-12 20:45:47,449:INFO:Declaring preprocessing parameters
2022-11-12 20:45:47,450:WARNING:cuML not found
2022-11-12 20:45:47,450:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.3.3
2022-11-12 20:45:47,452:INFO:Creating preprocessing pipeline
2022-11-12 20:45:47,477:INFO:Preprocessing pipeline created successfully
2022-11-12 20:45:47,477:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-11-12 20:45:47,477:INFO:Creating global containers
2022-11-12 20:45:47,478:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-11-12 20:45:48,088:WARNING:Couldn't import cuml.linear_model.LinearRegression
2022-11-12 20:45:48,088:WARNING:Couldn't import cuml.linear_model.Lasso
2022-11-12 20:45:48,093:WARNING:Couldn't import cuml.linear_model.Ridge
2022-11-12 20:45:48,098:WARNING:Couldn't import cuml.linear_model.ElasticNet
2022-11-12 20:45:48,150:WARNING:Couldn't import cuml.svm.SVR
2022-11-12 20:45:48,193:WARNING:Couldn't import cuml.neighbors.KNeighborsRegressor
2022-11-12 20:45:48,193:WARNING:Couldn't import cuml.ensemble
2022-11-12 20:45:48,194:WARNING:Couldn't import xgboost.XGBRegressor
2022-11-12 20:45:48,493:WARNING:Couldn't import catboost.CatBoostRegressor
2022-11-12 20:45:48,494:WARNING:Couldn't import cuml.linear_model.LinearRegression
2022-11-12 20:45:48,495:WARNING:Couldn't import cuml.linear_model.Lasso
2022-11-12 20:45:48,501:WARNING:Couldn't import cuml.linear_model.Ridge
2022-11-12 20:45:48,507:WARNING:Couldn't import cuml.linear_model.ElasticNet
2022-11-12 20:45:48,580:WARNING:Couldn't import cuml.svm.SVR
2022-11-12 20:45:48,630:WARNING:Couldn't import cuml.neighbors.KNeighborsRegressor
2022-11-12 20:45:48,631:WARNING:Couldn't import cuml.ensemble
2022-11-12 20:45:48,632:WARNING:Couldn't import xgboost.XGBRegressor
2022-11-12 20:45:48,746:WARNING:Couldn't import catboost.CatBoostRegressor
2022-11-12 20:45:48,746:INFO:Creating grid variables
2022-11-12 20:45:48,761:INFO:create_model_container: 0
2022-11-12 20:45:48,761:INFO:master_model_container: 0
2022-11-12 20:45:48,761:INFO:display_container: 1
2022-11-12 20:45:48,766:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=['Id'],
                                      ml_usecase='regression',
                                      numerical_features=[], target='SalePrice',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_st...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='SalePrice')),
                ('fix_perfect', Remove_100(target='SalePrice')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-11-12 20:45:48,766:INFO:setup() succesfully completed......................................
2022-11-12 21:33:21,532:INFO:PyCaret Supervised Module
2022-11-12 21:33:21,533:INFO:ML Usecase: regression
2022-11-12 21:33:21,533:INFO:version 2.3.10
2022-11-12 21:33:21,533:INFO:Initializing setup()
2022-11-12 21:33:21,533:INFO:setup(target=SalePrice, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=True, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-11-12 21:33:21,533:INFO:Checking environment
2022-11-12 21:33:21,533:INFO:python_version: 3.7.8
2022-11-12 21:33:21,533:INFO:python_build: ('tags/v3.7.8:4b47a5b6ba', 'Jun 28 2020 08:53:46')
2022-11-12 21:33:21,533:INFO:machine: AMD64
2022-11-12 21:33:21,533:INFO:platform: Windows-10-10.0.19041-SP0
2022-11-12 21:33:21,538:INFO:Memory: svmem(total=17090736128, available=7580618752, percent=55.6, used=9510117376, free=7580618752)
2022-11-12 21:33:21,538:INFO:Physical Core: 8
2022-11-12 21:33:21,538:INFO:Logical Core: 16
2022-11-12 21:33:21,538:INFO:Checking libraries
2022-11-12 21:33:21,538:INFO:pd==1.3.5
2022-11-12 21:33:21,538:INFO:numpy==1.19.5
2022-11-12 21:33:21,538:INFO:sklearn==0.23.2
2022-11-12 21:33:21,538:INFO:lightgbm==3.3.3
2022-11-12 21:33:21,539:WARNING:catboost not found
2022-11-12 21:33:21,539:WARNING:xgboost not found
2022-11-12 21:33:21,539:INFO:mlflow==1.30.0
2022-11-12 21:33:21,539:INFO:Checking Exceptions
2022-11-12 21:33:21,539:INFO:Declaring global variables
2022-11-12 21:33:21,539:INFO:USI: 6527
2022-11-12 21:33:21,539:INFO:pycaret_globals: {'y', 'prep_pipe', '_all_metrics', 'transform_target_method_param', 'fold_groups_param', 'logging_param', 'fold_groups_param_full', 'imputation_regressor', 'X', 'y_test', '_all_models_internal', 'fold_shuffle_param', '_available_plots', 'fold_generator', 'fix_imbalance_method_param', 'seed', 'data_before_preprocess', 'transform_target_param', 'imputation_classifier', 'dashboard_logger', 'X_test', 'X_train', 'USI', 'y_train', 'master_model_container', 'html_param', 'display_container', '_internal_pipeline', 'iterative_imputation_iters_param', 'create_model_container', 'fix_imbalance_param', '_gpu_n_jobs_param', 'n_jobs_param', 'pycaret_globals', 'gpu_param', 'stratify_param', '_ml_usecase', 'fold_param', 'exp_name_log', '_all_models', 'experiment__', 'target_param', 'log_plots_param'}
2022-11-12 21:33:21,540:INFO:Preparing display monitor
2022-11-12 21:33:21,540:INFO:Preparing display monitor
2022-11-12 21:33:21,549:INFO:Importing libraries
2022-11-12 21:33:21,549:INFO:Copying data for preprocessing
2022-11-12 21:33:21,555:INFO:Declaring preprocessing parameters
2022-11-12 21:33:21,556:WARNING:cuML not found
2022-11-12 21:33:21,556:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.3.3
2022-11-12 21:33:21,557:INFO:Creating preprocessing pipeline
2022-11-12 21:33:21,582:INFO:Preprocessing pipeline created successfully
2022-11-12 21:33:21,582:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-11-12 21:33:21,582:INFO:Creating global containers
2022-11-12 21:33:21,583:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-11-12 21:33:22,191:WARNING:Couldn't import cuml.linear_model.LinearRegression
2022-11-12 21:33:22,192:WARNING:Couldn't import cuml.linear_model.Lasso
2022-11-12 21:33:22,197:WARNING:Couldn't import cuml.linear_model.Ridge
2022-11-12 21:33:22,201:WARNING:Couldn't import cuml.linear_model.ElasticNet
2022-11-12 21:33:22,253:WARNING:Couldn't import cuml.svm.SVR
2022-11-12 21:33:22,295:WARNING:Couldn't import cuml.neighbors.KNeighborsRegressor
2022-11-12 21:33:22,296:WARNING:Couldn't import cuml.ensemble
2022-11-12 21:33:22,296:WARNING:Couldn't import xgboost.XGBRegressor
2022-11-12 21:33:22,655:WARNING:Couldn't import catboost.CatBoostRegressor
2022-11-12 21:33:22,656:WARNING:Couldn't import cuml.linear_model.LinearRegression
2022-11-12 21:33:22,656:WARNING:Couldn't import cuml.linear_model.Lasso
2022-11-12 21:33:22,662:WARNING:Couldn't import cuml.linear_model.Ridge
2022-11-12 21:33:22,669:WARNING:Couldn't import cuml.linear_model.ElasticNet
2022-11-12 21:33:22,736:WARNING:Couldn't import cuml.svm.SVR
2022-11-12 21:33:22,783:WARNING:Couldn't import cuml.neighbors.KNeighborsRegressor
2022-11-12 21:33:22,784:WARNING:Couldn't import cuml.ensemble
2022-11-12 21:33:22,785:WARNING:Couldn't import xgboost.XGBRegressor
2022-11-12 21:33:22,901:WARNING:Couldn't import catboost.CatBoostRegressor
2022-11-12 21:33:22,901:INFO:Creating grid variables
2022-11-12 21:33:22,916:INFO:create_model_container: 0
2022-11-12 21:33:22,916:INFO:master_model_container: 0
2022-11-12 21:33:22,916:INFO:display_container: 1
2022-11-12 21:33:22,921:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=['Id'],
                                      ml_usecase='regression',
                                      numerical_features=[], target='SalePrice',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_st...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='SalePrice')),
                ('fix_perfect', Remove_100(target='SalePrice')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-11-12 21:33:22,921:INFO:setup() succesfully completed......................................
2022-11-12 22:11:35,037:INFO:PyCaret Supervised Module
2022-11-12 22:11:35,037:INFO:ML Usecase: regression
2022-11-12 22:11:35,037:INFO:version 2.3.10
2022-11-12 22:11:35,037:INFO:Initializing setup()
2022-11-12 22:11:35,037:INFO:setup(target=SalePrice, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=kfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=True, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2022-11-12 22:11:35,037:INFO:Checking environment
2022-11-12 22:11:35,037:INFO:python_version: 3.7.8
2022-11-12 22:11:35,037:INFO:python_build: ('tags/v3.7.8:4b47a5b6ba', 'Jun 28 2020 08:53:46')
2022-11-12 22:11:35,037:INFO:machine: AMD64
2022-11-12 22:11:35,037:INFO:platform: Windows-10-10.0.19041-SP0
2022-11-12 22:11:35,043:INFO:Memory: svmem(total=17090736128, available=6133899264, percent=64.1, used=10956836864, free=6133899264)
2022-11-12 22:11:35,043:INFO:Physical Core: 8
2022-11-12 22:11:35,043:INFO:Logical Core: 16
2022-11-12 22:11:35,043:INFO:Checking libraries
2022-11-12 22:11:35,043:INFO:pd==1.3.5
2022-11-12 22:11:35,043:INFO:numpy==1.19.5
2022-11-12 22:11:35,043:INFO:sklearn==0.23.2
2022-11-12 22:11:35,044:INFO:lightgbm==3.3.3
2022-11-12 22:11:35,044:WARNING:catboost not found
2022-11-12 22:11:35,045:WARNING:xgboost not found
2022-11-12 22:11:35,045:INFO:mlflow==1.30.0
2022-11-12 22:11:35,045:INFO:Checking Exceptions
2022-11-12 22:11:35,045:INFO:Declaring global variables
2022-11-12 22:11:35,045:INFO:USI: 1855
2022-11-12 22:11:35,045:INFO:pycaret_globals: {'logging_param', 'exp_name_log', 'USI', 'html_param', '_all_metrics', 'transform_target_param', 'fold_generator', 'dashboard_logger', 'X_train', '_gpu_n_jobs_param', 'imputation_regressor', '_ml_usecase', 'y_test', 'experiment__', 'target_param', 'fold_param', 'imputation_classifier', 'y_train', 'fix_imbalance_param', 'fix_imbalance_method_param', '_internal_pipeline', 'X', 'gpu_param', 'display_container', 'n_jobs_param', 'pycaret_globals', 'y', 'create_model_container', '_available_plots', 'log_plots_param', '_all_models_internal', 'X_test', '_all_models', 'fold_groups_param', 'prep_pipe', 'seed', 'transform_target_method_param', 'iterative_imputation_iters_param', 'fold_shuffle_param', 'master_model_container', 'stratify_param', 'fold_groups_param_full', 'data_before_preprocess'}
2022-11-12 22:11:35,045:INFO:Preparing display monitor
2022-11-12 22:11:35,045:INFO:Preparing display monitor
2022-11-12 22:11:35,056:INFO:Importing libraries
2022-11-12 22:11:35,056:INFO:Copying data for preprocessing
2022-11-12 22:11:35,062:INFO:Declaring preprocessing parameters
2022-11-12 22:11:35,062:WARNING:cuML not found
2022-11-12 22:11:35,063:WARNING:cuML is outdated or not found. Required version is >=0.15, got 3.3.3
2022-11-12 22:11:35,064:INFO:Creating preprocessing pipeline
2022-11-12 22:11:35,089:INFO:Preprocessing pipeline created successfully
2022-11-12 22:11:35,089:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2022-11-12 22:11:35,089:INFO:Creating global containers
2022-11-12 22:11:35,090:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2022-11-12 22:11:35,705:WARNING:Couldn't import cuml.linear_model.LinearRegression
2022-11-12 22:11:35,706:WARNING:Couldn't import cuml.linear_model.Lasso
2022-11-12 22:11:35,711:WARNING:Couldn't import cuml.linear_model.Ridge
2022-11-12 22:11:35,716:WARNING:Couldn't import cuml.linear_model.ElasticNet
2022-11-12 22:11:35,768:WARNING:Couldn't import cuml.svm.SVR
2022-11-12 22:11:35,811:WARNING:Couldn't import cuml.neighbors.KNeighborsRegressor
2022-11-12 22:11:35,812:WARNING:Couldn't import cuml.ensemble
2022-11-12 22:11:35,812:WARNING:Couldn't import xgboost.XGBRegressor
2022-11-12 22:11:36,047:WARNING:Couldn't import catboost.CatBoostRegressor
2022-11-12 22:11:36,048:WARNING:Couldn't import cuml.linear_model.LinearRegression
2022-11-12 22:11:36,049:WARNING:Couldn't import cuml.linear_model.Lasso
2022-11-12 22:11:36,055:WARNING:Couldn't import cuml.linear_model.Ridge
2022-11-12 22:11:36,061:WARNING:Couldn't import cuml.linear_model.ElasticNet
2022-11-12 22:11:36,133:WARNING:Couldn't import cuml.svm.SVR
2022-11-12 22:11:36,180:WARNING:Couldn't import cuml.neighbors.KNeighborsRegressor
2022-11-12 22:11:36,180:WARNING:Couldn't import cuml.ensemble
2022-11-12 22:11:36,181:WARNING:Couldn't import xgboost.XGBRegressor
2022-11-12 22:11:36,302:WARNING:Couldn't import catboost.CatBoostRegressor
2022-11-12 22:11:36,302:INFO:Creating grid variables
2022-11-12 22:11:36,316:INFO:create_model_container: 0
2022-11-12 22:11:36,316:INFO:master_model_container: 0
2022-11-12 22:11:36,316:INFO:display_container: 1
2022-11-12 22:11:36,321:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=['Id'],
                                      ml_usecase='regression',
                                      numerical_features=[], target='SalePrice',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_st...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='SalePrice')),
                ('fix_perfect', Remove_100(target='SalePrice')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2022-11-12 22:11:36,321:INFO:setup() succesfully completed......................................
